/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 78.0, "minX": 0.0, "maxY": 115480.0, "series": [{"data": [[0.0, 195.0], [0.1, 195.0], [0.2, 197.0], [0.3, 197.0], [0.4, 197.0], [0.5, 197.0], [0.6, 197.0], [0.7, 198.0], [0.8, 201.0], [0.9, 201.0], [1.0, 204.0], [1.1, 204.0], [1.2, 209.0], [1.3, 209.0], [1.4, 212.0], [1.5, 212.0], [1.6, 213.0], [1.7, 213.0], [1.8, 218.0], [1.9, 218.0], [2.0, 318.0], [2.1, 318.0], [2.2, 340.0], [2.3, 340.0], [2.4, 2136.0], [2.5, 2136.0], [2.6, 2228.0], [2.7, 2228.0], [2.8, 2228.0], [2.9, 2283.0], [3.0, 2283.0], [3.1, 2283.0], [3.2, 2290.0], [3.3, 2290.0], [3.4, 2290.0], [3.5, 2308.0], [3.6, 2308.0], [3.7, 2340.0], [3.8, 2340.0], [3.9, 2356.0], [4.0, 2356.0], [4.1, 2389.0], [4.2, 2389.0], [4.3, 2440.0], [4.4, 2440.0], [4.5, 2446.0], [4.6, 2446.0], [4.7, 2451.0], [4.8, 2451.0], [4.9, 2453.0], [5.0, 2453.0], [5.1, 2526.0], [5.2, 2526.0], [5.3, 2534.0], [5.4, 2534.0], [5.5, 2562.0], [5.6, 2562.0], [5.7, 2568.0], [5.8, 2568.0], [5.9, 2603.0], [6.0, 2603.0], [6.1, 2609.0], [6.2, 2609.0], [6.3, 2626.0], [6.4, 2626.0], [6.5, 2646.0], [6.6, 2646.0], [6.7, 2656.0], [6.8, 2656.0], [6.9, 2686.0], [7.0, 2686.0], [7.1, 2728.0], [7.2, 2728.0], [7.3, 2815.0], [7.4, 2815.0], [7.5, 2871.0], [7.6, 2871.0], [7.7, 2895.0], [7.8, 2895.0], [7.9, 2942.0], [8.0, 2942.0], [8.1, 2950.0], [8.2, 2950.0], [8.3, 2967.0], [8.4, 2967.0], [8.5, 2979.0], [8.6, 2979.0], [8.7, 2985.0], [8.8, 3030.0], [8.9, 3030.0], [9.0, 3067.0], [9.1, 3067.0], [9.2, 3082.0], [9.3, 3082.0], [9.4, 3095.0], [9.5, 3095.0], [9.6, 3097.0], [9.7, 3097.0], [9.8, 3118.0], [9.9, 3118.0], [10.0, 3127.0], [10.1, 3127.0], [10.2, 3130.0], [10.3, 3130.0], [10.4, 3132.0], [10.5, 3132.0], [10.6, 3132.0], [10.7, 3132.0], [10.8, 3133.0], [10.9, 3133.0], [11.0, 3133.0], [11.1, 3133.0], [11.2, 3135.0], [11.3, 3135.0], [11.4, 3136.0], [11.5, 3136.0], [11.6, 3149.0], [11.7, 3149.0], [11.8, 3155.0], [11.9, 3155.0], [12.0, 3167.0], [12.1, 3167.0], [12.2, 3173.0], [12.3, 3173.0], [12.4, 3175.0], [12.5, 3175.0], [12.6, 3206.0], [12.7, 3206.0], [12.8, 3211.0], [12.9, 3211.0], [13.0, 3214.0], [13.1, 3214.0], [13.2, 3221.0], [13.3, 3221.0], [13.4, 3227.0], [13.5, 3227.0], [13.6, 3239.0], [13.7, 3239.0], [13.8, 3255.0], [13.9, 3255.0], [14.0, 3266.0], [14.1, 3266.0], [14.2, 3267.0], [14.3, 3267.0], [14.4, 3273.0], [14.5, 3273.0], [14.6, 3279.0], [14.7, 3279.0], [14.8, 3291.0], [14.9, 3291.0], [15.0, 3296.0], [15.1, 3296.0], [15.2, 3300.0], [15.3, 3300.0], [15.4, 3305.0], [15.5, 3305.0], [15.6, 3311.0], [15.7, 3311.0], [15.8, 3320.0], [15.9, 3320.0], [16.0, 3322.0], [16.1, 3322.0], [16.2, 3323.0], [16.3, 3323.0], [16.4, 3332.0], [16.5, 3332.0], [16.6, 3341.0], [16.7, 3341.0], [16.8, 3341.0], [16.9, 3341.0], [17.0, 3345.0], [17.1, 3345.0], [17.2, 3353.0], [17.3, 3353.0], [17.4, 3357.0], [17.5, 3357.0], [17.6, 3362.0], [17.7, 3362.0], [17.8, 3364.0], [17.9, 3364.0], [18.0, 3375.0], [18.1, 3375.0], [18.2, 3376.0], [18.3, 3376.0], [18.4, 3388.0], [18.5, 3388.0], [18.6, 3394.0], [18.7, 3394.0], [18.8, 3395.0], [18.9, 3395.0], [19.0, 3403.0], [19.1, 3403.0], [19.2, 3406.0], [19.3, 3406.0], [19.4, 3407.0], [19.5, 3407.0], [19.6, 3410.0], [19.7, 3410.0], [19.8, 3413.0], [19.9, 3413.0], [20.0, 3417.0], [20.1, 3417.0], [20.2, 3419.0], [20.3, 3419.0], [20.4, 3426.0], [20.5, 3426.0], [20.6, 3437.0], [20.7, 3437.0], [20.8, 3440.0], [20.9, 3440.0], [21.0, 3449.0], [21.1, 3449.0], [21.2, 3452.0], [21.3, 3452.0], [21.4, 3462.0], [21.5, 3462.0], [21.6, 3467.0], [21.7, 3467.0], [21.8, 3472.0], [21.9, 3472.0], [22.0, 3479.0], [22.1, 3479.0], [22.2, 3482.0], [22.3, 3482.0], [22.4, 3497.0], [22.5, 3497.0], [22.6, 3497.0], [22.7, 3497.0], [22.8, 3511.0], [22.9, 3511.0], [23.0, 3519.0], [23.1, 3519.0], [23.2, 3519.0], [23.3, 3519.0], [23.4, 3526.0], [23.5, 3526.0], [23.6, 3541.0], [23.7, 3541.0], [23.8, 3543.0], [23.9, 3543.0], [24.0, 3544.0], [24.1, 3544.0], [24.2, 3550.0], [24.3, 3550.0], [24.4, 3563.0], [24.5, 3563.0], [24.6, 3581.0], [24.7, 3581.0], [24.8, 3593.0], [24.9, 3593.0], [25.0, 3601.0], [25.1, 3601.0], [25.2, 3613.0], [25.3, 3613.0], [25.4, 3614.0], [25.5, 3614.0], [25.6, 3615.0], [25.7, 3615.0], [25.8, 3618.0], [25.9, 3618.0], [26.0, 3619.0], [26.1, 3619.0], [26.2, 3619.0], [26.3, 3619.0], [26.4, 3620.0], [26.5, 3620.0], [26.6, 3624.0], [26.7, 3624.0], [26.8, 3626.0], [26.9, 3626.0], [27.0, 3638.0], [27.1, 3638.0], [27.2, 3639.0], [27.3, 3639.0], [27.4, 3643.0], [27.5, 3643.0], [27.6, 3651.0], [27.7, 3651.0], [27.8, 3653.0], [27.9, 3653.0], [28.0, 3653.0], [28.1, 3653.0], [28.2, 3676.0], [28.3, 3676.0], [28.4, 3683.0], [28.5, 3683.0], [28.6, 3689.0], [28.7, 3689.0], [28.8, 3692.0], [28.9, 3692.0], [29.0, 3692.0], [29.1, 3692.0], [29.2, 3700.0], [29.3, 3700.0], [29.4, 3707.0], [29.5, 3707.0], [29.6, 3708.0], [29.7, 3708.0], [29.8, 3710.0], [29.9, 3710.0], [30.0, 3723.0], [30.1, 3723.0], [30.2, 3727.0], [30.3, 3727.0], [30.4, 3728.0], [30.5, 3728.0], [30.6, 3737.0], [30.7, 3737.0], [30.8, 3739.0], [30.9, 3739.0], [31.0, 3746.0], [31.1, 3746.0], [31.2, 3758.0], [31.3, 3758.0], [31.4, 3765.0], [31.5, 3765.0], [31.6, 3774.0], [31.7, 3774.0], [31.8, 3779.0], [31.9, 3779.0], [32.0, 3783.0], [32.1, 3783.0], [32.2, 3790.0], [32.3, 3790.0], [32.4, 3792.0], [32.5, 3792.0], [32.6, 3794.0], [32.7, 3794.0], [32.8, 3797.0], [32.9, 3797.0], [33.0, 3798.0], [33.1, 3798.0], [33.2, 3798.0], [33.3, 3798.0], [33.4, 3800.0], [33.5, 3800.0], [33.6, 3800.0], [33.7, 3800.0], [33.8, 3809.0], [33.9, 3809.0], [34.0, 3811.0], [34.1, 3811.0], [34.2, 3812.0], [34.3, 3812.0], [34.4, 3830.0], [34.5, 3830.0], [34.6, 3836.0], [34.7, 3836.0], [34.8, 3838.0], [34.9, 3838.0], [35.0, 3840.0], [35.1, 3840.0], [35.2, 3844.0], [35.3, 3844.0], [35.4, 3851.0], [35.5, 3851.0], [35.6, 3854.0], [35.7, 3854.0], [35.8, 3855.0], [35.9, 3855.0], [36.0, 3857.0], [36.1, 3857.0], [36.2, 3861.0], [36.3, 3861.0], [36.4, 3863.0], [36.5, 3863.0], [36.6, 3866.0], [36.7, 3866.0], [36.8, 3869.0], [36.9, 3869.0], [37.0, 3872.0], [37.1, 3872.0], [37.2, 3877.0], [37.3, 3877.0], [37.4, 3879.0], [37.5, 3879.0], [37.6, 3882.0], [37.7, 3882.0], [37.8, 3886.0], [37.9, 3886.0], [38.0, 3894.0], [38.1, 3894.0], [38.2, 3895.0], [38.3, 3895.0], [38.4, 3903.0], [38.5, 3903.0], [38.6, 3903.0], [38.7, 3903.0], [38.8, 3904.0], [38.9, 3904.0], [39.0, 3908.0], [39.1, 3908.0], [39.2, 3909.0], [39.3, 3909.0], [39.4, 3909.0], [39.5, 3912.0], [39.6, 3912.0], [39.7, 3912.0], [39.8, 3912.0], [39.9, 3916.0], [40.0, 3916.0], [40.1, 3916.0], [40.2, 3916.0], [40.3, 3916.0], [40.4, 3916.0], [40.5, 3921.0], [40.6, 3921.0], [40.7, 3924.0], [40.8, 3924.0], [40.9, 3926.0], [41.0, 3926.0], [41.1, 3927.0], [41.2, 3927.0], [41.3, 3928.0], [41.4, 3928.0], [41.5, 3931.0], [41.6, 3931.0], [41.7, 3933.0], [41.8, 3933.0], [41.9, 3936.0], [42.0, 3936.0], [42.1, 3938.0], [42.2, 3938.0], [42.3, 3939.0], [42.4, 3939.0], [42.5, 3941.0], [42.6, 3941.0], [42.7, 3941.0], [42.8, 3941.0], [42.9, 3943.0], [43.0, 3943.0], [43.1, 3943.0], [43.2, 3943.0], [43.3, 3946.0], [43.4, 3946.0], [43.5, 3946.0], [43.6, 3946.0], [43.7, 3946.0], [43.8, 3946.0], [43.9, 3946.0], [44.0, 3946.0], [44.1, 3948.0], [44.2, 3948.0], [44.3, 3950.0], [44.4, 3950.0], [44.5, 3951.0], [44.6, 3951.0], [44.7, 3953.0], [44.8, 3953.0], [44.9, 3954.0], [45.0, 3954.0], [45.1, 3955.0], [45.2, 3955.0], [45.3, 3956.0], [45.4, 3956.0], [45.5, 3957.0], [45.6, 3957.0], [45.7, 3959.0], [45.8, 3959.0], [45.9, 3959.0], [46.0, 3959.0], [46.1, 3960.0], [46.2, 3960.0], [46.3, 3960.0], [46.4, 3960.0], [46.5, 3961.0], [46.6, 3961.0], [46.7, 3962.0], [46.8, 3962.0], [46.9, 3966.0], [47.0, 3966.0], [47.1, 3967.0], [47.2, 3967.0], [47.3, 3969.0], [47.4, 3969.0], [47.5, 3970.0], [47.6, 3970.0], [47.7, 3972.0], [47.8, 3972.0], [47.9, 3976.0], [48.0, 3976.0], [48.1, 3976.0], [48.2, 3976.0], [48.3, 3977.0], [48.4, 3977.0], [48.5, 3986.0], [48.6, 3986.0], [48.7, 3986.0], [48.8, 3986.0], [48.9, 3986.0], [49.0, 3986.0], [49.1, 3987.0], [49.2, 3987.0], [49.3, 3988.0], [49.4, 3988.0], [49.5, 3989.0], [49.6, 3989.0], [49.7, 3989.0], [49.8, 3989.0], [49.9, 3991.0], [50.0, 3991.0], [50.1, 3992.0], [50.2, 3992.0], [50.3, 3994.0], [50.4, 3994.0], [50.5, 3999.0], [50.6, 3999.0], [50.7, 4002.0], [50.8, 4002.0], [50.9, 4004.0], [51.0, 4004.0], [51.1, 4005.0], [51.2, 4005.0], [51.3, 4005.0], [51.4, 4005.0], [51.5, 4006.0], [51.6, 4006.0], [51.7, 4006.0], [51.8, 4006.0], [51.9, 4008.0], [52.0, 4008.0], [52.1, 4009.0], [52.2, 4009.0], [52.3, 4010.0], [52.4, 4010.0], [52.5, 4010.0], [52.6, 4010.0], [52.7, 4012.0], [52.8, 4012.0], [52.9, 4014.0], [53.0, 4014.0], [53.1, 4014.0], [53.2, 4014.0], [53.3, 4017.0], [53.4, 4017.0], [53.5, 4019.0], [53.6, 4019.0], [53.7, 4021.0], [53.8, 4021.0], [53.9, 4024.0], [54.0, 4024.0], [54.1, 4026.0], [54.2, 4026.0], [54.3, 4030.0], [54.4, 4030.0], [54.5, 4031.0], [54.6, 4031.0], [54.7, 4034.0], [54.8, 4034.0], [54.9, 4035.0], [55.0, 4035.0], [55.1, 4036.0], [55.2, 4036.0], [55.3, 4038.0], [55.4, 4038.0], [55.5, 4040.0], [55.6, 4040.0], [55.7, 4044.0], [55.8, 4044.0], [55.9, 4044.0], [56.0, 4044.0], [56.1, 4044.0], [56.2, 4044.0], [56.3, 4045.0], [56.4, 4045.0], [56.5, 4047.0], [56.6, 4047.0], [56.7, 4049.0], [56.8, 4049.0], [56.9, 4052.0], [57.0, 4052.0], [57.1, 4052.0], [57.2, 4052.0], [57.3, 4053.0], [57.4, 4053.0], [57.5, 4055.0], [57.6, 4055.0], [57.7, 4056.0], [57.8, 4056.0], [57.9, 4057.0], [58.0, 4057.0], [58.1, 4057.0], [58.2, 4057.0], [58.3, 4058.0], [58.4, 4058.0], [58.5, 4060.0], [58.6, 4060.0], [58.7, 4061.0], [58.8, 4061.0], [58.9, 4062.0], [59.0, 4062.0], [59.1, 4063.0], [59.2, 4063.0], [59.3, 4063.0], [59.4, 4063.0], [59.5, 4065.0], [59.6, 4065.0], [59.7, 4066.0], [59.8, 4066.0], [59.9, 4067.0], [60.0, 4067.0], [60.1, 4067.0], [60.2, 4067.0], [60.3, 4068.0], [60.4, 4068.0], [60.5, 4069.0], [60.6, 4069.0], [60.7, 4071.0], [60.8, 4071.0], [60.9, 4074.0], [61.0, 4074.0], [61.1, 4078.0], [61.2, 4078.0], [61.3, 4082.0], [61.4, 4082.0], [61.5, 4084.0], [61.6, 4084.0], [61.7, 4088.0], [61.8, 4088.0], [61.9, 4093.0], [62.0, 4093.0], [62.1, 4100.0], [62.2, 4100.0], [62.3, 4106.0], [62.4, 4106.0], [62.5, 4107.0], [62.6, 4107.0], [62.7, 4124.0], [62.8, 4124.0], [62.9, 4159.0], [63.0, 4159.0], [63.1, 4162.0], [63.2, 4162.0], [63.3, 4196.0], [63.4, 4196.0], [63.5, 4205.0], [63.6, 4205.0], [63.7, 4369.0], [63.8, 4369.0], [63.9, 4409.0], [64.0, 4409.0], [64.1, 4418.0], [64.2, 4418.0], [64.3, 4427.0], [64.4, 4427.0], [64.5, 4446.0], [64.6, 4446.0], [64.7, 4462.0], [64.8, 4462.0], [64.9, 4573.0], [65.0, 4573.0], [65.1, 4668.0], [65.2, 4668.0], [65.3, 4824.0], [65.4, 4824.0], [65.5, 4827.0], [65.6, 4827.0], [65.7, 4846.0], [65.8, 4846.0], [65.9, 4908.0], [66.0, 4908.0], [66.1, 4917.0], [66.2, 4917.0], [66.3, 4953.0], [66.4, 4953.0], [66.5, 5359.0], [66.6, 5359.0], [66.7, 5829.0], [66.8, 5829.0], [66.9, 6360.0], [67.0, 6360.0], [67.1, 6585.0], [67.2, 6585.0], [67.3, 6810.0], [67.4, 6810.0], [67.5, 6833.0], [67.6, 6833.0], [67.7, 6910.0], [67.8, 6910.0], [67.9, 6919.0], [68.0, 6919.0], [68.1, 7002.0], [68.2, 7002.0], [68.3, 7027.0], [68.4, 7027.0], [68.5, 7031.0], [68.6, 7031.0], [68.7, 7037.0], [68.8, 7037.0], [68.9, 7066.0], [69.0, 7066.0], [69.1, 7090.0], [69.2, 7090.0], [69.3, 7092.0], [69.4, 7092.0], [69.5, 7097.0], [69.6, 7097.0], [69.7, 7170.0], [69.8, 7170.0], [69.9, 7172.0], [70.0, 7172.0], [70.1, 7174.0], [70.2, 7174.0], [70.3, 7237.0], [70.4, 7237.0], [70.5, 7287.0], [70.6, 7287.0], [70.7, 7293.0], [70.8, 7293.0], [70.9, 7310.0], [71.0, 7310.0], [71.1, 7324.0], [71.2, 7324.0], [71.3, 7331.0], [71.4, 7331.0], [71.5, 7335.0], [71.6, 7335.0], [71.7, 7342.0], [71.8, 7342.0], [71.9, 7345.0], [72.0, 7345.0], [72.1, 7367.0], [72.2, 7367.0], [72.3, 7368.0], [72.4, 7368.0], [72.5, 7387.0], [72.6, 7387.0], [72.7, 7411.0], [72.8, 7411.0], [72.9, 7507.0], [73.0, 7507.0], [73.1, 7514.0], [73.2, 7514.0], [73.3, 7647.0], [73.4, 7647.0], [73.5, 7657.0], [73.6, 7657.0], [73.7, 7686.0], [73.8, 7686.0], [73.9, 7781.0], [74.0, 7781.0], [74.1, 7788.0], [74.2, 7788.0], [74.3, 7822.0], [74.4, 7822.0], [74.5, 7922.0], [74.6, 7922.0], [74.7, 8668.0], [74.8, 8668.0], [74.9, 8670.0], [75.0, 8670.0], [75.1, 8767.0], [75.2, 8767.0], [75.3, 8778.0], [75.4, 8778.0], [75.5, 8803.0], [75.6, 8803.0], [75.7, 8818.0], [75.8, 8818.0], [75.9, 9629.0], [76.0, 9629.0], [76.1, 10013.0], [76.2, 10013.0], [76.3, 10381.0], [76.4, 10381.0], [76.5, 10755.0], [76.6, 10755.0], [76.7, 10851.0], [76.8, 10851.0], [76.9, 11133.0], [77.0, 11133.0], [77.1, 11505.0], [77.2, 11505.0], [77.3, 11584.0], [77.4, 11584.0], [77.5, 11762.0], [77.6, 11762.0], [77.7, 11958.0], [77.8, 11958.0], [77.9, 12644.0], [78.0, 12644.0], [78.1, 12756.0], [78.2, 12756.0], [78.3, 13321.0], [78.4, 13321.0], [78.5, 13467.0], [78.6, 13467.0], [78.7, 13474.0], [78.8, 13474.0], [78.9, 13808.0], [79.0, 13808.0], [79.1, 14132.0], [79.2, 14132.0], [79.3, 14319.0], [79.4, 14319.0], [79.5, 14426.0], [79.6, 14426.0], [79.7, 14737.0], [79.8, 14737.0], [79.9, 14787.0], [80.0, 14787.0], [80.1, 14814.0], [80.2, 14814.0], [80.3, 14850.0], [80.4, 14850.0], [80.5, 14857.0], [80.6, 14857.0], [80.7, 14888.0], [80.8, 14888.0], [80.9, 14903.0], [81.0, 14903.0], [81.1, 14970.0], [81.2, 14970.0], [81.3, 14977.0], [81.4, 14977.0], [81.5, 14990.0], [81.6, 14990.0], [81.7, 15014.0], [81.8, 15014.0], [81.9, 15028.0], [82.0, 15028.0], [82.1, 15039.0], [82.2, 15039.0], [82.3, 15040.0], [82.4, 15040.0], [82.5, 15044.0], [82.6, 15044.0], [82.7, 15098.0], [82.8, 15098.0], [82.9, 15120.0], [83.0, 15120.0], [83.1, 15138.0], [83.2, 15138.0], [83.3, 15166.0], [83.4, 15166.0], [83.5, 15222.0], [83.6, 15222.0], [83.7, 15233.0], [83.8, 15233.0], [83.9, 15443.0], [84.0, 15443.0], [84.1, 15518.0], [84.2, 15518.0], [84.3, 15572.0], [84.4, 15572.0], [84.5, 15620.0], [84.6, 15620.0], [84.7, 15706.0], [84.8, 15706.0], [84.9, 15768.0], [85.0, 15768.0], [85.1, 15777.0], [85.2, 15777.0], [85.3, 15920.0], [85.4, 15920.0], [85.5, 15932.0], [85.6, 15932.0], [85.7, 16553.0], [85.8, 16553.0], [85.9, 16708.0], [86.0, 16708.0], [86.1, 16715.0], [86.2, 16715.0], [86.3, 16785.0], [86.4, 16785.0], [86.5, 16922.0], [86.6, 16922.0], [86.7, 17609.0], [86.8, 17609.0], [86.9, 17731.0], [87.0, 17731.0], [87.1, 18083.0], [87.2, 18083.0], [87.3, 18303.0], [87.4, 18303.0], [87.5, 18607.0], [87.6, 18607.0], [87.7, 18628.0], [87.8, 18628.0], [87.9, 19156.0], [88.0, 19156.0], [88.1, 19164.0], [88.2, 19164.0], [88.3, 19272.0], [88.4, 19272.0], [88.5, 19519.0], [88.6, 19519.0], [88.7, 19724.0], [88.8, 19724.0], [88.9, 20453.0], [89.0, 20453.0], [89.1, 20615.0], [89.2, 20615.0], [89.3, 20664.0], [89.4, 20664.0], [89.5, 20868.0], [89.6, 20868.0], [89.7, 20920.0], [89.8, 20920.0], [89.9, 21075.0], [90.0, 21075.0], [90.1, 21533.0], [90.2, 21533.0], [90.3, 21714.0], [90.4, 21714.0], [90.5, 21985.0], [90.6, 21985.0], [90.7, 22002.0], [90.8, 22002.0], [90.9, 22007.0], [91.0, 22007.0], [91.1, 22028.0], [91.2, 22028.0], [91.3, 22073.0], [91.4, 22073.0], [91.5, 22076.0], [91.6, 22076.0], [91.7, 22096.0], [91.8, 22096.0], [91.9, 22096.0], [92.0, 22096.0], [92.1, 22113.0], [92.2, 22113.0], [92.3, 22169.0], [92.4, 22169.0], [92.5, 22552.0], [92.6, 22552.0], [92.7, 22586.0], [92.8, 22586.0], [92.9, 22693.0], [93.0, 22693.0], [93.1, 22702.0], [93.2, 22702.0], [93.3, 22781.0], [93.4, 22781.0], [93.5, 22812.0], [93.6, 22812.0], [93.7, 22817.0], [93.8, 22817.0], [93.9, 22879.0], [94.0, 22879.0], [94.1, 22902.0], [94.2, 22902.0], [94.3, 22974.0], [94.4, 22974.0], [94.5, 23303.0], [94.6, 23303.0], [94.7, 23356.0], [94.8, 23356.0], [94.9, 23457.0], [95.0, 23457.0], [95.1, 23457.0], [95.2, 23457.0], [95.3, 23539.0], [95.4, 23539.0], [95.5, 23800.0], [95.6, 23800.0], [95.7, 23867.0], [95.8, 23867.0], [95.9, 23907.0], [96.0, 23907.0], [96.1, 23912.0], [96.2, 23912.0], [96.3, 23981.0], [96.4, 23981.0], [96.5, 24092.0], [96.6, 24092.0], [96.7, 24160.0], [96.8, 24160.0], [96.9, 24233.0], [97.0, 24233.0], [97.1, 24279.0], [97.2, 24279.0], [97.3, 24316.0], [97.4, 24316.0], [97.5, 24446.0], [97.6, 24446.0], [97.7, 24901.0], [97.8, 24901.0], [97.9, 25237.0], [98.0, 25237.0], [98.1, 26033.0], [98.2, 26033.0], [98.3, 26799.0], [98.4, 26799.0], [98.5, 29004.0], [98.6, 29004.0], [98.7, 29790.0], [98.8, 29790.0], [98.9, 30855.0], [99.0, 30855.0], [99.1, 32005.0], [99.2, 32005.0], [99.3, 33002.0], [99.4, 33002.0], [99.5, 35249.0], [99.6, 35249.0], [99.7, 36737.0], [99.8, 36737.0], [99.9, 44477.0], [100.0, 44477.0]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[0.0, 78.0], [0.1, 78.0], [0.2, 79.0], [0.3, 79.0], [0.4, 80.0], [0.5, 80.0], [0.6, 80.0], [0.7, 81.0], [0.8, 83.0], [0.9, 83.0], [1.0, 84.0], [1.1, 84.0], [1.2, 84.0], [1.3, 84.0], [1.4, 85.0], [1.5, 85.0], [1.6, 86.0], [1.7, 86.0], [1.8, 92.0], [1.9, 92.0], [2.0, 94.0], [2.1, 94.0], [2.2, 190.0], [2.3, 190.0], [2.4, 196.0], [2.5, 196.0], [2.6, 205.0], [2.7, 205.0], [2.8, 205.0], [2.9, 286.0], [3.0, 286.0], [3.1, 295.0], [3.2, 295.0], [3.3, 296.0], [3.4, 296.0], [3.5, 387.0], [3.6, 387.0], [3.7, 425.0], [3.8, 425.0], [3.9, 462.0], [4.0, 462.0], [4.1, 1429.0], [4.2, 1429.0], [4.3, 1490.0], [4.4, 1490.0], [4.5, 1525.0], [4.6, 1525.0], [4.7, 1529.0], [4.8, 1529.0], [4.9, 1575.0], [5.0, 1575.0], [5.1, 1598.0], [5.2, 1598.0], [5.3, 1600.0], [5.4, 1600.0], [5.5, 1615.0], [5.6, 1615.0], [5.7, 1625.0], [5.8, 1625.0], [5.9, 1626.0], [6.0, 1626.0], [6.1, 1631.0], [6.2, 1631.0], [6.3, 1634.0], [6.4, 1634.0], [6.5, 1636.0], [6.6, 1636.0], [6.7, 1659.0], [6.8, 1659.0], [6.9, 1665.0], [7.0, 1665.0], [7.1, 1737.0], [7.2, 1737.0], [7.3, 1743.0], [7.4, 1743.0], [7.5, 1752.0], [7.6, 1752.0], [7.7, 1792.0], [7.8, 1792.0], [7.9, 1843.0], [8.0, 1843.0], [8.1, 1873.0], [8.2, 1873.0], [8.3, 1875.0], [8.4, 1875.0], [8.5, 1946.0], [8.6, 1946.0], [8.7, 1953.0], [8.8, 1966.0], [8.9, 1966.0], [9.0, 1969.0], [9.1, 1969.0], [9.2, 1990.0], [9.3, 1990.0], [9.4, 1991.0], [9.5, 1991.0], [9.6, 1993.0], [9.7, 1993.0], [9.8, 2060.0], [9.9, 2060.0], [10.0, 2077.0], [10.1, 2077.0], [10.2, 2085.0], [10.3, 2085.0], [10.4, 2093.0], [10.5, 2093.0], [10.6, 2112.0], [10.7, 2112.0], [10.8, 2133.0], [10.9, 2133.0], [11.0, 2134.0], [11.1, 2134.0], [11.2, 2137.0], [11.3, 2137.0], [11.4, 2141.0], [11.5, 2141.0], [11.6, 2183.0], [11.7, 2183.0], [11.8, 2190.0], [11.9, 2190.0], [12.0, 2191.0], [12.1, 2191.0], [12.2, 2256.0], [12.3, 2256.0], [12.4, 2299.0], [12.5, 2299.0], [12.6, 2328.0], [12.7, 2328.0], [12.8, 2332.0], [12.9, 2332.0], [13.0, 2340.0], [13.1, 2340.0], [13.2, 2340.0], [13.3, 2340.0], [13.4, 2369.0], [13.5, 2369.0], [13.6, 2371.0], [13.7, 2371.0], [13.8, 2384.0], [13.9, 2384.0], [14.0, 2407.0], [14.1, 2407.0], [14.2, 2413.0], [14.3, 2413.0], [14.4, 2423.0], [14.5, 2423.0], [14.6, 2431.0], [14.7, 2431.0], [14.8, 2447.0], [14.9, 2447.0], [15.0, 2458.0], [15.1, 2458.0], [15.2, 2475.0], [15.3, 2475.0], [15.4, 2482.0], [15.5, 2482.0], [15.6, 2488.0], [15.7, 2488.0], [15.8, 2493.0], [15.9, 2493.0], [16.0, 2493.0], [16.1, 2493.0], [16.2, 2497.0], [16.3, 2497.0], [16.4, 2500.0], [16.5, 2500.0], [16.6, 2516.0], [16.7, 2516.0], [16.8, 2527.0], [16.9, 2527.0], [17.0, 2540.0], [17.1, 2540.0], [17.2, 2549.0], [17.3, 2549.0], [17.4, 2561.0], [17.5, 2561.0], [17.6, 2568.0], [17.7, 2568.0], [17.8, 2570.0], [17.9, 2570.0], [18.0, 2575.0], [18.1, 2575.0], [18.2, 2581.0], [18.3, 2581.0], [18.4, 2587.0], [18.5, 2587.0], [18.6, 2611.0], [18.7, 2611.0], [18.8, 2620.0], [18.9, 2620.0], [19.0, 2624.0], [19.1, 2624.0], [19.2, 2674.0], [19.3, 2674.0], [19.4, 2803.0], [19.5, 2803.0], [19.6, 2917.0], [19.7, 2917.0], [19.8, 2944.0], [19.9, 2944.0], [20.0, 2945.0], [20.1, 2945.0], [20.2, 2959.0], [20.3, 2959.0], [20.4, 3053.0], [20.5, 3053.0], [20.6, 3068.0], [20.7, 3068.0], [20.8, 3069.0], [20.9, 3069.0], [21.0, 3085.0], [21.1, 3085.0], [21.2, 3112.0], [21.3, 3112.0], [21.4, 3117.0], [21.5, 3117.0], [21.6, 3132.0], [21.7, 3132.0], [21.8, 3134.0], [21.9, 3134.0], [22.0, 3137.0], [22.1, 3137.0], [22.2, 3145.0], [22.3, 3145.0], [22.4, 3145.0], [22.5, 3145.0], [22.6, 3149.0], [22.7, 3149.0], [22.8, 3150.0], [22.9, 3150.0], [23.0, 3155.0], [23.1, 3155.0], [23.2, 3165.0], [23.3, 3165.0], [23.4, 3168.0], [23.5, 3168.0], [23.6, 3168.0], [23.7, 3168.0], [23.8, 3173.0], [23.9, 3173.0], [24.0, 3177.0], [24.1, 3177.0], [24.2, 3178.0], [24.3, 3178.0], [24.4, 3179.0], [24.5, 3179.0], [24.6, 3183.0], [24.7, 3183.0], [24.8, 3184.0], [24.9, 3184.0], [25.0, 3188.0], [25.1, 3188.0], [25.2, 3207.0], [25.3, 3207.0], [25.4, 3210.0], [25.5, 3210.0], [25.6, 3221.0], [25.7, 3221.0], [25.8, 3231.0], [25.9, 3231.0], [26.0, 3236.0], [26.1, 3236.0], [26.2, 3242.0], [26.3, 3242.0], [26.4, 3248.0], [26.5, 3248.0], [26.6, 3249.0], [26.7, 3249.0], [26.8, 3249.0], [26.9, 3249.0], [27.0, 3255.0], [27.1, 3255.0], [27.2, 3257.0], [27.3, 3257.0], [27.4, 3270.0], [27.5, 3270.0], [27.6, 3270.0], [27.7, 3270.0], [27.8, 3271.0], [27.9, 3271.0], [28.0, 3273.0], [28.1, 3273.0], [28.2, 3276.0], [28.3, 3276.0], [28.4, 3277.0], [28.5, 3277.0], [28.6, 3286.0], [28.7, 3286.0], [28.8, 3286.0], [28.9, 3286.0], [29.0, 3288.0], [29.1, 3288.0], [29.2, 3295.0], [29.3, 3295.0], [29.4, 3300.0], [29.5, 3300.0], [29.6, 3304.0], [29.7, 3304.0], [29.8, 3305.0], [29.9, 3305.0], [30.0, 3318.0], [30.1, 3318.0], [30.2, 3323.0], [30.3, 3323.0], [30.4, 3324.0], [30.5, 3324.0], [30.6, 3325.0], [30.7, 3325.0], [30.8, 3327.0], [30.9, 3327.0], [31.0, 3328.0], [31.1, 3328.0], [31.2, 3330.0], [31.3, 3330.0], [31.4, 3333.0], [31.5, 3333.0], [31.6, 3335.0], [31.7, 3335.0], [31.8, 3339.0], [31.9, 3339.0], [32.0, 3348.0], [32.1, 3348.0], [32.2, 3364.0], [32.3, 3364.0], [32.4, 3376.0], [32.5, 3376.0], [32.6, 3376.0], [32.7, 3376.0], [32.8, 3378.0], [32.9, 3378.0], [33.0, 3381.0], [33.1, 3381.0], [33.2, 3387.0], [33.3, 3387.0], [33.4, 3391.0], [33.5, 3391.0], [33.6, 3391.0], [33.7, 3391.0], [33.8, 3394.0], [33.9, 3394.0], [34.0, 3400.0], [34.1, 3400.0], [34.2, 3402.0], [34.3, 3402.0], [34.4, 3407.0], [34.5, 3407.0], [34.6, 3412.0], [34.7, 3412.0], [34.8, 3420.0], [34.9, 3420.0], [35.0, 3426.0], [35.1, 3426.0], [35.2, 3432.0], [35.3, 3432.0], [35.4, 3434.0], [35.5, 3434.0], [35.6, 3444.0], [35.7, 3444.0], [35.8, 3446.0], [35.9, 3446.0], [36.0, 3447.0], [36.1, 3447.0], [36.2, 3448.0], [36.3, 3448.0], [36.4, 3456.0], [36.5, 3456.0], [36.6, 3458.0], [36.7, 3458.0], [36.8, 3459.0], [36.9, 3459.0], [37.0, 3459.0], [37.1, 3459.0], [37.2, 3460.0], [37.3, 3460.0], [37.4, 3462.0], [37.5, 3462.0], [37.6, 3482.0], [37.7, 3482.0], [37.8, 3482.0], [37.9, 3482.0], [38.0, 3488.0], [38.1, 3488.0], [38.2, 3488.0], [38.3, 3488.0], [38.4, 3489.0], [38.5, 3489.0], [38.6, 3490.0], [38.7, 3490.0], [38.8, 3491.0], [38.9, 3491.0], [39.0, 3492.0], [39.1, 3492.0], [39.2, 3493.0], [39.3, 3493.0], [39.4, 3494.0], [39.5, 3494.0], [39.6, 3495.0], [39.7, 3495.0], [39.8, 3501.0], [39.9, 3501.0], [40.0, 3503.0], [40.1, 3503.0], [40.2, 3504.0], [40.3, 3504.0], [40.4, 3504.0], [40.5, 3505.0], [40.6, 3505.0], [40.7, 3512.0], [40.8, 3512.0], [40.9, 3512.0], [41.0, 3512.0], [41.1, 3514.0], [41.2, 3514.0], [41.3, 3515.0], [41.4, 3515.0], [41.5, 3520.0], [41.6, 3520.0], [41.7, 3522.0], [41.8, 3522.0], [41.9, 3523.0], [42.0, 3523.0], [42.1, 3533.0], [42.2, 3533.0], [42.3, 3548.0], [42.4, 3548.0], [42.5, 3567.0], [42.6, 3567.0], [42.7, 3570.0], [42.8, 3570.0], [42.9, 3570.0], [43.0, 3570.0], [43.1, 3571.0], [43.2, 3571.0], [43.3, 3581.0], [43.4, 3581.0], [43.5, 3582.0], [43.6, 3582.0], [43.7, 3585.0], [43.8, 3585.0], [43.9, 3597.0], [44.0, 3597.0], [44.1, 3608.0], [44.2, 3608.0], [44.3, 3612.0], [44.4, 3612.0], [44.5, 3616.0], [44.6, 3616.0], [44.7, 3617.0], [44.8, 3617.0], [44.9, 3631.0], [45.0, 3631.0], [45.1, 3633.0], [45.2, 3633.0], [45.3, 3637.0], [45.4, 3637.0], [45.5, 3639.0], [45.6, 3639.0], [45.7, 3654.0], [45.8, 3654.0], [45.9, 3654.0], [46.0, 3654.0], [46.1, 3657.0], [46.2, 3657.0], [46.3, 3664.0], [46.4, 3664.0], [46.5, 3667.0], [46.6, 3667.0], [46.7, 3668.0], [46.8, 3668.0], [46.9, 3670.0], [47.0, 3670.0], [47.1, 3675.0], [47.2, 3675.0], [47.3, 3681.0], [47.4, 3681.0], [47.5, 3691.0], [47.6, 3691.0], [47.7, 3698.0], [47.8, 3698.0], [47.9, 3699.0], [48.0, 3699.0], [48.1, 3712.0], [48.2, 3712.0], [48.3, 3722.0], [48.4, 3722.0], [48.5, 3730.0], [48.6, 3730.0], [48.7, 3734.0], [48.8, 3734.0], [48.9, 3741.0], [49.0, 3741.0], [49.1, 3747.0], [49.2, 3747.0], [49.3, 3751.0], [49.4, 3751.0], [49.5, 3751.0], [49.6, 3751.0], [49.7, 3758.0], [49.8, 3758.0], [49.9, 3778.0], [50.0, 3778.0], [50.1, 3778.0], [50.2, 3778.0], [50.3, 3781.0], [50.4, 3781.0], [50.5, 3790.0], [50.6, 3790.0], [50.7, 3797.0], [50.8, 3797.0], [50.9, 3801.0], [51.0, 3801.0], [51.1, 3806.0], [51.2, 3806.0], [51.3, 3812.0], [51.4, 3812.0], [51.5, 3819.0], [51.6, 3819.0], [51.7, 3821.0], [51.8, 3821.0], [51.9, 3821.0], [52.0, 3821.0], [52.1, 3827.0], [52.2, 3827.0], [52.3, 3830.0], [52.4, 3830.0], [52.5, 3834.0], [52.6, 3834.0], [52.7, 3840.0], [52.8, 3840.0], [52.9, 3842.0], [53.0, 3842.0], [53.1, 3842.0], [53.2, 3842.0], [53.3, 3842.0], [53.4, 3842.0], [53.5, 3844.0], [53.6, 3844.0], [53.7, 3844.0], [53.8, 3844.0], [53.9, 3851.0], [54.0, 3851.0], [54.1, 3853.0], [54.2, 3853.0], [54.3, 3855.0], [54.4, 3855.0], [54.5, 3872.0], [54.6, 3872.0], [54.7, 3872.0], [54.8, 3872.0], [54.9, 3873.0], [55.0, 3873.0], [55.1, 3875.0], [55.2, 3875.0], [55.3, 3881.0], [55.4, 3881.0], [55.5, 3881.0], [55.6, 3881.0], [55.7, 3888.0], [55.8, 3888.0], [55.9, 3888.0], [56.0, 3888.0], [56.1, 3891.0], [56.2, 3891.0], [56.3, 3892.0], [56.4, 3892.0], [56.5, 3893.0], [56.6, 3893.0], [56.7, 3893.0], [56.8, 3893.0], [56.9, 3895.0], [57.0, 3895.0], [57.1, 3896.0], [57.2, 3896.0], [57.3, 3903.0], [57.4, 3903.0], [57.5, 3905.0], [57.6, 3905.0], [57.7, 3907.0], [57.8, 3907.0], [57.9, 3919.0], [58.0, 3919.0], [58.1, 3923.0], [58.2, 3923.0], [58.3, 3929.0], [58.4, 3929.0], [58.5, 3936.0], [58.6, 3936.0], [58.7, 3939.0], [58.8, 3939.0], [58.9, 3940.0], [59.0, 3940.0], [59.1, 3940.0], [59.2, 3940.0], [59.3, 3951.0], [59.4, 3951.0], [59.5, 3951.0], [59.6, 3951.0], [59.7, 3952.0], [59.8, 3952.0], [59.9, 3953.0], [60.0, 3953.0], [60.1, 3953.0], [60.2, 3953.0], [60.3, 3956.0], [60.4, 3956.0], [60.5, 3956.0], [60.6, 3956.0], [60.7, 3958.0], [60.8, 3958.0], [60.9, 3958.0], [61.0, 3958.0], [61.1, 3958.0], [61.2, 3958.0], [61.3, 3958.0], [61.4, 3958.0], [61.5, 3959.0], [61.6, 3959.0], [61.7, 3959.0], [61.8, 3959.0], [61.9, 3967.0], [62.0, 3967.0], [62.1, 3968.0], [62.2, 3968.0], [62.3, 3968.0], [62.4, 3968.0], [62.5, 3969.0], [62.6, 3969.0], [62.7, 3970.0], [62.8, 3970.0], [62.9, 3975.0], [63.0, 3975.0], [63.1, 3976.0], [63.2, 3976.0], [63.3, 3976.0], [63.4, 3976.0], [63.5, 3978.0], [63.6, 3978.0], [63.7, 3981.0], [63.8, 3981.0], [63.9, 3981.0], [64.0, 3981.0], [64.1, 3982.0], [64.2, 3982.0], [64.3, 3983.0], [64.4, 3983.0], [64.5, 3984.0], [64.6, 3984.0], [64.7, 3986.0], [64.8, 3986.0], [64.9, 3987.0], [65.0, 3987.0], [65.1, 3987.0], [65.2, 3987.0], [65.3, 3993.0], [65.4, 3993.0], [65.5, 3993.0], [65.6, 3993.0], [65.7, 3996.0], [65.8, 3996.0], [65.9, 3998.0], [66.0, 3998.0], [66.1, 4001.0], [66.2, 4001.0], [66.3, 4002.0], [66.4, 4002.0], [66.5, 4002.0], [66.6, 4002.0], [66.7, 4003.0], [66.8, 4003.0], [66.9, 4003.0], [67.0, 4003.0], [67.1, 4004.0], [67.2, 4004.0], [67.3, 4007.0], [67.4, 4007.0], [67.5, 4011.0], [67.6, 4011.0], [67.7, 4013.0], [67.8, 4013.0], [67.9, 4013.0], [68.0, 4013.0], [68.1, 4015.0], [68.2, 4015.0], [68.3, 4016.0], [68.4, 4016.0], [68.5, 4016.0], [68.6, 4016.0], [68.7, 4018.0], [68.8, 4018.0], [68.9, 4022.0], [69.0, 4022.0], [69.1, 4023.0], [69.2, 4023.0], [69.3, 4026.0], [69.4, 4026.0], [69.5, 4028.0], [69.6, 4028.0], [69.7, 4033.0], [69.8, 4033.0], [69.9, 4036.0], [70.0, 4036.0], [70.1, 4037.0], [70.2, 4037.0], [70.3, 4038.0], [70.4, 4038.0], [70.5, 4040.0], [70.6, 4040.0], [70.7, 4041.0], [70.8, 4041.0], [70.9, 4041.0], [71.0, 4041.0], [71.1, 4042.0], [71.2, 4042.0], [71.3, 4043.0], [71.4, 4043.0], [71.5, 4045.0], [71.6, 4045.0], [71.7, 4046.0], [71.8, 4046.0], [71.9, 4052.0], [72.0, 4052.0], [72.1, 4054.0], [72.2, 4054.0], [72.3, 4054.0], [72.4, 4054.0], [72.5, 4054.0], [72.6, 4054.0], [72.7, 4055.0], [72.8, 4055.0], [72.9, 4055.0], [73.0, 4055.0], [73.1, 4057.0], [73.2, 4057.0], [73.3, 4057.0], [73.4, 4057.0], [73.5, 4057.0], [73.6, 4057.0], [73.7, 4057.0], [73.8, 4057.0], [73.9, 4058.0], [74.0, 4058.0], [74.1, 4059.0], [74.2, 4059.0], [74.3, 4064.0], [74.4, 4064.0], [74.5, 4066.0], [74.6, 4066.0], [74.7, 4066.0], [74.8, 4066.0], [74.9, 4068.0], [75.0, 4068.0], [75.1, 4068.0], [75.2, 4068.0], [75.3, 4069.0], [75.4, 4069.0], [75.5, 4069.0], [75.6, 4069.0], [75.7, 4069.0], [75.8, 4069.0], [75.9, 4070.0], [76.0, 4070.0], [76.1, 4070.0], [76.2, 4070.0], [76.3, 4070.0], [76.4, 4070.0], [76.5, 4072.0], [76.6, 4072.0], [76.7, 4077.0], [76.8, 4077.0], [76.9, 4078.0], [77.0, 4078.0], [77.1, 4078.0], [77.2, 4078.0], [77.3, 4089.0], [77.4, 4089.0], [77.5, 4098.0], [77.6, 4098.0], [77.7, 4119.0], [77.8, 4119.0], [77.9, 4126.0], [78.0, 4126.0], [78.1, 4896.0], [78.2, 4896.0], [78.3, 4931.0], [78.4, 4931.0], [78.5, 4943.0], [78.6, 4943.0], [78.7, 4954.0], [78.8, 4954.0], [78.9, 5505.0], [79.0, 5505.0], [79.1, 6226.0], [79.2, 6226.0], [79.3, 6547.0], [79.4, 6547.0], [79.5, 6651.0], [79.6, 6651.0], [79.7, 6751.0], [79.8, 6751.0], [79.9, 6783.0], [80.0, 6783.0], [80.1, 6793.0], [80.2, 6793.0], [80.3, 6837.0], [80.4, 6837.0], [80.5, 6955.0], [80.6, 6955.0], [80.7, 7054.0], [80.8, 7054.0], [80.9, 7157.0], [81.0, 7157.0], [81.1, 7221.0], [81.2, 7221.0], [81.3, 7286.0], [81.4, 7286.0], [81.5, 7412.0], [81.6, 7412.0], [81.7, 7573.0], [81.8, 7573.0], [81.9, 7617.0], [82.0, 7617.0], [82.1, 7919.0], [82.2, 7919.0], [82.3, 7986.0], [82.4, 7986.0], [82.5, 8022.0], [82.6, 8022.0], [82.7, 8032.0], [82.8, 8032.0], [82.9, 8046.0], [83.0, 8046.0], [83.1, 8071.0], [83.2, 8071.0], [83.3, 8385.0], [83.4, 8385.0], [83.5, 8468.0], [83.6, 8468.0], [83.7, 8571.0], [83.8, 8571.0], [83.9, 8688.0], [84.0, 8688.0], [84.1, 10317.0], [84.2, 10317.0], [84.3, 10543.0], [84.4, 10543.0], [84.5, 10595.0], [84.6, 10595.0], [84.7, 10960.0], [84.8, 10960.0], [84.9, 11105.0], [85.0, 11105.0], [85.1, 11382.0], [85.2, 11382.0], [85.3, 11501.0], [85.4, 11501.0], [85.5, 11766.0], [85.6, 11766.0], [85.7, 11809.0], [85.8, 11809.0], [85.9, 11905.0], [86.0, 11905.0], [86.1, 12720.0], [86.2, 12720.0], [86.3, 12774.0], [86.4, 12774.0], [86.5, 14082.0], [86.6, 14082.0], [86.7, 14246.0], [86.8, 14246.0], [86.9, 14416.0], [87.0, 14416.0], [87.1, 14499.0], [87.2, 14499.0], [87.3, 14725.0], [87.4, 14725.0], [87.5, 14919.0], [87.6, 14919.0], [87.7, 14994.0], [87.8, 14994.0], [87.9, 15073.0], [88.0, 15073.0], [88.1, 15133.0], [88.2, 15133.0], [88.3, 15601.0], [88.4, 15601.0], [88.5, 15602.0], [88.6, 15602.0], [88.7, 15619.0], [88.8, 15619.0], [88.9, 15671.0], [89.0, 15671.0], [89.1, 15751.0], [89.2, 15751.0], [89.3, 15752.0], [89.4, 15752.0], [89.5, 15754.0], [89.6, 15754.0], [89.7, 15771.0], [89.8, 15771.0], [89.9, 15827.0], [90.0, 15827.0], [90.1, 15852.0], [90.2, 15852.0], [90.3, 16235.0], [90.4, 16235.0], [90.5, 16906.0], [90.6, 16906.0], [90.7, 17023.0], [90.8, 17023.0], [90.9, 17049.0], [91.0, 17049.0], [91.1, 17051.0], [91.2, 17051.0], [91.3, 17187.0], [91.4, 17187.0], [91.5, 18416.0], [91.6, 18416.0], [91.7, 18942.0], [91.8, 18942.0], [91.9, 20902.0], [92.0, 20902.0], [92.1, 21003.0], [92.2, 21003.0], [92.3, 21144.0], [92.4, 21144.0], [92.5, 21263.0], [92.6, 21263.0], [92.7, 21428.0], [92.8, 21428.0], [92.9, 21668.0], [93.0, 21668.0], [93.1, 21679.0], [93.2, 21679.0], [93.3, 21912.0], [93.4, 21912.0], [93.5, 21958.0], [93.6, 21958.0], [93.7, 21991.0], [93.8, 21991.0], [93.9, 22017.0], [94.0, 22017.0], [94.1, 22136.0], [94.2, 22136.0], [94.3, 22227.0], [94.4, 22227.0], [94.5, 22277.0], [94.6, 22277.0], [94.7, 22282.0], [94.8, 22282.0], [94.9, 22309.0], [95.0, 22309.0], [95.1, 22330.0], [95.2, 22330.0], [95.3, 22361.0], [95.4, 22361.0], [95.5, 22400.0], [95.6, 22400.0], [95.7, 22435.0], [95.8, 22435.0], [95.9, 22446.0], [96.0, 22446.0], [96.1, 22458.0], [96.2, 22458.0], [96.3, 22606.0], [96.4, 22606.0], [96.5, 22606.0], [96.6, 22606.0], [96.7, 22642.0], [96.8, 22642.0], [96.9, 22744.0], [97.0, 22744.0], [97.1, 22808.0], [97.2, 22808.0], [97.3, 23165.0], [97.4, 23165.0], [97.5, 23332.0], [97.6, 23332.0], [97.7, 24444.0], [97.8, 24444.0], [97.9, 24589.0], [98.0, 24589.0], [98.1, 24878.0], [98.2, 24878.0], [98.3, 29154.0], [98.4, 29154.0], [98.5, 31409.0], [98.6, 31409.0], [98.7, 32805.0], [98.8, 32805.0], [98.9, 33093.0], [99.0, 33093.0], [99.1, 33468.0], [99.2, 33468.0], [99.3, 33673.0], [99.4, 33673.0], [99.5, 36675.0], [99.6, 36675.0], [99.7, 37165.0], [99.8, 37165.0], [99.9, 49089.0], [100.0, 49089.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[0.0, 1787.0], [0.1, 1787.0], [0.2, 1930.0], [0.3, 1930.0], [0.4, 1945.0], [0.5, 1945.0], [0.6, 1945.0], [0.7, 1982.0], [0.8, 2027.0], [0.9, 2027.0], [1.0, 2154.0], [1.1, 2154.0], [1.2, 2216.0], [1.3, 2216.0], [1.4, 2265.0], [1.5, 2265.0], [1.6, 2278.0], [1.7, 2278.0], [1.8, 2304.0], [1.9, 2304.0], [2.0, 2340.0], [2.1, 2340.0], [2.2, 2381.0], [2.3, 2381.0], [2.4, 2397.0], [2.5, 2397.0], [2.6, 2445.0], [2.7, 2445.0], [2.8, 2445.0], [2.9, 2455.0], [3.0, 2455.0], [3.1, 2462.0], [3.2, 2462.0], [3.3, 2473.0], [3.4, 2473.0], [3.5, 2475.0], [3.6, 2475.0], [3.7, 2534.0], [3.8, 2534.0], [3.9, 2573.0], [4.0, 2573.0], [4.1, 2632.0], [4.2, 2632.0], [4.3, 2638.0], [4.4, 2638.0], [4.5, 2742.0], [4.6, 2742.0], [4.7, 2851.0], [4.8, 2851.0], [4.9, 3064.0], [5.0, 3064.0], [5.1, 3208.0], [5.2, 3208.0], [5.3, 3344.0], [5.4, 3344.0], [5.5, 3371.0], [5.6, 3371.0], [5.7, 3373.0], [5.8, 3373.0], [5.9, 4332.0], [6.0, 4332.0], [6.1, 4436.0], [6.2, 4436.0], [6.3, 5398.0], [6.4, 5398.0], [6.5, 5690.0], [6.6, 5690.0], [6.7, 5934.0], [6.8, 5934.0], [6.9, 6073.0], [7.0, 6073.0], [7.1, 6217.0], [7.2, 6217.0], [7.3, 6351.0], [7.4, 6351.0], [7.5, 6364.0], [7.6, 6364.0], [7.7, 6425.0], [7.8, 6425.0], [7.9, 6433.0], [8.0, 6433.0], [8.1, 6468.0], [8.2, 6468.0], [8.3, 6573.0], [8.4, 6573.0], [8.5, 6617.0], [8.6, 6617.0], [8.7, 6706.0], [8.8, 6857.0], [8.9, 6857.0], [9.0, 6880.0], [9.1, 6880.0], [9.2, 7394.0], [9.3, 7394.0], [9.4, 7488.0], [9.5, 7488.0], [9.6, 9046.0], [9.7, 9046.0], [9.8, 10094.0], [9.9, 10094.0], [10.0, 12537.0], [10.1, 12537.0], [10.2, 13133.0], [10.3, 13133.0], [10.4, 13171.0], [10.5, 13171.0], [10.6, 13862.0], [10.7, 13862.0], [10.8, 14116.0], [10.9, 14116.0], [11.0, 14383.0], [11.1, 14383.0], [11.2, 14597.0], [11.3, 14597.0], [11.4, 14652.0], [11.5, 14652.0], [11.6, 14749.0], [11.7, 14749.0], [11.8, 14772.0], [11.9, 14772.0], [12.0, 14808.0], [12.1, 14808.0], [12.2, 14885.0], [12.3, 14885.0], [12.4, 14888.0], [12.5, 14888.0], [12.6, 14980.0], [12.7, 14980.0], [12.8, 15089.0], [12.9, 15089.0], [13.0, 15093.0], [13.1, 15093.0], [13.2, 15131.0], [13.3, 15131.0], [13.4, 15148.0], [13.5, 15148.0], [13.6, 15175.0], [13.7, 15175.0], [13.8, 15219.0], [13.9, 15219.0], [14.0, 15307.0], [14.1, 15307.0], [14.2, 15334.0], [14.3, 15334.0], [14.4, 15588.0], [14.5, 15588.0], [14.6, 15662.0], [14.7, 15662.0], [14.8, 15765.0], [14.9, 15765.0], [15.0, 15913.0], [15.1, 15913.0], [15.2, 16075.0], [15.3, 16075.0], [15.4, 16150.0], [15.5, 16150.0], [15.6, 16160.0], [15.7, 16160.0], [15.8, 16213.0], [15.9, 16213.0], [16.0, 16312.0], [16.1, 16312.0], [16.2, 16455.0], [16.3, 16455.0], [16.4, 16485.0], [16.5, 16485.0], [16.6, 16499.0], [16.7, 16499.0], [16.8, 16507.0], [16.9, 16507.0], [17.0, 16605.0], [17.1, 16605.0], [17.2, 16624.0], [17.3, 16624.0], [17.4, 16632.0], [17.5, 16632.0], [17.6, 16681.0], [17.7, 16681.0], [17.8, 16697.0], [17.9, 16697.0], [18.0, 16701.0], [18.1, 16701.0], [18.2, 16731.0], [18.3, 16731.0], [18.4, 16774.0], [18.5, 16774.0], [18.6, 17141.0], [18.7, 17141.0], [18.8, 17204.0], [18.9, 17204.0], [19.0, 17280.0], [19.1, 17280.0], [19.2, 17516.0], [19.3, 17516.0], [19.4, 17554.0], [19.5, 17554.0], [19.6, 17600.0], [19.7, 17600.0], [19.8, 17620.0], [19.9, 17620.0], [20.0, 17684.0], [20.1, 17684.0], [20.2, 17719.0], [20.3, 17719.0], [20.4, 17735.0], [20.5, 17735.0], [20.6, 17852.0], [20.7, 17852.0], [20.8, 17900.0], [20.9, 17900.0], [21.0, 18019.0], [21.1, 18019.0], [21.2, 18051.0], [21.3, 18051.0], [21.4, 18519.0], [21.5, 18519.0], [21.6, 18533.0], [21.7, 18533.0], [21.8, 18605.0], [21.9, 18605.0], [22.0, 18648.0], [22.1, 18648.0], [22.2, 18951.0], [22.3, 18951.0], [22.4, 19200.0], [22.5, 19200.0], [22.6, 19214.0], [22.7, 19214.0], [22.8, 19260.0], [22.9, 19260.0], [23.0, 19396.0], [23.1, 19396.0], [23.2, 19447.0], [23.3, 19447.0], [23.4, 19911.0], [23.5, 19911.0], [23.6, 20003.0], [23.7, 20003.0], [23.8, 20068.0], [23.9, 20068.0], [24.0, 20144.0], [24.1, 20144.0], [24.2, 20260.0], [24.3, 20260.0], [24.4, 20278.0], [24.5, 20278.0], [24.6, 20755.0], [24.7, 20755.0], [24.8, 21072.0], [24.9, 21072.0], [25.0, 22357.0], [25.1, 22357.0], [25.2, 22371.0], [25.3, 22371.0], [25.4, 22479.0], [25.5, 22479.0], [25.6, 22587.0], [25.7, 22587.0], [25.8, 22791.0], [25.9, 22791.0], [26.0, 23007.0], [26.1, 23007.0], [26.2, 23243.0], [26.3, 23243.0], [26.4, 23650.0], [26.5, 23650.0], [26.6, 23664.0], [26.7, 23664.0], [26.8, 23982.0], [26.9, 23982.0], [27.0, 24091.0], [27.1, 24091.0], [27.2, 24137.0], [27.3, 24137.0], [27.4, 24152.0], [27.5, 24152.0], [27.6, 24347.0], [27.7, 24347.0], [27.8, 24596.0], [27.9, 24596.0], [28.0, 24623.0], [28.1, 24623.0], [28.2, 24696.0], [28.3, 24696.0], [28.4, 24854.0], [28.5, 24854.0], [28.6, 25227.0], [28.7, 25227.0], [28.8, 25377.0], [28.9, 25377.0], [29.0, 25617.0], [29.1, 25617.0], [29.2, 25687.0], [29.3, 25687.0], [29.4, 25774.0], [29.5, 25774.0], [29.6, 25825.0], [29.7, 25825.0], [29.8, 25862.0], [29.9, 25862.0], [30.0, 25872.0], [30.1, 25872.0], [30.2, 25974.0], [30.3, 25974.0], [30.4, 26064.0], [30.5, 26064.0], [30.6, 26080.0], [30.7, 26080.0], [30.8, 26227.0], [30.9, 26227.0], [31.0, 26227.0], [31.1, 26227.0], [31.2, 26317.0], [31.3, 26317.0], [31.4, 26375.0], [31.5, 26375.0], [31.6, 26380.0], [31.7, 26380.0], [31.8, 26394.0], [31.9, 26394.0], [32.0, 26399.0], [32.1, 26399.0], [32.2, 26450.0], [32.3, 26450.0], [32.4, 26455.0], [32.5, 26455.0], [32.6, 26494.0], [32.7, 26494.0], [32.8, 26540.0], [32.9, 26540.0], [33.0, 26547.0], [33.1, 26547.0], [33.2, 26553.0], [33.3, 26553.0], [33.4, 26570.0], [33.5, 26570.0], [33.6, 26624.0], [33.7, 26624.0], [33.8, 26686.0], [33.9, 26686.0], [34.0, 26708.0], [34.1, 26708.0], [34.2, 26768.0], [34.3, 26768.0], [34.4, 26786.0], [34.5, 26786.0], [34.6, 26904.0], [34.7, 26904.0], [34.8, 26912.0], [34.9, 26912.0], [35.0, 27043.0], [35.1, 27043.0], [35.2, 27168.0], [35.3, 27168.0], [35.4, 27231.0], [35.5, 27231.0], [35.6, 27232.0], [35.7, 27232.0], [35.8, 27237.0], [35.9, 27237.0], [36.0, 27258.0], [36.1, 27258.0], [36.2, 27429.0], [36.3, 27429.0], [36.4, 27548.0], [36.5, 27548.0], [36.6, 27656.0], [36.7, 27656.0], [36.8, 27671.0], [36.9, 27671.0], [37.0, 27853.0], [37.1, 27853.0], [37.2, 27868.0], [37.3, 27868.0], [37.4, 27876.0], [37.5, 27876.0], [37.6, 27917.0], [37.7, 27917.0], [37.8, 27975.0], [37.9, 27975.0], [38.0, 28121.0], [38.1, 28121.0], [38.2, 28286.0], [38.3, 28286.0], [38.4, 28286.0], [38.5, 28331.0], [38.6, 28331.0], [38.7, 28621.0], [38.8, 28621.0], [38.9, 28714.0], [39.0, 28714.0], [39.1, 28826.0], [39.2, 28826.0], [39.3, 28880.0], [39.4, 28880.0], [39.5, 28925.0], [39.6, 28925.0], [39.7, 28961.0], [39.8, 28961.0], [39.9, 29005.0], [40.0, 29005.0], [40.1, 29080.0], [40.2, 29080.0], [40.3, 29120.0], [40.4, 29120.0], [40.5, 29138.0], [40.6, 29138.0], [40.7, 29197.0], [40.8, 29197.0], [40.9, 29471.0], [41.0, 29471.0], [41.1, 29530.0], [41.2, 29530.0], [41.3, 29555.0], [41.4, 29555.0], [41.5, 29709.0], [41.6, 29709.0], [41.7, 30047.0], [41.8, 30047.0], [41.9, 30527.0], [42.0, 30527.0], [42.1, 30617.0], [42.2, 30617.0], [42.3, 30622.0], [42.4, 30622.0], [42.5, 30752.0], [42.6, 30752.0], [42.7, 30784.0], [42.8, 30784.0], [42.9, 31027.0], [43.0, 31027.0], [43.1, 31362.0], [43.2, 31362.0], [43.3, 31497.0], [43.4, 31497.0], [43.5, 31509.0], [43.6, 31509.0], [43.7, 31710.0], [43.8, 31710.0], [43.9, 31769.0], [44.0, 31769.0], [44.1, 32359.0], [44.2, 32359.0], [44.3, 32378.0], [44.4, 32378.0], [44.5, 32605.0], [44.6, 32605.0], [44.7, 32678.0], [44.8, 32678.0], [44.9, 32693.0], [45.0, 32693.0], [45.1, 32719.0], [45.2, 32719.0], [45.3, 32777.0], [45.4, 32777.0], [45.5, 32865.0], [45.6, 32865.0], [45.7, 32889.0], [45.8, 32889.0], [45.9, 33077.0], [46.0, 33077.0], [46.1, 33123.0], [46.2, 33123.0], [46.3, 33278.0], [46.4, 33278.0], [46.5, 33283.0], [46.6, 33283.0], [46.7, 33523.0], [46.8, 33523.0], [46.9, 33589.0], [47.0, 33589.0], [47.1, 33688.0], [47.2, 33688.0], [47.3, 34157.0], [47.4, 34157.0], [47.5, 34172.0], [47.6, 34172.0], [47.7, 34432.0], [47.8, 34432.0], [47.9, 34503.0], [48.0, 34503.0], [48.1, 34544.0], [48.2, 34544.0], [48.3, 34582.0], [48.4, 34582.0], [48.5, 34630.0], [48.6, 34630.0], [48.7, 34745.0], [48.8, 34745.0], [48.9, 34759.0], [49.0, 34759.0], [49.1, 34769.0], [49.2, 34769.0], [49.3, 34835.0], [49.4, 34835.0], [49.5, 34889.0], [49.6, 34889.0], [49.7, 34954.0], [49.8, 34954.0], [49.9, 35095.0], [50.0, 35095.0], [50.1, 35239.0], [50.2, 35239.0], [50.3, 35337.0], [50.4, 35337.0], [50.5, 35361.0], [50.6, 35361.0], [50.7, 35385.0], [50.8, 35385.0], [50.9, 35470.0], [51.0, 35470.0], [51.1, 35847.0], [51.2, 35847.0], [51.3, 35950.0], [51.4, 35950.0], [51.5, 36063.0], [51.6, 36063.0], [51.7, 36206.0], [51.8, 36206.0], [51.9, 36293.0], [52.0, 36293.0], [52.1, 36310.0], [52.2, 36310.0], [52.3, 36312.0], [52.4, 36312.0], [52.5, 36376.0], [52.6, 36376.0], [52.7, 36426.0], [52.8, 36426.0], [52.9, 36549.0], [53.0, 36549.0], [53.1, 36564.0], [53.2, 36564.0], [53.3, 36725.0], [53.4, 36725.0], [53.5, 36849.0], [53.6, 36849.0], [53.7, 37018.0], [53.8, 37018.0], [53.9, 37128.0], [54.0, 37128.0], [54.1, 37139.0], [54.2, 37139.0], [54.3, 37186.0], [54.4, 37186.0], [54.5, 37335.0], [54.6, 37335.0], [54.7, 37593.0], [54.8, 37593.0], [54.9, 38128.0], [55.0, 38128.0], [55.1, 38264.0], [55.2, 38264.0], [55.3, 38511.0], [55.4, 38511.0], [55.5, 38545.0], [55.6, 38545.0], [55.7, 38673.0], [55.8, 38673.0], [55.9, 38734.0], [56.0, 38734.0], [56.1, 38737.0], [56.2, 38737.0], [56.3, 38877.0], [56.4, 38877.0], [56.5, 38973.0], [56.6, 38973.0], [56.7, 39022.0], [56.8, 39022.0], [56.9, 39129.0], [57.0, 39129.0], [57.1, 39499.0], [57.2, 39499.0], [57.3, 39600.0], [57.4, 39600.0], [57.5, 39624.0], [57.6, 39624.0], [57.7, 39670.0], [57.8, 39670.0], [57.9, 39802.0], [58.0, 39802.0], [58.1, 39824.0], [58.2, 39824.0], [58.3, 40086.0], [58.4, 40086.0], [58.5, 40124.0], [58.6, 40124.0], [58.7, 40249.0], [58.8, 40249.0], [58.9, 40257.0], [59.0, 40257.0], [59.1, 40391.0], [59.2, 40391.0], [59.3, 40583.0], [59.4, 40583.0], [59.5, 40590.0], [59.6, 40590.0], [59.7, 40594.0], [59.8, 40594.0], [59.9, 40627.0], [60.0, 40627.0], [60.1, 40650.0], [60.2, 40650.0], [60.3, 40898.0], [60.4, 40898.0], [60.5, 41009.0], [60.6, 41009.0], [60.7, 41017.0], [60.8, 41017.0], [60.9, 41161.0], [61.0, 41161.0], [61.1, 41163.0], [61.2, 41163.0], [61.3, 41200.0], [61.4, 41200.0], [61.5, 41233.0], [61.6, 41233.0], [61.7, 41320.0], [61.8, 41320.0], [61.9, 41448.0], [62.0, 41448.0], [62.1, 41644.0], [62.2, 41644.0], [62.3, 41660.0], [62.4, 41660.0], [62.5, 41714.0], [62.6, 41714.0], [62.7, 41756.0], [62.8, 41756.0], [62.9, 41918.0], [63.0, 41918.0], [63.1, 42001.0], [63.2, 42001.0], [63.3, 42042.0], [63.4, 42042.0], [63.5, 42065.0], [63.6, 42065.0], [63.7, 42107.0], [63.8, 42107.0], [63.9, 42173.0], [64.0, 42173.0], [64.1, 42250.0], [64.2, 42250.0], [64.3, 42391.0], [64.4, 42391.0], [64.5, 42486.0], [64.6, 42486.0], [64.7, 42559.0], [64.8, 42559.0], [64.9, 42608.0], [65.0, 42608.0], [65.1, 42800.0], [65.2, 42800.0], [65.3, 42803.0], [65.4, 42803.0], [65.5, 42938.0], [65.6, 42938.0], [65.7, 42980.0], [65.8, 42980.0], [65.9, 43283.0], [66.0, 43283.0], [66.1, 43333.0], [66.2, 43333.0], [66.3, 43588.0], [66.4, 43588.0], [66.5, 43610.0], [66.6, 43610.0], [66.7, 43677.0], [66.8, 43677.0], [66.9, 43770.0], [67.0, 43770.0], [67.1, 43964.0], [67.2, 43964.0], [67.3, 44108.0], [67.4, 44108.0], [67.5, 44525.0], [67.6, 44525.0], [67.7, 44765.0], [67.8, 44765.0], [67.9, 45261.0], [68.0, 45261.0], [68.1, 45427.0], [68.2, 45427.0], [68.3, 45467.0], [68.4, 45467.0], [68.5, 47687.0], [68.6, 47687.0], [68.7, 47707.0], [68.8, 47707.0], [68.9, 47842.0], [69.0, 47842.0], [69.1, 47984.0], [69.2, 47984.0], [69.3, 48346.0], [69.4, 48346.0], [69.5, 48445.0], [69.6, 48445.0], [69.7, 48509.0], [69.8, 48509.0], [69.9, 49010.0], [70.0, 49010.0], [70.1, 49052.0], [70.2, 49052.0], [70.3, 49291.0], [70.4, 49291.0], [70.5, 49377.0], [70.6, 49377.0], [70.7, 49607.0], [70.8, 49607.0], [70.9, 49808.0], [71.0, 49808.0], [71.1, 49813.0], [71.2, 49813.0], [71.3, 49819.0], [71.4, 49819.0], [71.5, 49862.0], [71.6, 49862.0], [71.7, 49922.0], [71.8, 49922.0], [71.9, 50093.0], [72.0, 50093.0], [72.1, 50101.0], [72.2, 50101.0], [72.3, 50188.0], [72.4, 50188.0], [72.5, 50223.0], [72.6, 50223.0], [72.7, 50248.0], [72.8, 50248.0], [72.9, 50389.0], [73.0, 50389.0], [73.1, 50416.0], [73.2, 50416.0], [73.3, 50442.0], [73.4, 50442.0], [73.5, 50506.0], [73.6, 50506.0], [73.7, 50524.0], [73.8, 50524.0], [73.9, 50582.0], [74.0, 50582.0], [74.1, 50836.0], [74.2, 50836.0], [74.3, 50964.0], [74.4, 50964.0], [74.5, 51033.0], [74.6, 51033.0], [74.7, 51086.0], [74.8, 51086.0], [74.9, 51215.0], [75.0, 51215.0], [75.1, 51593.0], [75.2, 51593.0], [75.3, 51760.0], [75.4, 51760.0], [75.5, 51936.0], [75.6, 51936.0], [75.7, 52571.0], [75.8, 52571.0], [75.9, 53078.0], [76.0, 53078.0], [76.1, 53112.0], [76.2, 53112.0], [76.3, 53337.0], [76.4, 53337.0], [76.5, 53584.0], [76.6, 53584.0], [76.7, 53733.0], [76.8, 53733.0], [76.9, 53738.0], [77.0, 53738.0], [77.1, 54048.0], [77.2, 54048.0], [77.3, 54264.0], [77.4, 54264.0], [77.5, 54401.0], [77.6, 54401.0], [77.7, 54446.0], [77.8, 54446.0], [77.9, 54481.0], [78.0, 54481.0], [78.1, 54519.0], [78.2, 54519.0], [78.3, 54551.0], [78.4, 54551.0], [78.5, 54557.0], [78.6, 54557.0], [78.7, 54581.0], [78.8, 54581.0], [78.9, 54692.0], [79.0, 54692.0], [79.1, 54700.0], [79.2, 54700.0], [79.3, 54801.0], [79.4, 54801.0], [79.5, 54893.0], [79.6, 54893.0], [79.7, 54979.0], [79.8, 54979.0], [79.9, 55023.0], [80.0, 55023.0], [80.1, 55135.0], [80.2, 55135.0], [80.3, 55180.0], [80.4, 55180.0], [80.5, 55377.0], [80.6, 55377.0], [80.7, 55620.0], [80.8, 55620.0], [80.9, 55648.0], [81.0, 55648.0], [81.1, 55728.0], [81.2, 55728.0], [81.3, 55736.0], [81.4, 55736.0], [81.5, 55814.0], [81.6, 55814.0], [81.7, 55881.0], [81.8, 55881.0], [81.9, 56014.0], [82.0, 56014.0], [82.1, 56317.0], [82.2, 56317.0], [82.3, 56598.0], [82.4, 56598.0], [82.5, 56656.0], [82.6, 56656.0], [82.7, 56710.0], [82.8, 56710.0], [82.9, 56896.0], [83.0, 56896.0], [83.1, 57015.0], [83.2, 57015.0], [83.3, 57453.0], [83.4, 57453.0], [83.5, 57915.0], [83.6, 57915.0], [83.7, 57927.0], [83.8, 57927.0], [83.9, 58071.0], [84.0, 58071.0], [84.1, 58264.0], [84.2, 58264.0], [84.3, 58458.0], [84.4, 58458.0], [84.5, 58620.0], [84.6, 58620.0], [84.7, 59460.0], [84.8, 59460.0], [84.9, 59545.0], [85.0, 59545.0], [85.1, 59678.0], [85.2, 59678.0], [85.3, 59717.0], [85.4, 59717.0], [85.5, 59753.0], [85.6, 59753.0], [85.7, 59997.0], [85.8, 59997.0], [85.9, 60117.0], [86.0, 60117.0], [86.1, 60160.0], [86.2, 60160.0], [86.3, 60238.0], [86.4, 60238.0], [86.5, 60727.0], [86.6, 60727.0], [86.7, 61738.0], [86.8, 61738.0], [86.9, 61781.0], [87.0, 61781.0], [87.1, 61895.0], [87.2, 61895.0], [87.3, 61914.0], [87.4, 61914.0], [87.5, 62227.0], [87.6, 62227.0], [87.7, 62236.0], [87.8, 62236.0], [87.9, 62315.0], [88.0, 62315.0], [88.1, 62480.0], [88.2, 62480.0], [88.3, 62510.0], [88.4, 62510.0], [88.5, 62516.0], [88.6, 62516.0], [88.7, 62520.0], [88.8, 62520.0], [88.9, 62646.0], [89.0, 62646.0], [89.1, 62651.0], [89.2, 62651.0], [89.3, 62704.0], [89.4, 62704.0], [89.5, 62706.0], [89.6, 62706.0], [89.7, 62798.0], [89.8, 62798.0], [89.9, 62857.0], [90.0, 62857.0], [90.1, 62896.0], [90.2, 62896.0], [90.3, 62912.0], [90.4, 62912.0], [90.5, 62960.0], [90.6, 62960.0], [90.7, 62988.0], [90.8, 62988.0], [90.9, 63011.0], [91.0, 63011.0], [91.1, 63070.0], [91.2, 63070.0], [91.3, 63124.0], [91.4, 63124.0], [91.5, 63135.0], [91.6, 63135.0], [91.7, 63143.0], [91.8, 63143.0], [91.9, 63154.0], [92.0, 63154.0], [92.1, 63189.0], [92.2, 63189.0], [92.3, 63205.0], [92.4, 63205.0], [92.5, 63278.0], [92.6, 63278.0], [92.7, 63280.0], [92.8, 63280.0], [92.9, 63294.0], [93.0, 63294.0], [93.1, 63440.0], [93.2, 63440.0], [93.3, 63444.0], [93.4, 63444.0], [93.5, 63447.0], [93.6, 63447.0], [93.7, 63448.0], [93.8, 63448.0], [93.9, 63485.0], [94.0, 63485.0], [94.1, 63487.0], [94.2, 63487.0], [94.3, 63491.0], [94.4, 63491.0], [94.5, 63494.0], [94.6, 63494.0], [94.7, 63513.0], [94.8, 63513.0], [94.9, 63551.0], [95.0, 63551.0], [95.1, 63553.0], [95.2, 63553.0], [95.3, 63664.0], [95.4, 63664.0], [95.5, 63675.0], [95.6, 63675.0], [95.7, 63744.0], [95.8, 63744.0], [95.9, 63759.0], [96.0, 63759.0], [96.1, 63801.0], [96.2, 63801.0], [96.3, 63825.0], [96.4, 63825.0], [96.5, 64060.0], [96.6, 64060.0], [96.7, 64298.0], [96.8, 64298.0], [96.9, 64439.0], [97.0, 64439.0], [97.1, 65461.0], [97.2, 65461.0], [97.3, 65527.0], [97.4, 65527.0], [97.5, 65942.0], [97.6, 65942.0], [97.7, 71027.0], [97.8, 71027.0], [97.9, 103198.0], [98.0, 103198.0], [98.1, 103275.0], [98.2, 103275.0], [98.3, 103665.0], [98.4, 103665.0], [98.5, 103965.0], [98.6, 103965.0], [98.7, 103984.0], [98.8, 103984.0], [98.9, 104162.0], [99.0, 104162.0], [99.1, 104191.0], [99.2, 104191.0], [99.3, 104508.0], [99.4, 104508.0], [99.5, 104854.0], [99.6, 104854.0], [99.7, 108123.0], [99.8, 108123.0], [99.9, 115480.0], [100.0, 115480.0]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 61.0, "series": [{"data": [[100.0, 4.0], [36700.0, 1.0], [200.0, 6.0], [300.0, 2.0], [2100.0, 1.0], [2200.0, 4.0], [2300.0, 4.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 6.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 5.0], [3000.0, 5.0], [3100.0, 14.0], [3200.0, 13.0], [3300.0, 19.0], [3400.0, 19.0], [3500.0, 11.0], [3700.0, 21.0], [3600.0, 21.0], [3800.0, 25.0], [3900.0, 61.0], [4000.0, 57.0], [4100.0, 7.0], [4200.0, 1.0], [4300.0, 1.0], [4600.0, 1.0], [4400.0, 5.0], [4500.0, 1.0], [4800.0, 3.0], [4900.0, 3.0], [5300.0, 1.0], [5800.0, 1.0], [6300.0, 1.0], [6500.0, 1.0], [6800.0, 2.0], [6900.0, 2.0], [7000.0, 8.0], [7100.0, 3.0], [7300.0, 9.0], [7200.0, 3.0], [7400.0, 1.0], [7600.0, 3.0], [7500.0, 2.0], [7900.0, 1.0], [7800.0, 1.0], [7700.0, 2.0], [8700.0, 2.0], [8600.0, 2.0], [8800.0, 2.0], [9600.0, 1.0], [10000.0, 1.0], [10700.0, 1.0], [10300.0, 1.0], [11100.0, 1.0], [10800.0, 1.0], [11500.0, 2.0], [11700.0, 1.0], [11900.0, 1.0], [12700.0, 1.0], [12600.0, 1.0], [13300.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [14300.0, 1.0], [14100.0, 1.0], [14800.0, 4.0], [14700.0, 2.0], [14400.0, 1.0], [15000.0, 6.0], [14900.0, 4.0], [15100.0, 3.0], [15200.0, 2.0], [15400.0, 1.0], [15700.0, 3.0], [15600.0, 1.0], [15500.0, 2.0], [15900.0, 2.0], [16700.0, 3.0], [16900.0, 1.0], [16500.0, 1.0], [18000.0, 1.0], [17700.0, 1.0], [17600.0, 1.0], [18300.0, 1.0], [19100.0, 2.0], [18600.0, 2.0], [19200.0, 1.0], [19500.0, 1.0], [20400.0, 1.0], [19700.0, 1.0], [21500.0, 1.0], [20800.0, 1.0], [20600.0, 2.0], [20900.0, 1.0], [21000.0, 1.0], [22100.0, 2.0], [22000.0, 7.0], [22500.0, 2.0], [21900.0, 1.0], [21700.0, 1.0], [22600.0, 1.0], [22900.0, 2.0], [22800.0, 3.0], [22700.0, 2.0], [23500.0, 1.0], [23400.0, 2.0], [23300.0, 2.0], [23900.0, 3.0], [24200.0, 2.0], [24000.0, 1.0], [24400.0, 1.0], [23800.0, 2.0], [24300.0, 1.0], [24100.0, 1.0], [25200.0, 1.0], [24900.0, 1.0], [26000.0, 1.0], [26700.0, 1.0], [29000.0, 1.0], [29700.0, 1.0], [30800.0, 1.0], [32000.0, 1.0], [33000.0, 1.0], [35200.0, 1.0], [44400.0, 1.0]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[0.0, 11.0], [100.0, 2.0], [37100.0, 1.0], [200.0, 4.0], [300.0, 1.0], [400.0, 2.0], [1400.0, 2.0], [1500.0, 4.0], [1600.0, 9.0], [1700.0, 4.0], [1800.0, 3.0], [1900.0, 7.0], [2000.0, 4.0], [2100.0, 8.0], [2300.0, 7.0], [2200.0, 2.0], [2400.0, 12.0], [2500.0, 11.0], [2600.0, 4.0], [2800.0, 1.0], [2900.0, 4.0], [3000.0, 4.0], [3100.0, 20.0], [3300.0, 23.0], [3200.0, 21.0], [3400.0, 29.0], [3500.0, 21.0], [3600.0, 20.0], [3700.0, 14.0], [3800.0, 32.0], [3900.0, 44.0], [4000.0, 58.0], [4100.0, 2.0], [4800.0, 1.0], [4900.0, 3.0], [5500.0, 1.0], [6200.0, 1.0], [6600.0, 1.0], [6500.0, 1.0], [6900.0, 1.0], [6700.0, 3.0], [6800.0, 1.0], [7100.0, 1.0], [7000.0, 1.0], [7200.0, 2.0], [7400.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7900.0, 2.0], [8000.0, 4.0], [8500.0, 1.0], [8400.0, 1.0], [8300.0, 1.0], [8600.0, 1.0], [10500.0, 2.0], [10300.0, 1.0], [11100.0, 1.0], [10900.0, 1.0], [11300.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [11900.0, 1.0], [11800.0, 1.0], [12700.0, 2.0], [14000.0, 1.0], [14200.0, 1.0], [14400.0, 2.0], [14700.0, 1.0], [14900.0, 2.0], [15100.0, 1.0], [15000.0, 1.0], [15700.0, 4.0], [15800.0, 2.0], [15600.0, 4.0], [16200.0, 1.0], [17100.0, 1.0], [16900.0, 1.0], [17000.0, 3.0], [18400.0, 1.0], [18900.0, 1.0], [21200.0, 1.0], [21000.0, 1.0], [20900.0, 1.0], [21400.0, 1.0], [21100.0, 1.0], [22400.0, 4.0], [21900.0, 3.0], [22300.0, 3.0], [21600.0, 2.0], [22200.0, 3.0], [22000.0, 1.0], [22100.0, 1.0], [23300.0, 1.0], [23100.0, 1.0], [22600.0, 3.0], [22700.0, 1.0], [22800.0, 1.0], [24500.0, 1.0], [24400.0, 1.0], [24800.0, 1.0], [29100.0, 1.0], [31400.0, 1.0], [33400.0, 1.0], [33000.0, 1.0], [33600.0, 1.0], [32800.0, 1.0], [36600.0, 1.0], [49000.0, 1.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[65900.0, 1.0], [34500.0, 3.0], [34100.0, 2.0], [35300.0, 3.0], [34900.0, 1.0], [36500.0, 2.0], [37300.0, 1.0], [38100.0, 1.0], [38500.0, 2.0], [38900.0, 1.0], [40500.0, 3.0], [40100.0, 1.0], [41700.0, 2.0], [41300.0, 1.0], [42100.0, 2.0], [42900.0, 2.0], [42500.0, 1.0], [43300.0, 1.0], [44100.0, 1.0], [43700.0, 1.0], [44500.0, 1.0], [47700.0, 1.0], [48500.0, 1.0], [49300.0, 1.0], [50500.0, 3.0], [50100.0, 2.0], [50900.0, 1.0], [51700.0, 1.0], [52500.0, 1.0], [53300.0, 1.0], [53700.0, 2.0], [54500.0, 4.0], [54900.0, 1.0], [55300.0, 1.0], [55700.0, 2.0], [56500.0, 1.0], [59700.0, 2.0], [60100.0, 2.0], [61700.0, 2.0], [62500.0, 3.0], [62900.0, 3.0], [63700.0, 2.0], [115400.0, 1.0], [1700.0, 1.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 4.0], [2200.0, 3.0], [2400.0, 5.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [3300.0, 3.0], [3200.0, 1.0], [4300.0, 1.0], [4400.0, 1.0], [5300.0, 1.0], [5600.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 3.0], [6500.0, 1.0], [6600.0, 1.0], [104100.0, 2.0], [6800.0, 2.0], [6700.0, 1.0], [108100.0, 1.0], [7300.0, 1.0], [7400.0, 1.0], [9000.0, 1.0], [10000.0, 1.0], [12500.0, 1.0], [13100.0, 2.0], [13800.0, 1.0], [14100.0, 1.0], [14300.0, 1.0], [14700.0, 2.0], [14800.0, 3.0], [14600.0, 1.0], [14500.0, 1.0], [15000.0, 2.0], [15100.0, 3.0], [14900.0, 1.0], [15300.0, 2.0], [15200.0, 1.0], [15600.0, 1.0], [15500.0, 1.0], [15700.0, 1.0], [16300.0, 1.0], [15900.0, 1.0], [16000.0, 1.0], [16100.0, 2.0], [16200.0, 1.0], [16400.0, 3.0], [16600.0, 5.0], [17200.0, 2.0], [17600.0, 3.0], [18000.0, 2.0], [17800.0, 1.0], [18600.0, 2.0], [19200.0, 3.0], [19400.0, 1.0], [20000.0, 2.0], [20200.0, 2.0], [21000.0, 1.0], [22400.0, 1.0], [23000.0, 1.0], [23200.0, 1.0], [23600.0, 2.0], [24000.0, 1.0], [24600.0, 2.0], [25200.0, 1.0], [24800.0, 1.0], [25800.0, 3.0], [26000.0, 2.0], [25600.0, 2.0], [26400.0, 3.0], [26200.0, 2.0], [26600.0, 2.0], [27200.0, 4.0], [27000.0, 1.0], [27400.0, 1.0], [27600.0, 2.0], [27800.0, 3.0], [28600.0, 1.0], [28200.0, 1.0], [29000.0, 2.0], [28800.0, 2.0], [29400.0, 1.0], [30000.0, 1.0], [30600.0, 2.0], [31000.0, 1.0], [31400.0, 1.0], [32600.0, 3.0], [32800.0, 2.0], [33200.0, 2.0], [33600.0, 1.0], [34800.0, 2.0], [34400.0, 1.0], [35200.0, 1.0], [36000.0, 1.0], [36400.0, 1.0], [36800.0, 1.0], [38800.0, 1.0], [39600.0, 3.0], [40000.0, 1.0], [40800.0, 1.0], [41200.0, 2.0], [41600.0, 2.0], [42000.0, 3.0], [42400.0, 1.0], [42800.0, 2.0], [43600.0, 2.0], [43200.0, 1.0], [45200.0, 1.0], [47600.0, 1.0], [48400.0, 1.0], [49600.0, 1.0], [49200.0, 1.0], [50400.0, 2.0], [50000.0, 1.0], [50800.0, 1.0], [51200.0, 1.0], [54000.0, 1.0], [54800.0, 2.0], [54400.0, 3.0], [55600.0, 2.0], [56000.0, 1.0], [56800.0, 1.0], [58000.0, 1.0], [58400.0, 1.0], [59600.0, 1.0], [62400.0, 1.0], [63200.0, 4.0], [62800.0, 2.0], [63600.0, 2.0], [64000.0, 1.0], [64400.0, 1.0], [103200.0, 1.0], [104800.0, 1.0], [103100.0, 1.0], [103900.0, 2.0], [33100.0, 1.0], [33500.0, 2.0], [34700.0, 3.0], [35900.0, 1.0], [36300.0, 3.0], [36700.0, 1.0], [37100.0, 3.0], [37500.0, 1.0], [38700.0, 2.0], [39100.0, 1.0], [40300.0, 1.0], [41100.0, 2.0], [41900.0, 1.0], [42300.0, 1.0], [43500.0, 1.0], [43900.0, 1.0], [44700.0, 1.0], [47900.0, 1.0], [48300.0, 1.0], [49900.0, 1.0], [50300.0, 1.0], [51500.0, 1.0], [51900.0, 1.0], [53100.0, 1.0], [53500.0, 1.0], [54700.0, 1.0], [55100.0, 2.0], [56300.0, 1.0], [56700.0, 1.0], [57900.0, 2.0], [59900.0, 1.0], [59500.0, 1.0], [60700.0, 1.0], [61900.0, 1.0], [62700.0, 3.0], [62300.0, 1.0], [63100.0, 5.0], [63500.0, 3.0], [65500.0, 1.0], [71000.0, 1.0], [104500.0, 1.0], [16500.0, 1.0], [16700.0, 3.0], [17100.0, 1.0], [17700.0, 2.0], [17500.0, 2.0], [17900.0, 1.0], [18500.0, 2.0], [18900.0, 1.0], [19300.0, 1.0], [20100.0, 1.0], [19900.0, 1.0], [20700.0, 1.0], [22300.0, 2.0], [22500.0, 1.0], [22700.0, 1.0], [23900.0, 1.0], [24300.0, 1.0], [24100.0, 2.0], [24500.0, 1.0], [25300.0, 1.0], [25900.0, 1.0], [26300.0, 5.0], [26500.0, 4.0], [25700.0, 1.0], [26700.0, 3.0], [26900.0, 2.0], [27100.0, 1.0], [27500.0, 1.0], [27900.0, 2.0], [28300.0, 1.0], [28100.0, 1.0], [28700.0, 1.0], [28900.0, 2.0], [29100.0, 3.0], [29500.0, 2.0], [29700.0, 1.0], [30500.0, 1.0], [30700.0, 2.0], [31300.0, 1.0], [31700.0, 2.0], [31500.0, 1.0], [32300.0, 2.0], [32700.0, 2.0], [33000.0, 1.0], [34600.0, 1.0], [35400.0, 1.0], [35000.0, 1.0], [35800.0, 1.0], [36200.0, 2.0], [37000.0, 1.0], [38200.0, 1.0], [38600.0, 1.0], [39000.0, 1.0], [39800.0, 2.0], [39400.0, 1.0], [40200.0, 2.0], [40600.0, 2.0], [41000.0, 2.0], [41400.0, 1.0], [42200.0, 1.0], [42600.0, 1.0], [45400.0, 2.0], [47800.0, 1.0], [49000.0, 2.0], [49800.0, 4.0], [50200.0, 2.0], [51000.0, 2.0], [53000.0, 1.0], [54200.0, 1.0], [55000.0, 1.0], [54600.0, 1.0], [55800.0, 2.0], [56600.0, 1.0], [57000.0, 1.0], [57400.0, 1.0], [58200.0, 1.0], [58600.0, 1.0], [59400.0, 1.0], [60200.0, 1.0], [61800.0, 1.0], [62200.0, 2.0], [62600.0, 2.0], [63000.0, 2.0], [63400.0, 8.0], [63800.0, 2.0], [64200.0, 1.0], [65400.0, 1.0], [103600.0, 1.0]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 115400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1459.0, "series": [{"data": [[0.0, 32.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1459.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 7.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.6969696969697, "minX": 1.7394342E12, "maxY": 491.47252747252736, "series": [{"data": [[1.7394342E12, 491.47252747252736], [1.73943432E12, 6.6969696969697], [1.73943426E12, 281.8505836575874]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943432E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 78.0, "minX": 1.0, "maxY": 115480.0, "series": [{"data": [[2.0, 340.0], [3.0, 212.0], [5.0, 208.5], [6.0, 209.0], [8.0, 198.0], [10.0, 196.0], [11.0, 209.5], [14.0, 17428.0], [16.0, 8963.5], [32.0, 8433.2], [66.0, 4935.0], [71.0, 4853.0], [75.0, 4446.0], [73.0, 4573.0], [79.0, 4163.666666666667], [77.0, 4369.0], [76.0, 4432.666666666667], [81.0, 4017.5], [80.0, 4106.5], [87.0, 3608.0], [86.0, 3692.0], [85.0, 3794.0], [91.0, 3320.0], [95.0, 3056.0], [94.0, 3148.6666666666665], [93.0, 3227.0], [92.0, 3328.6363636363635], [99.0, 3132.0], [98.0, 3133.0], [96.0, 3113.5], [106.0, 3067.0], [105.0, 3355.0], [104.0, 3323.0], [108.0, 9629.0], [113.0, 3884.5], [119.0, 9298.666666666666], [118.0, 6433.0], [117.0, 4044.0], [120.0, 11762.0], [126.0, 11763.0], [135.0, 11461.5], [131.0, 2440.0], [130.0, 2372.5], [128.0, 2453.0], [143.0, 2562.0], [138.0, 21239.0], [151.0, 2612.0], [146.0, 2530.0], [159.0, 13089.0], [156.0, 2950.0], [167.0, 19272.0], [166.0, 4067.0], [164.0, 3924.0], [163.0, 25042.333333333332], [161.0, 3498.6666666666665], [160.0, 3178.3333333333335], [174.0, 3986.0], [170.0, 3943.0], [169.0, 3945.0], [168.0, 3984.75], [178.0, 5134.0], [177.0, 17226.666666666668], [188.0, 3972.0], [205.0, 3857.0], [201.0, 6018.0], [215.0, 11038.666666666668], [214.0, 7237.0], [213.0, 10734.333333333334], [222.0, 3710.0], [220.0, 13467.0], [230.0, 3319.0], [229.0, 3341.0], [228.0, 3427.6], [227.0, 3543.0], [225.0, 3634.75], [238.0, 22702.0], [237.0, 13741.0], [236.0, 23800.0], [234.0, 16473.5], [232.0, 6864.0], [246.0, 11453.666666666666], [244.0, 3482.0], [243.0, 15657.0], [242.0, 13913.5], [241.0, 24901.0], [240.0, 36737.0], [255.0, 13693.0], [254.0, 22138.0], [271.0, 14449.0], [270.0, 21485.8], [268.0, 6833.0], [264.0, 19164.0], [263.0, 14371.0], [262.0, 18607.0], [261.0, 6360.0], [256.0, 23719.0], [283.0, 20868.0], [282.0, 7066.0], [278.0, 23457.0], [277.0, 23392.5], [272.0, 14419.0], [303.0, 22096.0], [300.0, 5189.0], [299.0, 16715.0], [298.0, 22076.0], [297.0, 22073.0], [296.0, 25338.0], [294.0, 5114.0], [289.0, 7037.0], [317.0, 3614.0], [315.0, 15572.0], [312.0, 9475.25], [306.0, 15233.0], [305.0, 15141.5], [323.0, 11887.666666666666], [333.0, 4024.0], [335.0, 4071.0], [332.0, 6229.0], [322.0, 3865.0], [320.0, 9266.0], [331.0, 4058.0], [328.0, 15663.0], [327.0, 3941.6666666666665], [326.0, 9853.0], [325.0, 5897.833333333333], [324.0, 3871.6666666666665], [349.0, 4064.5], [348.0, 4006.0], [347.0, 3947.0], [346.0, 16922.0], [341.0, 3986.0], [339.0, 8690.333333333334], [337.0, 4030.0], [336.0, 4049.0], [367.0, 3643.0], [365.0, 3779.0], [364.0, 7580.0], [362.0, 3935.5], [358.0, 4044.0], [356.0, 4031.0], [353.0, 4052.0], [382.0, 13357.5], [381.0, 3949.5], [379.0, 7597.4], [378.0, 6272.5], [377.0, 3949.0], [376.0, 3941.0], [374.0, 3863.0], [372.0, 14586.5], [371.0, 5239.928571428572], [370.0, 13958.5], [398.0, 6460.25], [399.0, 7778.0], [397.0, 7367.0], [396.0, 11525.2], [395.0, 6022.0], [392.0, 13987.5], [386.0, 13470.5], [385.0, 30855.0], [384.0, 16106.666666666668], [415.0, 14857.0], [414.0, 3388.0], [413.0, 12103.5], [409.0, 13213.0], [406.0, 3364.0], [404.0, 3407.0], [402.0, 3452.0], [400.0, 3613.0], [431.0, 3739.3333333333335], [430.0, 16468.0], [429.0, 3638.0], [423.0, 10379.6], [421.0, 15720.999999999998], [419.0, 14787.0], [416.0, 3375.0], [446.0, 3689.0], [443.0, 7512.0], [441.0, 3467.0], [439.0, 3544.0], [438.0, 3618.5], [437.0, 3653.0], [436.0, 3747.3333333333335], [435.0, 3739.0], [463.0, 3897.5], [461.0, 3683.0], [460.0, 6271.0], [459.0, 7387.0], [452.0, 3440.0], [448.0, 3543.3333333333335], [476.0, 11584.0], [475.0, 4060.6666666666665], [474.0, 4078.0], [473.0, 4061.0], [471.0, 3904.0], [464.0, 3946.0], [470.0, 3961.0], [469.0, 3994.222222222222], [467.0, 3939.0], [465.0, 4013.6], [494.0, 4079.0], [492.0, 4067.0], [491.0, 4060.0], [490.0, 3957.0], [488.0, 6604.333333333333], [487.0, 7718.25], [486.0, 8289.0], [484.0, 2985.0], [482.0, 3497.0], [481.0, 10851.0], [500.0, 2922.862068965517], [1.0, 197.0]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[299.58600000000007, 7745.670000000003]], "isOverall": false, "label": "cancellation-Aggregated", "isController": false}, {"data": [[2.0, 92.0], [3.0, 84.0], [5.0, 89.0], [6.0, 78.0], [7.0, 86.0], [8.0, 425.0], [9.0, 81.0], [10.0, 85.0], [11.0, 79.0], [12.0, 7919.0], [13.0, 196.0], [14.0, 190.0], [15.0, 205.0], [16.0, 83.0], [17.0, 387.0], [18.0, 11809.0], [19.0, 462.0], [20.0, 295.0], [21.0, 296.0], [22.0, 286.0], [23.0, 17023.0], [24.0, 15619.0], [25.0, 17049.0], [26.0, 17051.0], [27.0, 16906.0], [28.0, 15751.0], [29.0, 17187.0], [30.0, 6783.0], [31.0, 15671.0], [33.0, 37165.0], [32.0, 6837.0], [35.0, 1634.0], [34.0, 12720.0], [37.0, 1752.0], [36.0, 1625.0], [39.0, 1740.0], [41.0, 5505.0], [40.0, 1946.0], [43.0, 1993.0], [42.0, 1991.0], [45.0, 1966.0], [44.0, 1969.0], [47.0, 2093.0], [46.0, 1953.0], [49.0, 2133.0], [48.0, 2112.0], [51.0, 2137.0], [50.0, 2141.0], [52.0, 2085.0], [55.0, 2183.0], [54.0, 2190.5], [57.0, 2371.0], [56.0, 2299.0], [59.0, 2431.0], [58.0, 2413.0], [61.0, 2620.0], [60.0, 2624.0], [63.0, 2581.0], [62.0, 2611.0], [67.0, 4943.0], [66.0, 2482.0], [65.0, 2516.0], [64.0, 2568.0], [71.0, 2423.0], [70.0, 4896.0], [69.0, 4954.0], [68.0, 4931.0], [75.0, 10317.0], [74.0, 2060.0], [73.0, 2134.0], [72.0, 2332.0], [79.0, 1875.0], [78.0, 1873.0], [77.0, 1990.0], [76.0, 2077.0], [83.0, 1631.0], [82.0, 1636.0], [81.0, 1792.0], [80.0, 1843.0], [87.0, 1575.0], [86.0, 3712.0], [85.0, 1659.0], [84.0, 1665.0], [91.0, 1525.0], [90.0, 1598.0], [89.0, 1600.0], [88.0, 1615.0], [95.0, 1490.0], [94.0, 14725.0], [93.0, 1626.0], [92.0, 3491.0], [99.0, 3132.0], [98.0, 3150.0], [97.0, 3165.0], [96.0, 1529.0], [103.0, 3173.0], [102.0, 3069.0], [101.0, 3053.0], [100.0, 1429.0], [107.0, 3179.0], [106.0, 3462.0], [105.0, 3612.0], [104.0, 3494.0], [111.0, 3681.0], [110.0, 3482.0], [109.0, 3447.0], [108.0, 3333.0], [115.0, 3953.0], [114.0, 3958.0], [113.0, 3892.0], [112.0, 3675.0], [119.0, 8688.0], [118.0, 4119.0], [117.0, 4004.0], [116.0, 3982.0], [123.0, 21912.0], [122.0, 21679.0], [121.0, 32805.0], [120.0, 11766.0], [127.0, 11905.0], [126.0, 31409.0], [125.0, 2475.0], [124.0, 2488.0], [135.0, 2340.0], [134.0, 2340.0], [133.0, 2369.0], [132.0, 2384.0], [131.0, 2458.0], [130.0, 2407.0], [129.0, 10543.0], [128.0, 2447.0], [143.0, 2570.0], [142.0, 2575.0], [141.0, 2587.0], [140.0, 8385.0], [139.0, 2328.0], [138.0, 22136.0], [137.0, 2256.0], [136.0, 22227.0], [151.0, 2527.0], [150.0, 2493.0], [149.0, 2500.0], [148.0, 2493.0], [147.0, 2497.0], [146.0, 2540.0], [145.0, 2549.0], [144.0, 2561.0], [159.0, 21144.0], [158.0, 2944.0], [157.0, 2945.0], [156.0, 2917.0], [155.0, 2803.0], [154.0, 22017.0], [153.0, 21958.0], [152.0, 2674.0], [167.0, 4068.0], [166.0, 4072.0], [165.0, 12774.0], [164.0, 3827.0], [163.0, 3722.0], [162.0, 3730.0], [161.0, 3248.0], [160.0, 21428.0], [175.0, 3970.0], [174.0, 4001.0], [173.0, 4018.0], [172.0, 4028.0], [171.0, 3958.0], [170.0, 3905.0], [169.0, 33673.0], [168.0, 4064.0], [183.0, 3996.0], [182.0, 4003.0], [181.0, 4015.0], [180.0, 3976.0], [179.0, 3976.0], [178.0, 4054.0], [177.0, 4066.0], [176.0, 4036.0], [191.0, 3951.0], [190.0, 3951.0], [189.0, 3936.0], [188.0, 3968.0], [187.0, 3986.0], [186.0, 4016.0], [185.0, 4055.0], [184.0, 4013.0], [199.0, 3855.0], [198.0, 3875.0], [197.0, 3801.0], [196.0, 3819.0], [195.0, 3842.0], [194.0, 3844.0], [193.0, 3853.0], [192.0, 3939.0], [207.0, 3891.0], [206.0, 3840.0], [205.0, 3907.0], [204.0, 3940.0], [203.0, 3959.0], [202.0, 7412.0], [201.0, 24444.0], [200.0, 3834.0], [215.0, 3842.0], [214.0, 14416.0], [213.0, 3987.0], [212.0, 22277.0], [211.0, 4023.0], [210.0, 22400.0], [209.0, 4066.0], [208.0, 4068.0], [223.0, 3699.0], [222.0, 3781.0], [221.0, 3751.0], [220.0, 3797.0], [219.0, 3830.0], [218.0, 3888.0], [217.0, 3872.0], [216.0, 3873.0], [231.0, 6547.0], [230.0, 20902.0], [229.0, 49089.0], [228.0, 3504.0], [227.0, 22282.0], [226.0, 3582.0], [225.0, 3698.0], [224.0, 22606.0], [239.0, 3327.0], [238.0, 3295.0], [237.0, 22309.0], [236.0, 3178.0], [235.0, 21003.0], [234.0, 3207.0], [233.0, 3242.0], [232.0, 14246.0], [247.0, 3585.0], [246.0, 3533.0], [245.0, 22361.0], [244.0, 3597.0], [243.0, 22744.0], [242.0, 3522.0], [241.0, 22808.0], [240.0, 21668.0], [255.0, 10595.0], [254.0, 3501.0], [253.0, 3512.0], [252.0, 3459.0], [251.0, 3459.0], [250.0, 22435.0], [249.0, 3460.0], [248.0, 3488.0], [270.0, 6955.0], [271.0, 3348.0], [269.0, 3400.0], [268.0, 6751.0], [267.0, 3489.0], [266.0, 3495.0], [265.0, 3515.0], [264.0, 6793.0], [263.0, 3286.0], [257.0, 3456.0], [256.0, 3492.0], [259.0, 21263.0], [258.0, 3432.0], [262.0, 18416.0], [261.0, 3328.0], [260.0, 3364.0], [286.0, 3221.0], [287.0, 3210.0], [285.0, 3231.0], [284.0, 3236.0], [283.0, 3249.0], [282.0, 3276.0], [281.0, 3270.0], [280.0, 3255.0], [279.0, 3270.0], [273.0, 3286.0], [272.0, 3271.0], [275.0, 18942.0], [274.0, 3277.0], [278.0, 3257.0], [277.0, 3305.0], [276.0, 10960.0], [302.0, 3177.0], [303.0, 3149.0], [301.0, 3188.0], [300.0, 8468.0], [299.0, 3068.0], [298.0, 33093.0], [297.0, 7054.0], [296.0, 3085.0], [295.0, 3117.0], [289.0, 3183.0], [288.0, 3184.0], [291.0, 3134.0], [290.0, 3168.0], [294.0, 3145.0], [293.0, 3145.0], [292.0, 3168.0], [318.0, 15601.0], [319.0, 3567.0], [317.0, 15602.0], [316.0, 15827.0], [315.0, 3657.0], [314.0, 3633.0], [313.0, 3639.0], [312.0, 3387.0], [311.0, 3394.0], [305.0, 15073.0], [304.0, 14994.0], [307.0, 3137.0], [306.0, 3112.0], [310.0, 3325.0], [309.0, 3288.0], [308.0, 3249.0], [334.0, 29154.0], [335.0, 4089.0], [333.0, 4126.0], [332.0, 15752.0], [331.0, 4026.0], [330.0, 15754.0], [329.0, 3981.0], [328.0, 4037.0], [327.0, 3958.0], [321.0, 15771.0], [320.0, 3617.0], [323.0, 15852.0], [322.0, 3758.0], [326.0, 3968.0], [325.0, 3893.0], [324.0, 3872.0], [350.0, 4057.0], [351.0, 4070.0], [349.0, 4043.0], [348.0, 3967.0], [347.0, 3919.0], [346.0, 3929.0], [345.0, 3940.0], [344.0, 3953.0], [343.0, 3956.0], [337.0, 4041.0], [336.0, 4054.0], [339.0, 3998.0], [338.0, 4022.0], [342.0, 3975.0], [341.0, 3969.0], [340.0, 3978.0], [366.0, 3790.0], [367.0, 3734.0], [365.0, 3747.0], [364.0, 3806.0], [363.0, 3821.0], [362.0, 3993.0], [361.0, 3952.0], [360.0, 3983.0], [359.0, 4007.0], [353.0, 4057.0], [352.0, 4078.0], [355.0, 4041.0], [354.0, 4045.0], [358.0, 4069.0], [357.0, 4042.0], [356.0, 4098.0], [382.0, 24589.0], [383.0, 3895.0], [381.0, 8571.0], [380.0, 22606.0], [379.0, 3956.0], [378.0, 22330.0], [377.0, 4003.0], [376.0, 3903.0], [375.0, 3851.0], [369.0, 36675.0], [368.0, 8032.0], [371.0, 3987.0], [370.0, 3959.0], [374.0, 3893.0], [373.0, 3896.0], [372.0, 6226.0], [398.0, 3984.0], [399.0, 3812.0], [397.0, 4016.0], [396.0, 4040.0], [395.0, 4070.0], [394.0, 4069.0], [393.0, 4038.0], [392.0, 4057.0], [391.0, 4013.0], [385.0, 3881.0], [384.0, 33468.0], [387.0, 4077.0], [386.0, 3981.0], [390.0, 4052.0], [389.0, 4054.0], [388.0, 4078.0], [414.0, 3378.0], [415.0, 3323.0], [413.0, 3339.0], [412.0, 3330.0], [411.0, 3318.0], [410.0, 3300.0], [409.0, 3304.0], [408.0, 14499.0], [407.0, 3324.0], [401.0, 3581.0], [400.0, 3608.0], [403.0, 7221.0], [402.0, 3514.0], [406.0, 3381.0], [405.0, 7157.0], [404.0, 3402.0], [430.0, 22458.0], [431.0, 3821.0], [429.0, 3631.0], [428.0, 23165.0], [427.0, 3426.0], [426.0, 3434.0], [425.0, 3420.0], [424.0, 22642.0], [423.0, 24878.0], [417.0, 3335.0], [416.0, 3273.0], [419.0, 3376.0], [418.0, 3391.0], [422.0, 3376.0], [421.0, 3407.0], [420.0, 3446.0], [446.0, 3654.0], [447.0, 3670.0], [445.0, 3637.0], [444.0, 3570.0], [443.0, 3391.0], [442.0, 3412.0], [441.0, 3482.0], [440.0, 22446.0], [439.0, 3570.0], [433.0, 21991.0], [432.0, 3751.0], [435.0, 3778.0], [434.0, 23332.0], [438.0, 3654.0], [437.0, 3668.0], [436.0, 3741.0], [462.0, 3778.0], [463.0, 3844.0], [461.0, 3691.0], [460.0, 3548.0], [459.0, 3488.0], [458.0, 3493.0], [457.0, 3505.0], [456.0, 3512.0], [455.0, 3520.0], [449.0, 3490.0], [448.0, 3667.0], [451.0, 3458.0], [450.0, 3503.0], [454.0, 3523.0], [453.0, 3444.0], [452.0, 3448.0], [478.0, 7286.0], [479.0, 6651.0], [477.0, 3888.0], [476.0, 14082.0], [475.0, 14919.0], [474.0, 15133.0], [473.0, 7573.0], [472.0, 16235.0], [471.0, 7617.0], [465.0, 4002.0], [464.0, 3881.0], [467.0, 3993.0], [466.0, 4011.0], [470.0, 3958.0], [469.0, 7986.0], [468.0, 3923.0], [494.0, 4059.0], [495.0, 4055.0], [493.0, 4070.0], [492.0, 4069.0], [491.0, 8046.0], [490.0, 8022.0], [489.0, 8071.0], [488.0, 3842.0], [487.0, 3155.0], [481.0, 3616.0], [480.0, 3571.0], [483.0, 11105.0], [482.0, 3664.0], [486.0, 11382.0], [485.0, 2959.0], [484.0, 11501.0], [500.0, 4058.0], [499.0, 4057.0], [498.0, 4033.0], [497.0, 4002.0], [496.0, 4046.0], [1.0, 80.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[250.50600000000006, 6110.719999999997]], "isOverall": false, "label": "flight-schedule-Aggregated", "isController": false}, {"data": [[2.0, 108123.0], [5.0, 104854.0], [6.0, 104078.0], [8.0, 104508.0], [10.0, 103665.0], [11.0, 103654.75], [22.0, 71027.0], [95.0, 65461.0], [92.0, 65942.0], [106.0, 64439.0], [105.0, 65527.0], [119.0, 63391.566666666666], [118.0, 64298.0], [122.0, 62315.0], [120.0, 62810.0], [126.0, 62227.0], [125.0, 62651.0], [135.0, 61895.0], [133.0, 62008.5], [131.0, 61738.0], [129.0, 61914.0], [128.0, 62705.0], [158.0, 60727.0], [155.0, 60238.0], [164.0, 59753.0], [163.0, 59678.0], [161.0, 59767.2], [160.0, 60160.0], [173.0, 58071.0], [171.0, 57927.0], [168.0, 58447.333333333336], [183.0, 56896.0], [178.0, 57915.0], [187.0, 56598.0], [186.0, 56710.0], [185.0, 57015.0], [184.0, 57453.0], [199.0, 55881.0], [192.0, 56486.5], [207.0, 55814.0], [205.0, 55875.0], [215.0, 54874.6], [213.0, 55157.5], [211.0, 55634.0], [210.0, 55728.0], [221.0, 54048.0], [220.0, 54410.5], [219.0, 54936.0], [216.0, 54533.166666666664], [230.0, 53258.0], [229.0, 53337.0], [228.0, 53738.0], [225.0, 53733.0], [240.0, 52571.0], [255.0, 51936.0], [271.0, 50576.25], [264.0, 51215.0], [263.0, 51350.75], [282.0, 49291.0], [275.0, 50046.0], [274.0, 50084.0], [273.0, 49922.0], [272.0, 50312.57142857143], [303.0, 47984.0], [298.0, 48346.0], [294.0, 48780.5], [292.0, 49377.0], [291.0, 49010.0], [289.0, 49607.0], [315.0, 47687.0], [312.0, 47707.0], [310.0, 47842.0], [306.0, 48445.0], [332.0, 45013.0], [327.0, 45447.0], [351.0, 43677.0], [350.0, 43588.0], [349.0, 43526.666666666664], [348.0, 43610.0], [346.0, 44108.0], [345.0, 43770.0], [342.0, 44525.0], [366.0, 41163.0], [367.0, 41387.2], [364.0, 41448.0], [355.0, 42779.666666666664], [362.0, 41923.0], [361.0, 42211.0], [359.0, 42184.0], [358.0, 42391.0], [357.0, 42173.0], [356.0, 42870.5], [381.0, 38734.0], [379.0, 38910.666666666664], [378.0, 39058.0], [377.0, 39465.5], [375.0, 39670.0], [368.0, 40898.0], [374.0, 39499.0], [373.0, 40257.0], [372.0, 39600.0], [371.0, 40377.375], [370.0, 40815.4], [399.0, 33102.4], [396.0, 34524.666666666664], [395.0, 35508.38461538461], [394.0, 36433.333333333336], [393.0, 36709.71428571428], [392.0, 37157.0], [387.0, 37335.0], [386.0, 38128.0], [385.0, 37928.5], [384.0, 38528.0], [414.0, 30992.0], [409.0, 31591.666666666668], [406.0, 32149.0], [402.0, 32777.0], [401.0, 32649.0], [431.0, 28889.75], [430.0, 29020.5], [429.0, 29217.5], [423.0, 29471.0], [421.0, 29953.25], [420.0, 30617.0], [419.0, 30752.0], [416.0, 30905.5], [444.0, 26375.0], [446.0, 26489.166666666668], [447.0, 26708.0], [445.0, 26547.0], [443.0, 26845.6], [441.0, 26686.0], [439.0, 27131.333333333332], [433.0, 28388.666666666668], [435.0, 27853.0], [434.0, 27896.5], [438.0, 27199.5], [437.0, 27648.5], [436.0, 27712.5], [463.0, 24152.0], [460.0, 25020.25], [453.0, 25825.0], [449.0, 26080.0], [448.0, 26147.357142857145], [477.0, 17722.375], [479.0, 17280.0], [476.0, 18331.4], [475.0, 19348.222222222223], [474.0, 20068.0], [473.0, 20455.2], [469.0, 22517.0], [467.0, 23007.0], [465.0, 23829.5], [464.0, 24476.333333333332], [490.0, 12947.0], [488.0, 13862.0], [486.0, 14978.8], [484.0, 15996.666666666666], [483.0, 16402.222222222223], [482.0, 16831.4], [500.0, 4088.3265306122457], [498.0, 10094.0], [1.0, 115480.0]], "isOverall": false, "label": "book-a-flight", "isController": false}, {"data": [[353.60200000000043, 36693.51]], "isOverall": false, "label": "book-a-flight-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 222.25, "minX": 1.7394342E12, "maxY": 1146006.5166666666, "series": [{"data": [[1.7394342E12, 163874.8], [1.73943432E12, 23089.483333333334], [1.73943426E12, 1146006.5166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7394342E12, 1544.8], [1.73943432E12, 222.25], [1.73943426E12, 10949.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943432E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 115.27272727272728, "minX": 1.7394342E12, "maxY": 105400.45454545454, "series": [{"data": [[1.7394342E12, 4364.0625], [1.73943432E12, 216.72727272727275], [1.73943426E12, 8301.532879818591]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[1.7394342E12, 5550.333333333333], [1.73943432E12, 115.27272727272728], [1.73943426E12, 6281.47096774194]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[1.7394342E12, 10703.100000000004], [1.73943432E12, 105400.45454545454], [1.73943426E12, 42242.767810026395]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943432E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 74.18181818181819, "minX": 1.7394342E12, "maxY": 15417.023746701838, "series": [{"data": [[1.7394342E12, 3331.2291666666665], [1.73943432E12, 187.45454545454547], [1.73943426E12, 4527.396825396825]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[1.7394342E12, 3985.541666666666], [1.73943432E12, 74.18181818181819], [1.73943426E12, 3592.6387096774192]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[1.7394342E12, 7953.918181818181], [1.73943432E12, 10643.636363636364], [1.73943426E12, 15417.023746701838]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943432E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7394342E12, "maxY": 3744.03957783641, "series": [{"data": [[1.7394342E12, 0.0], [1.73943432E12, 110.45454545454544], [1.73943426E12, 293.14965986394566]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[1.7394342E12, 0.0], [1.73943432E12, 0.0], [1.73943426E12, 157.84731182795696]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[1.7394342E12, 3108.754545454546], [1.73943432E12, 3707.272727272727], [1.73943426E12, 3744.03957783641]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943432E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 78.0, "minX": 1.7394342E12, "maxY": 115480.0, "series": [{"data": [[1.7394342E12, 18648.0], [1.73943432E12, 115480.0], [1.73943426E12, 71027.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7394342E12, 1787.0], [1.73943432E12, 78.0], [1.73943426E12, 83.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7394342E12, 16761.100000000002], [1.73943432E12, 105370.6], [1.73943426E12, 50135.80000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7394342E12, 18612.309999999998], [1.73943432E12, 115480.0], [1.73943426E12, 63665.54]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7394342E12, 6357.5], [1.73943432E12, 197.5], [1.73943426E12, 4846.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7394342E12, 17713.75], [1.73943432E12, 112905.04999999999], [1.73943426E12, 59638.100000000006]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943432E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 193.0, "minX": 1.0, "maxY": 103984.0, "series": [{"data": [[32.0, 10197.0], [34.0, 25923.0], [35.0, 14246.0], [38.0, 23845.0], [39.0, 62988.0], [3.0, 4057.0], [4.0, 193.0], [5.0, 4066.5], [7.0, 4039.5], [9.0, 8071.0], [10.0, 7137.0], [11.0, 10952.0], [12.0, 3633.5], [13.0, 3491.5], [14.0, 35898.5], [15.0, 16075.0], [16.0, 34829.0], [1.0, 7919.0], [17.0, 4080.0], [18.0, 5544.0], [19.0, 15161.5], [20.0, 3965.5], [21.0, 3978.0], [22.0, 3226.0], [23.0, 3921.5], [24.0, 14618.0], [25.0, 15645.0], [26.0, 15052.0], [27.0, 3991.0], [28.0, 3982.0], [29.0, 14994.0], [30.0, 8790.5], [31.0, 3781.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[23.0, 103984.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 39.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 22666.0, "series": [{"data": [[32.0, 4066.5], [34.0, 11339.0], [35.0, 4058.0], [38.0, 8592.5], [39.0, 22666.0], [3.0, 4013.0], [4.0, 186.5], [5.0, 4026.0], [7.0, 3996.0], [9.0, 4050.0], [10.0, 6742.0], [11.0, 4070.5], [12.0, 3557.5], [13.0, 3455.0], [14.0, 12257.5], [15.0, 9832.0], [16.0, 11816.0], [1.0, 2395.0], [17.0, 4025.5], [18.0, 5497.5], [19.0, 11268.0], [20.0, 3917.5], [21.0, 3929.0], [22.0, 2971.0], [23.0, 3860.0], [24.0, 7139.5], [25.0, 4049.0], [26.0, 4027.5], [27.0, 3942.0], [28.0, 3917.5], [29.0, 3774.0], [30.0, 4067.5], [31.0, 3676.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[23.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 39.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.7394342E12, "maxY": 13.666666666666666, "series": [{"data": [[1.7394342E12, 10.966666666666667], [1.73943432E12, 0.36666666666666664], [1.73943426E12, 13.666666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943432E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.7394342E12, "maxY": 21.416666666666668, "series": [{"data": [[1.7394342E12, 3.033333333333333], [1.73943432E12, 0.43333333333333335], [1.73943426E12, 21.416666666666668]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73943432E12, 0.11666666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943432E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7394342E12, "maxY": 7.75, "series": [{"data": [[1.7394342E12, 0.8], [1.73943432E12, 0.18333333333333332], [1.73943426E12, 7.35]], "isOverall": false, "label": "cancellation-success", "isController": false}, {"data": [[1.7394342E12, 1.8333333333333333], [1.73943432E12, 0.06666666666666667], [1.73943426E12, 6.316666666666666]], "isOverall": false, "label": "book-a-flight-success", "isController": false}, {"data": [[1.7394342E12, 0.4], [1.73943432E12, 0.18333333333333332], [1.73943426E12, 7.75]], "isOverall": false, "label": "flight-schedule-success", "isController": false}, {"data": [[1.73943432E12, 0.11666666666666667]], "isOverall": false, "label": "book-a-flight-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943432E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.7394342E12, "maxY": 21.416666666666668, "series": [{"data": [[1.7394342E12, 3.033333333333333], [1.73943432E12, 0.43333333333333335], [1.73943426E12, 21.416666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73943432E12, 0.11666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943432E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


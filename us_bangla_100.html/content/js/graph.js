/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 85.0, "minX": 0.0, "maxY": 26762.0, "series": [{"data": [[0.0, 173.0], [0.1, 173.0], [0.2, 173.0], [0.3, 173.0], [0.4, 173.0], [0.5, 173.0], [0.6, 173.0], [0.7, 173.0], [0.8, 173.0], [0.9, 173.0], [1.0, 523.0], [1.1, 523.0], [1.2, 523.0], [1.3, 523.0], [1.4, 523.0], [1.5, 523.0], [1.6, 523.0], [1.7, 523.0], [1.8, 523.0], [1.9, 523.0], [2.0, 591.0], [2.1, 591.0], [2.2, 591.0], [2.3, 591.0], [2.4, 591.0], [2.5, 591.0], [2.6, 591.0], [2.7, 591.0], [2.8, 591.0], [2.9, 591.0], [3.0, 650.0], [3.1, 650.0], [3.2, 650.0], [3.3, 650.0], [3.4, 650.0], [3.5, 650.0], [3.6, 650.0], [3.7, 650.0], [3.8, 650.0], [3.9, 650.0], [4.0, 655.0], [4.1, 655.0], [4.2, 655.0], [4.3, 655.0], [4.4, 655.0], [4.5, 655.0], [4.6, 655.0], [4.7, 655.0], [4.8, 655.0], [4.9, 655.0], [5.0, 655.0], [5.1, 655.0], [5.2, 655.0], [5.3, 655.0], [5.4, 655.0], [5.5, 655.0], [5.6, 655.0], [5.7, 655.0], [5.8, 655.0], [5.9, 655.0], [6.0, 708.0], [6.1, 708.0], [6.2, 708.0], [6.3, 708.0], [6.4, 708.0], [6.5, 708.0], [6.6, 708.0], [6.7, 708.0], [6.8, 708.0], [6.9, 708.0], [7.0, 710.0], [7.1, 710.0], [7.2, 710.0], [7.3, 710.0], [7.4, 710.0], [7.5, 710.0], [7.6, 710.0], [7.7, 710.0], [7.8, 710.0], [7.9, 710.0], [8.0, 731.0], [8.1, 731.0], [8.2, 731.0], [8.3, 731.0], [8.4, 731.0], [8.5, 731.0], [8.6, 731.0], [8.7, 731.0], [8.8, 731.0], [8.9, 731.0], [9.0, 731.0], [9.1, 731.0], [9.2, 731.0], [9.3, 731.0], [9.4, 731.0], [9.5, 731.0], [9.6, 731.0], [9.7, 731.0], [9.8, 731.0], [9.9, 731.0], [10.0, 779.0], [10.1, 779.0], [10.2, 779.0], [10.3, 779.0], [10.4, 779.0], [10.5, 779.0], [10.6, 779.0], [10.7, 779.0], [10.8, 779.0], [10.9, 779.0], [11.0, 811.0], [11.1, 811.0], [11.2, 811.0], [11.3, 811.0], [11.4, 811.0], [11.5, 811.0], [11.6, 811.0], [11.7, 811.0], [11.8, 811.0], [11.9, 811.0], [12.0, 841.0], [12.1, 841.0], [12.2, 841.0], [12.3, 841.0], [12.4, 841.0], [12.5, 841.0], [12.6, 841.0], [12.7, 841.0], [12.8, 841.0], [12.9, 841.0], [13.0, 887.0], [13.1, 887.0], [13.2, 887.0], [13.3, 887.0], [13.4, 887.0], [13.5, 887.0], [13.6, 887.0], [13.7, 887.0], [13.8, 887.0], [13.9, 887.0], [14.0, 1122.0], [14.1, 1122.0], [14.2, 1122.0], [14.3, 1122.0], [14.4, 1122.0], [14.5, 1122.0], [14.6, 1122.0], [14.7, 1122.0], [14.8, 1122.0], [14.9, 1122.0], [15.0, 1442.0], [15.1, 1442.0], [15.2, 1442.0], [15.3, 1442.0], [15.4, 1442.0], [15.5, 1442.0], [15.6, 1442.0], [15.7, 1442.0], [15.8, 1442.0], [15.9, 1442.0], [16.0, 1974.0], [16.1, 1974.0], [16.2, 1974.0], [16.3, 1974.0], [16.4, 1974.0], [16.5, 1974.0], [16.6, 1974.0], [16.7, 1974.0], [16.8, 1974.0], [16.9, 1974.0], [17.0, 1997.0], [17.1, 1997.0], [17.2, 1997.0], [17.3, 1997.0], [17.4, 1997.0], [17.5, 1997.0], [17.6, 1997.0], [17.7, 1997.0], [17.8, 1997.0], [17.9, 1997.0], [18.0, 2343.0], [18.1, 2343.0], [18.2, 2343.0], [18.3, 2343.0], [18.4, 2343.0], [18.5, 2343.0], [18.6, 2343.0], [18.7, 2343.0], [18.8, 2343.0], [18.9, 2343.0], [19.0, 2368.0], [19.1, 2368.0], [19.2, 2368.0], [19.3, 2368.0], [19.4, 2368.0], [19.5, 2368.0], [19.6, 2368.0], [19.7, 2368.0], [19.8, 2368.0], [19.9, 2368.0], [20.0, 2594.0], [20.1, 2594.0], [20.2, 2594.0], [20.3, 2594.0], [20.4, 2594.0], [20.5, 2594.0], [20.6, 2594.0], [20.7, 2594.0], [20.8, 2594.0], [20.9, 2594.0], [21.0, 2735.0], [21.1, 2735.0], [21.2, 2735.0], [21.3, 2735.0], [21.4, 2735.0], [21.5, 2735.0], [21.6, 2735.0], [21.7, 2735.0], [21.8, 2735.0], [21.9, 2735.0], [22.0, 2764.0], [22.1, 2764.0], [22.2, 2764.0], [22.3, 2764.0], [22.4, 2764.0], [22.5, 2764.0], [22.6, 2764.0], [22.7, 2764.0], [22.8, 2764.0], [22.9, 2764.0], [23.0, 2826.0], [23.1, 2826.0], [23.2, 2826.0], [23.3, 2826.0], [23.4, 2826.0], [23.5, 2826.0], [23.6, 2826.0], [23.7, 2826.0], [23.8, 2826.0], [23.9, 2826.0], [24.0, 2859.0], [24.1, 2859.0], [24.2, 2859.0], [24.3, 2859.0], [24.4, 2859.0], [24.5, 2859.0], [24.6, 2859.0], [24.7, 2859.0], [24.8, 2859.0], [24.9, 2859.0], [25.0, 2973.0], [25.1, 2973.0], [25.2, 2973.0], [25.3, 2973.0], [25.4, 2973.0], [25.5, 2973.0], [25.6, 2973.0], [25.7, 2973.0], [25.8, 2973.0], [25.9, 2973.0], [26.0, 2991.0], [26.1, 2991.0], [26.2, 2991.0], [26.3, 2991.0], [26.4, 2991.0], [26.5, 2991.0], [26.6, 2991.0], [26.7, 2991.0], [26.8, 2991.0], [26.9, 2991.0], [27.0, 3005.0], [27.1, 3005.0], [27.2, 3005.0], [27.3, 3005.0], [27.4, 3005.0], [27.5, 3005.0], [27.6, 3005.0], [27.7, 3005.0], [27.8, 3005.0], [27.9, 3005.0], [28.0, 3099.0], [28.1, 3099.0], [28.2, 3099.0], [28.3, 3099.0], [28.4, 3099.0], [28.5, 3099.0], [28.6, 3099.0], [28.7, 3099.0], [28.8, 3099.0], [28.9, 3099.0], [29.0, 3100.0], [29.1, 3100.0], [29.2, 3100.0], [29.3, 3100.0], [29.4, 3100.0], [29.5, 3100.0], [29.6, 3100.0], [29.7, 3100.0], [29.8, 3100.0], [29.9, 3100.0], [30.0, 3104.0], [30.1, 3104.0], [30.2, 3104.0], [30.3, 3104.0], [30.4, 3104.0], [30.5, 3104.0], [30.6, 3104.0], [30.7, 3104.0], [30.8, 3104.0], [30.9, 3104.0], [31.0, 3342.0], [31.1, 3342.0], [31.2, 3342.0], [31.3, 3342.0], [31.4, 3342.0], [31.5, 3342.0], [31.6, 3342.0], [31.7, 3342.0], [31.8, 3342.0], [31.9, 3342.0], [32.0, 3396.0], [32.1, 3396.0], [32.2, 3396.0], [32.3, 3396.0], [32.4, 3396.0], [32.5, 3396.0], [32.6, 3396.0], [32.7, 3396.0], [32.8, 3396.0], [32.9, 3396.0], [33.0, 3419.0], [33.1, 3419.0], [33.2, 3419.0], [33.3, 3419.0], [33.4, 3419.0], [33.5, 3419.0], [33.6, 3419.0], [33.7, 3419.0], [33.8, 3419.0], [33.9, 3419.0], [34.0, 3446.0], [34.1, 3446.0], [34.2, 3446.0], [34.3, 3446.0], [34.4, 3446.0], [34.5, 3446.0], [34.6, 3446.0], [34.7, 3446.0], [34.8, 3446.0], [34.9, 3446.0], [35.0, 3466.0], [35.1, 3466.0], [35.2, 3466.0], [35.3, 3466.0], [35.4, 3466.0], [35.5, 3466.0], [35.6, 3466.0], [35.7, 3466.0], [35.8, 3466.0], [35.9, 3466.0], [36.0, 3483.0], [36.1, 3483.0], [36.2, 3483.0], [36.3, 3483.0], [36.4, 3483.0], [36.5, 3483.0], [36.6, 3483.0], [36.7, 3483.0], [36.8, 3483.0], [36.9, 3483.0], [37.0, 3555.0], [37.1, 3555.0], [37.2, 3555.0], [37.3, 3555.0], [37.4, 3555.0], [37.5, 3555.0], [37.6, 3555.0], [37.7, 3555.0], [37.8, 3555.0], [37.9, 3555.0], [38.0, 3645.0], [38.1, 3645.0], [38.2, 3645.0], [38.3, 3645.0], [38.4, 3645.0], [38.5, 3645.0], [38.6, 3645.0], [38.7, 3645.0], [38.8, 3645.0], [38.9, 3645.0], [39.0, 3647.0], [39.1, 3647.0], [39.2, 3647.0], [39.3, 3647.0], [39.4, 3647.0], [39.5, 3647.0], [39.6, 3647.0], [39.7, 3647.0], [39.8, 3647.0], [39.9, 3647.0], [40.0, 3676.0], [40.1, 3676.0], [40.2, 3676.0], [40.3, 3676.0], [40.4, 3676.0], [40.5, 3676.0], [40.6, 3676.0], [40.7, 3676.0], [40.8, 3676.0], [40.9, 3676.0], [41.0, 3715.0], [41.1, 3715.0], [41.2, 3715.0], [41.3, 3715.0], [41.4, 3715.0], [41.5, 3715.0], [41.6, 3715.0], [41.7, 3715.0], [41.8, 3715.0], [41.9, 3715.0], [42.0, 3789.0], [42.1, 3789.0], [42.2, 3789.0], [42.3, 3789.0], [42.4, 3789.0], [42.5, 3789.0], [42.6, 3789.0], [42.7, 3789.0], [42.8, 3789.0], [42.9, 3789.0], [43.0, 3843.0], [43.1, 3843.0], [43.2, 3843.0], [43.3, 3843.0], [43.4, 3843.0], [43.5, 3843.0], [43.6, 3843.0], [43.7, 3843.0], [43.8, 3843.0], [43.9, 3843.0], [44.0, 3892.0], [44.1, 3892.0], [44.2, 3892.0], [44.3, 3892.0], [44.4, 3892.0], [44.5, 3892.0], [44.6, 3892.0], [44.7, 3892.0], [44.8, 3892.0], [44.9, 3892.0], [45.0, 3900.0], [45.1, 3900.0], [45.2, 3900.0], [45.3, 3900.0], [45.4, 3900.0], [45.5, 3900.0], [45.6, 3900.0], [45.7, 3900.0], [45.8, 3900.0], [45.9, 3900.0], [46.0, 3920.0], [46.1, 3920.0], [46.2, 3920.0], [46.3, 3920.0], [46.4, 3920.0], [46.5, 3920.0], [46.6, 3920.0], [46.7, 3920.0], [46.8, 3920.0], [46.9, 3920.0], [47.0, 3925.0], [47.1, 3925.0], [47.2, 3925.0], [47.3, 3925.0], [47.4, 3925.0], [47.5, 3925.0], [47.6, 3925.0], [47.7, 3925.0], [47.8, 3925.0], [47.9, 3925.0], [48.0, 3930.0], [48.1, 3930.0], [48.2, 3930.0], [48.3, 3930.0], [48.4, 3930.0], [48.5, 3930.0], [48.6, 3930.0], [48.7, 3930.0], [48.8, 3930.0], [48.9, 3930.0], [49.0, 3939.0], [49.1, 3939.0], [49.2, 3939.0], [49.3, 3939.0], [49.4, 3939.0], [49.5, 3939.0], [49.6, 3939.0], [49.7, 3939.0], [49.8, 3939.0], [49.9, 3939.0], [50.0, 3943.0], [50.1, 3943.0], [50.2, 3943.0], [50.3, 3943.0], [50.4, 3943.0], [50.5, 3943.0], [50.6, 3943.0], [50.7, 3943.0], [50.8, 3943.0], [50.9, 3943.0], [51.0, 3946.0], [51.1, 3946.0], [51.2, 3946.0], [51.3, 3946.0], [51.4, 3946.0], [51.5, 3946.0], [51.6, 3946.0], [51.7, 3946.0], [51.8, 3946.0], [51.9, 3946.0], [52.0, 3964.0], [52.1, 3964.0], [52.2, 3964.0], [52.3, 3964.0], [52.4, 3964.0], [52.5, 3964.0], [52.6, 3964.0], [52.7, 3964.0], [52.8, 3964.0], [52.9, 3964.0], [53.0, 3968.0], [53.1, 3968.0], [53.2, 3968.0], [53.3, 3968.0], [53.4, 3968.0], [53.5, 3968.0], [53.6, 3968.0], [53.7, 3968.0], [53.8, 3968.0], [53.9, 3968.0], [54.0, 3972.0], [54.1, 3972.0], [54.2, 3972.0], [54.3, 3972.0], [54.4, 3972.0], [54.5, 3972.0], [54.6, 3972.0], [54.7, 3972.0], [54.8, 3972.0], [54.9, 3972.0], [55.0, 3977.0], [55.1, 3977.0], [55.2, 3977.0], [55.3, 3977.0], [55.4, 3977.0], [55.5, 3977.0], [55.6, 3977.0], [55.7, 3977.0], [55.8, 3977.0], [55.9, 3977.0], [56.0, 3978.0], [56.1, 3978.0], [56.2, 3978.0], [56.3, 3978.0], [56.4, 3978.0], [56.5, 3978.0], [56.6, 3978.0], [56.7, 3978.0], [56.8, 3978.0], [56.9, 3978.0], [57.0, 3981.0], [57.1, 3981.0], [57.2, 3981.0], [57.3, 3981.0], [57.4, 3981.0], [57.5, 3981.0], [57.6, 3981.0], [57.7, 3981.0], [57.8, 3981.0], [57.9, 3981.0], [58.0, 3983.0], [58.1, 3983.0], [58.2, 3983.0], [58.3, 3983.0], [58.4, 3983.0], [58.5, 3983.0], [58.6, 3983.0], [58.7, 3983.0], [58.8, 3983.0], [58.9, 3983.0], [59.0, 3996.0], [59.1, 3996.0], [59.2, 3996.0], [59.3, 3996.0], [59.4, 3996.0], [59.5, 3996.0], [59.6, 3996.0], [59.7, 3996.0], [59.8, 3996.0], [59.9, 3996.0], [60.0, 4004.0], [60.1, 4004.0], [60.2, 4004.0], [60.3, 4004.0], [60.4, 4004.0], [60.5, 4004.0], [60.6, 4004.0], [60.7, 4004.0], [60.8, 4004.0], [60.9, 4004.0], [61.0, 4015.0], [61.1, 4015.0], [61.2, 4015.0], [61.3, 4015.0], [61.4, 4015.0], [61.5, 4015.0], [61.6, 4015.0], [61.7, 4015.0], [61.8, 4015.0], [61.9, 4015.0], [62.0, 4015.0], [62.1, 4015.0], [62.2, 4015.0], [62.3, 4015.0], [62.4, 4015.0], [62.5, 4015.0], [62.6, 4015.0], [62.7, 4015.0], [62.8, 4015.0], [62.9, 4015.0], [63.0, 4025.0], [63.1, 4025.0], [63.2, 4025.0], [63.3, 4025.0], [63.4, 4025.0], [63.5, 4025.0], [63.6, 4025.0], [63.7, 4025.0], [63.8, 4025.0], [63.9, 4025.0], [64.0, 4027.0], [64.1, 4027.0], [64.2, 4027.0], [64.3, 4027.0], [64.4, 4027.0], [64.5, 4027.0], [64.6, 4027.0], [64.7, 4027.0], [64.8, 4027.0], [64.9, 4027.0], [65.0, 4032.0], [65.1, 4032.0], [65.2, 4032.0], [65.3, 4032.0], [65.4, 4032.0], [65.5, 4032.0], [65.6, 4032.0], [65.7, 4032.0], [65.8, 4032.0], [65.9, 4032.0], [66.0, 4033.0], [66.1, 4033.0], [66.2, 4033.0], [66.3, 4033.0], [66.4, 4033.0], [66.5, 4033.0], [66.6, 4033.0], [66.7, 4033.0], [66.8, 4033.0], [66.9, 4033.0], [67.0, 4036.0], [67.1, 4036.0], [67.2, 4036.0], [67.3, 4036.0], [67.4, 4036.0], [67.5, 4036.0], [67.6, 4036.0], [67.7, 4036.0], [67.8, 4036.0], [67.9, 4036.0], [68.0, 4039.0], [68.1, 4039.0], [68.2, 4039.0], [68.3, 4039.0], [68.4, 4039.0], [68.5, 4039.0], [68.6, 4039.0], [68.7, 4039.0], [68.8, 4039.0], [68.9, 4039.0], [69.0, 4040.0], [69.1, 4040.0], [69.2, 4040.0], [69.3, 4040.0], [69.4, 4040.0], [69.5, 4040.0], [69.6, 4040.0], [69.7, 4040.0], [69.8, 4040.0], [69.9, 4040.0], [70.0, 4040.0], [70.1, 4040.0], [70.2, 4040.0], [70.3, 4040.0], [70.4, 4040.0], [70.5, 4040.0], [70.6, 4040.0], [70.7, 4040.0], [70.8, 4040.0], [70.9, 4040.0], [71.0, 4044.0], [71.1, 4044.0], [71.2, 4044.0], [71.3, 4044.0], [71.4, 4044.0], [71.5, 4044.0], [71.6, 4044.0], [71.7, 4044.0], [71.8, 4044.0], [71.9, 4044.0], [72.0, 4044.0], [72.1, 4044.0], [72.2, 4044.0], [72.3, 4044.0], [72.4, 4044.0], [72.5, 4044.0], [72.6, 4044.0], [72.7, 4044.0], [72.8, 4044.0], [72.9, 4044.0], [73.0, 4046.0], [73.1, 4046.0], [73.2, 4046.0], [73.3, 4046.0], [73.4, 4046.0], [73.5, 4046.0], [73.6, 4046.0], [73.7, 4046.0], [73.8, 4046.0], [73.9, 4046.0], [74.0, 4047.0], [74.1, 4047.0], [74.2, 4047.0], [74.3, 4047.0], [74.4, 4047.0], [74.5, 4047.0], [74.6, 4047.0], [74.7, 4047.0], [74.8, 4047.0], [74.9, 4047.0], [75.0, 4047.0], [75.1, 4047.0], [75.2, 4047.0], [75.3, 4047.0], [75.4, 4047.0], [75.5, 4047.0], [75.6, 4047.0], [75.7, 4047.0], [75.8, 4047.0], [75.9, 4047.0], [76.0, 4048.0], [76.1, 4048.0], [76.2, 4048.0], [76.3, 4048.0], [76.4, 4048.0], [76.5, 4048.0], [76.6, 4048.0], [76.7, 4048.0], [76.8, 4048.0], [76.9, 4048.0], [77.0, 4055.0], [77.1, 4055.0], [77.2, 4055.0], [77.3, 4055.0], [77.4, 4055.0], [77.5, 4055.0], [77.6, 4055.0], [77.7, 4055.0], [77.8, 4055.0], [77.9, 4055.0], [78.0, 4056.0], [78.1, 4056.0], [78.2, 4056.0], [78.3, 4056.0], [78.4, 4056.0], [78.5, 4056.0], [78.6, 4056.0], [78.7, 4056.0], [78.8, 4056.0], [78.9, 4056.0], [79.0, 4058.0], [79.1, 4058.0], [79.2, 4058.0], [79.3, 4058.0], [79.4, 4058.0], [79.5, 4058.0], [79.6, 4058.0], [79.7, 4058.0], [79.8, 4058.0], [79.9, 4058.0], [80.0, 4063.0], [80.1, 4063.0], [80.2, 4063.0], [80.3, 4063.0], [80.4, 4063.0], [80.5, 4063.0], [80.6, 4063.0], [80.7, 4063.0], [80.8, 4063.0], [80.9, 4063.0], [81.0, 4065.0], [81.1, 4065.0], [81.2, 4065.0], [81.3, 4065.0], [81.4, 4065.0], [81.5, 4065.0], [81.6, 4065.0], [81.7, 4065.0], [81.8, 4065.0], [81.9, 4065.0], [82.0, 4067.0], [82.1, 4067.0], [82.2, 4067.0], [82.3, 4067.0], [82.4, 4067.0], [82.5, 4067.0], [82.6, 4067.0], [82.7, 4067.0], [82.8, 4067.0], [82.9, 4067.0], [83.0, 4070.0], [83.1, 4070.0], [83.2, 4070.0], [83.3, 4070.0], [83.4, 4070.0], [83.5, 4070.0], [83.6, 4070.0], [83.7, 4070.0], [83.8, 4070.0], [83.9, 4070.0], [84.0, 4076.0], [84.1, 4076.0], [84.2, 4076.0], [84.3, 4076.0], [84.4, 4076.0], [84.5, 4076.0], [84.6, 4076.0], [84.7, 4076.0], [84.8, 4076.0], [84.9, 4076.0], [85.0, 4090.0], [85.1, 4090.0], [85.2, 4090.0], [85.3, 4090.0], [85.4, 4090.0], [85.5, 4090.0], [85.6, 4090.0], [85.7, 4090.0], [85.8, 4090.0], [85.9, 4090.0], [86.0, 8060.0], [86.1, 8060.0], [86.2, 8060.0], [86.3, 8060.0], [86.4, 8060.0], [86.5, 8060.0], [86.6, 8060.0], [86.7, 8060.0], [86.8, 8060.0], [86.9, 8060.0], [87.0, 8091.0], [87.1, 8091.0], [87.2, 8091.0], [87.3, 8091.0], [87.4, 8091.0], [87.5, 8091.0], [87.6, 8091.0], [87.7, 8091.0], [87.8, 8091.0], [87.9, 8091.0], [88.0, 8929.0], [88.1, 8929.0], [88.2, 8929.0], [88.3, 8929.0], [88.4, 8929.0], [88.5, 8929.0], [88.6, 8929.0], [88.7, 8929.0], [88.8, 8929.0], [88.9, 8929.0], [89.0, 9081.0], [89.1, 9081.0], [89.2, 9081.0], [89.3, 9081.0], [89.4, 9081.0], [89.5, 9081.0], [89.6, 9081.0], [89.7, 9081.0], [89.8, 9081.0], [89.9, 9081.0], [90.0, 9456.0], [90.1, 9456.0], [90.2, 9456.0], [90.3, 9456.0], [90.4, 9456.0], [90.5, 9456.0], [90.6, 9456.0], [90.7, 9456.0], [90.8, 9456.0], [90.9, 9456.0], [91.0, 9681.0], [91.1, 9681.0], [91.2, 9681.0], [91.3, 9681.0], [91.4, 9681.0], [91.5, 9681.0], [91.6, 9681.0], [91.7, 9681.0], [91.8, 9681.0], [91.9, 9681.0], [92.0, 10164.0], [92.1, 10164.0], [92.2, 10164.0], [92.3, 10164.0], [92.4, 10164.0], [92.5, 10164.0], [92.6, 10164.0], [92.7, 10164.0], [92.8, 10164.0], [92.9, 10164.0], [93.0, 10338.0], [93.1, 10338.0], [93.2, 10338.0], [93.3, 10338.0], [93.4, 10338.0], [93.5, 10338.0], [93.6, 10338.0], [93.7, 10338.0], [93.8, 10338.0], [93.9, 10338.0], [94.0, 10414.0], [94.1, 10414.0], [94.2, 10414.0], [94.3, 10414.0], [94.4, 10414.0], [94.5, 10414.0], [94.6, 10414.0], [94.7, 10414.0], [94.8, 10414.0], [94.9, 10414.0], [95.0, 10481.0], [95.1, 10481.0], [95.2, 10481.0], [95.3, 10481.0], [95.4, 10481.0], [95.5, 10481.0], [95.6, 10481.0], [95.7, 10481.0], [95.8, 10481.0], [95.9, 10481.0], [96.0, 10508.0], [96.1, 10508.0], [96.2, 10508.0], [96.3, 10508.0], [96.4, 10508.0], [96.5, 10508.0], [96.6, 10508.0], [96.7, 10508.0], [96.8, 10508.0], [96.9, 10508.0], [97.0, 11081.0], [97.1, 11081.0], [97.2, 11081.0], [97.3, 11081.0], [97.4, 11081.0], [97.5, 11081.0], [97.6, 11081.0], [97.7, 11081.0], [97.8, 11081.0], [97.9, 11081.0], [98.0, 11109.0], [98.1, 11109.0], [98.2, 11109.0], [98.3, 11109.0], [98.4, 11109.0], [98.5, 11109.0], [98.6, 11109.0], [98.7, 11109.0], [98.8, 11109.0], [98.9, 11109.0], [99.0, 22337.0], [99.1, 22337.0], [99.2, 22337.0], [99.3, 22337.0], [99.4, 22337.0], [99.5, 22337.0], [99.6, 22337.0], [99.7, 22337.0], [99.8, 22337.0], [99.9, 22337.0]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[0.0, 4534.0], [0.1, 4534.0], [0.2, 4534.0], [0.3, 4534.0], [0.4, 4534.0], [0.5, 4534.0], [0.6, 4534.0], [0.7, 4534.0], [0.8, 4534.0], [0.9, 4534.0], [1.0, 4712.0], [1.1, 4712.0], [1.2, 4712.0], [1.3, 4712.0], [1.4, 4712.0], [1.5, 4712.0], [1.6, 4712.0], [1.7, 4712.0], [1.8, 4712.0], [1.9, 4712.0], [2.0, 4911.0], [2.1, 4911.0], [2.2, 4911.0], [2.3, 4911.0], [2.4, 4911.0], [2.5, 4911.0], [2.6, 4911.0], [2.7, 4911.0], [2.8, 4911.0], [2.9, 4911.0], [3.0, 4981.0], [3.1, 4981.0], [3.2, 4981.0], [3.3, 4981.0], [3.4, 4981.0], [3.5, 4981.0], [3.6, 4981.0], [3.7, 4981.0], [3.8, 4981.0], [3.9, 4981.0], [4.0, 5055.0], [4.1, 5055.0], [4.2, 5055.0], [4.3, 5055.0], [4.4, 5055.0], [4.5, 5055.0], [4.6, 5055.0], [4.7, 5055.0], [4.8, 5055.0], [4.9, 5055.0], [5.0, 5220.0], [5.1, 5220.0], [5.2, 5220.0], [5.3, 5220.0], [5.4, 5220.0], [5.5, 5220.0], [5.6, 5220.0], [5.7, 5220.0], [5.8, 5220.0], [5.9, 5220.0], [6.0, 5763.0], [6.1, 5763.0], [6.2, 5763.0], [6.3, 5763.0], [6.4, 5763.0], [6.5, 5763.0], [6.6, 5763.0], [6.7, 5763.0], [6.8, 5763.0], [6.9, 5763.0], [7.0, 6154.0], [7.1, 6154.0], [7.2, 6154.0], [7.3, 6154.0], [7.4, 6154.0], [7.5, 6154.0], [7.6, 6154.0], [7.7, 6154.0], [7.8, 6154.0], [7.9, 6154.0], [8.0, 7007.0], [8.1, 7007.0], [8.2, 7007.0], [8.3, 7007.0], [8.4, 7007.0], [8.5, 7007.0], [8.6, 7007.0], [8.7, 7007.0], [8.8, 7007.0], [8.9, 7007.0], [9.0, 7282.0], [9.1, 7282.0], [9.2, 7282.0], [9.3, 7282.0], [9.4, 7282.0], [9.5, 7282.0], [9.6, 7282.0], [9.7, 7282.0], [9.8, 7282.0], [9.9, 7282.0], [10.0, 7522.0], [10.1, 7522.0], [10.2, 7522.0], [10.3, 7522.0], [10.4, 7522.0], [10.5, 7522.0], [10.6, 7522.0], [10.7, 7522.0], [10.8, 7522.0], [10.9, 7522.0], [11.0, 7819.0], [11.1, 7819.0], [11.2, 7819.0], [11.3, 7819.0], [11.4, 7819.0], [11.5, 7819.0], [11.6, 7819.0], [11.7, 7819.0], [11.8, 7819.0], [11.9, 7819.0], [12.0, 7992.0], [12.1, 7992.0], [12.2, 7992.0], [12.3, 7992.0], [12.4, 7992.0], [12.5, 7992.0], [12.6, 7992.0], [12.7, 7992.0], [12.8, 7992.0], [12.9, 7992.0], [13.0, 7999.0], [13.1, 7999.0], [13.2, 7999.0], [13.3, 7999.0], [13.4, 7999.0], [13.5, 7999.0], [13.6, 7999.0], [13.7, 7999.0], [13.8, 7999.0], [13.9, 7999.0], [14.0, 8266.0], [14.1, 8266.0], [14.2, 8266.0], [14.3, 8266.0], [14.4, 8266.0], [14.5, 8266.0], [14.6, 8266.0], [14.7, 8266.0], [14.8, 8266.0], [14.9, 8266.0], [15.0, 8327.0], [15.1, 8327.0], [15.2, 8327.0], [15.3, 8327.0], [15.4, 8327.0], [15.5, 8327.0], [15.6, 8327.0], [15.7, 8327.0], [15.8, 8327.0], [15.9, 8327.0], [16.0, 8440.0], [16.1, 8440.0], [16.2, 8440.0], [16.3, 8440.0], [16.4, 8440.0], [16.5, 8440.0], [16.6, 8440.0], [16.7, 8440.0], [16.8, 8440.0], [16.9, 8440.0], [17.0, 8627.0], [17.1, 8627.0], [17.2, 8627.0], [17.3, 8627.0], [17.4, 8627.0], [17.5, 8627.0], [17.6, 8627.0], [17.7, 8627.0], [17.8, 8627.0], [17.9, 8627.0], [18.0, 8764.0], [18.1, 8764.0], [18.2, 8764.0], [18.3, 8764.0], [18.4, 8764.0], [18.5, 8764.0], [18.6, 8764.0], [18.7, 8764.0], [18.8, 8764.0], [18.9, 8764.0], [19.0, 8807.0], [19.1, 8807.0], [19.2, 8807.0], [19.3, 8807.0], [19.4, 8807.0], [19.5, 8807.0], [19.6, 8807.0], [19.7, 8807.0], [19.8, 8807.0], [19.9, 8807.0], [20.0, 8896.0], [20.1, 8896.0], [20.2, 8896.0], [20.3, 8896.0], [20.4, 8896.0], [20.5, 8896.0], [20.6, 8896.0], [20.7, 8896.0], [20.8, 8896.0], [20.9, 8896.0], [21.0, 8899.0], [21.1, 8899.0], [21.2, 8899.0], [21.3, 8899.0], [21.4, 8899.0], [21.5, 8899.0], [21.6, 8899.0], [21.7, 8899.0], [21.8, 8899.0], [21.9, 8899.0], [22.0, 9015.0], [22.1, 9015.0], [22.2, 9015.0], [22.3, 9015.0], [22.4, 9015.0], [22.5, 9015.0], [22.6, 9015.0], [22.7, 9015.0], [22.8, 9015.0], [22.9, 9015.0], [23.0, 9190.0], [23.1, 9190.0], [23.2, 9190.0], [23.3, 9190.0], [23.4, 9190.0], [23.5, 9190.0], [23.6, 9190.0], [23.7, 9190.0], [23.8, 9190.0], [23.9, 9190.0], [24.0, 9363.0], [24.1, 9363.0], [24.2, 9363.0], [24.3, 9363.0], [24.4, 9363.0], [24.5, 9363.0], [24.6, 9363.0], [24.7, 9363.0], [24.8, 9363.0], [24.9, 9363.0], [25.0, 9627.0], [25.1, 9627.0], [25.2, 9627.0], [25.3, 9627.0], [25.4, 9627.0], [25.5, 9627.0], [25.6, 9627.0], [25.7, 9627.0], [25.8, 9627.0], [25.9, 9627.0], [26.0, 9925.0], [26.1, 9925.0], [26.2, 9925.0], [26.3, 9925.0], [26.4, 9925.0], [26.5, 9925.0], [26.6, 9925.0], [26.7, 9925.0], [26.8, 9925.0], [26.9, 9925.0], [27.0, 10094.0], [27.1, 10094.0], [27.2, 10094.0], [27.3, 10094.0], [27.4, 10094.0], [27.5, 10094.0], [27.6, 10094.0], [27.7, 10094.0], [27.8, 10094.0], [27.9, 10094.0], [28.0, 10235.0], [28.1, 10235.0], [28.2, 10235.0], [28.3, 10235.0], [28.4, 10235.0], [28.5, 10235.0], [28.6, 10235.0], [28.7, 10235.0], [28.8, 10235.0], [28.9, 10235.0], [29.0, 10493.0], [29.1, 10493.0], [29.2, 10493.0], [29.3, 10493.0], [29.4, 10493.0], [29.5, 10493.0], [29.6, 10493.0], [29.7, 10493.0], [29.8, 10493.0], [29.9, 10493.0], [30.0, 10550.0], [30.1, 10550.0], [30.2, 10550.0], [30.3, 10550.0], [30.4, 10550.0], [30.5, 10550.0], [30.6, 10550.0], [30.7, 10550.0], [30.8, 10550.0], [30.9, 10550.0], [31.0, 10826.0], [31.1, 10826.0], [31.2, 10826.0], [31.3, 10826.0], [31.4, 10826.0], [31.5, 10826.0], [31.6, 10826.0], [31.7, 10826.0], [31.8, 10826.0], [31.9, 10826.0], [32.0, 10868.0], [32.1, 10868.0], [32.2, 10868.0], [32.3, 10868.0], [32.4, 10868.0], [32.5, 10868.0], [32.6, 10868.0], [32.7, 10868.0], [32.8, 10868.0], [32.9, 10868.0], [33.0, 10879.0], [33.1, 10879.0], [33.2, 10879.0], [33.3, 10879.0], [33.4, 10879.0], [33.5, 10879.0], [33.6, 10879.0], [33.7, 10879.0], [33.8, 10879.0], [33.9, 10879.0], [34.0, 10950.0], [34.1, 10950.0], [34.2, 10950.0], [34.3, 10950.0], [34.4, 10950.0], [34.5, 10950.0], [34.6, 10950.0], [34.7, 10950.0], [34.8, 10950.0], [34.9, 10950.0], [35.0, 11044.0], [35.1, 11044.0], [35.2, 11044.0], [35.3, 11044.0], [35.4, 11044.0], [35.5, 11044.0], [35.6, 11044.0], [35.7, 11044.0], [35.8, 11044.0], [35.9, 11044.0], [36.0, 11100.0], [36.1, 11100.0], [36.2, 11100.0], [36.3, 11100.0], [36.4, 11100.0], [36.5, 11100.0], [36.6, 11100.0], [36.7, 11100.0], [36.8, 11100.0], [36.9, 11100.0], [37.0, 11203.0], [37.1, 11203.0], [37.2, 11203.0], [37.3, 11203.0], [37.4, 11203.0], [37.5, 11203.0], [37.6, 11203.0], [37.7, 11203.0], [37.8, 11203.0], [37.9, 11203.0], [38.0, 11239.0], [38.1, 11239.0], [38.2, 11239.0], [38.3, 11239.0], [38.4, 11239.0], [38.5, 11239.0], [38.6, 11239.0], [38.7, 11239.0], [38.8, 11239.0], [38.9, 11239.0], [39.0, 11241.0], [39.1, 11241.0], [39.2, 11241.0], [39.3, 11241.0], [39.4, 11241.0], [39.5, 11241.0], [39.6, 11241.0], [39.7, 11241.0], [39.8, 11241.0], [39.9, 11241.0], [40.0, 11265.0], [40.1, 11265.0], [40.2, 11265.0], [40.3, 11265.0], [40.4, 11265.0], [40.5, 11265.0], [40.6, 11265.0], [40.7, 11265.0], [40.8, 11265.0], [40.9, 11265.0], [41.0, 11295.0], [41.1, 11295.0], [41.2, 11295.0], [41.3, 11295.0], [41.4, 11295.0], [41.5, 11295.0], [41.6, 11295.0], [41.7, 11295.0], [41.8, 11295.0], [41.9, 11295.0], [42.0, 11325.0], [42.1, 11325.0], [42.2, 11325.0], [42.3, 11325.0], [42.4, 11325.0], [42.5, 11325.0], [42.6, 11325.0], [42.7, 11325.0], [42.8, 11325.0], [42.9, 11325.0], [43.0, 11374.0], [43.1, 11374.0], [43.2, 11374.0], [43.3, 11374.0], [43.4, 11374.0], [43.5, 11374.0], [43.6, 11374.0], [43.7, 11374.0], [43.8, 11374.0], [43.9, 11374.0], [44.0, 11644.0], [44.1, 11644.0], [44.2, 11644.0], [44.3, 11644.0], [44.4, 11644.0], [44.5, 11644.0], [44.6, 11644.0], [44.7, 11644.0], [44.8, 11644.0], [44.9, 11644.0], [45.0, 11705.0], [45.1, 11705.0], [45.2, 11705.0], [45.3, 11705.0], [45.4, 11705.0], [45.5, 11705.0], [45.6, 11705.0], [45.7, 11705.0], [45.8, 11705.0], [45.9, 11705.0], [46.0, 11712.0], [46.1, 11712.0], [46.2, 11712.0], [46.3, 11712.0], [46.4, 11712.0], [46.5, 11712.0], [46.6, 11712.0], [46.7, 11712.0], [46.8, 11712.0], [46.9, 11712.0], [47.0, 11775.0], [47.1, 11775.0], [47.2, 11775.0], [47.3, 11775.0], [47.4, 11775.0], [47.5, 11775.0], [47.6, 11775.0], [47.7, 11775.0], [47.8, 11775.0], [47.9, 11775.0], [48.0, 11915.0], [48.1, 11915.0], [48.2, 11915.0], [48.3, 11915.0], [48.4, 11915.0], [48.5, 11915.0], [48.6, 11915.0], [48.7, 11915.0], [48.8, 11915.0], [48.9, 11915.0], [49.0, 11974.0], [49.1, 11974.0], [49.2, 11974.0], [49.3, 11974.0], [49.4, 11974.0], [49.5, 11974.0], [49.6, 11974.0], [49.7, 11974.0], [49.8, 11974.0], [49.9, 11974.0], [50.0, 12030.0], [50.1, 12030.0], [50.2, 12030.0], [50.3, 12030.0], [50.4, 12030.0], [50.5, 12030.0], [50.6, 12030.0], [50.7, 12030.0], [50.8, 12030.0], [50.9, 12030.0], [51.0, 12241.0], [51.1, 12241.0], [51.2, 12241.0], [51.3, 12241.0], [51.4, 12241.0], [51.5, 12241.0], [51.6, 12241.0], [51.7, 12241.0], [51.8, 12241.0], [51.9, 12241.0], [52.0, 12330.0], [52.1, 12330.0], [52.2, 12330.0], [52.3, 12330.0], [52.4, 12330.0], [52.5, 12330.0], [52.6, 12330.0], [52.7, 12330.0], [52.8, 12330.0], [52.9, 12330.0], [53.0, 12465.0], [53.1, 12465.0], [53.2, 12465.0], [53.3, 12465.0], [53.4, 12465.0], [53.5, 12465.0], [53.6, 12465.0], [53.7, 12465.0], [53.8, 12465.0], [53.9, 12465.0], [54.0, 12467.0], [54.1, 12467.0], [54.2, 12467.0], [54.3, 12467.0], [54.4, 12467.0], [54.5, 12467.0], [54.6, 12467.0], [54.7, 12467.0], [54.8, 12467.0], [54.9, 12467.0], [55.0, 12515.0], [55.1, 12515.0], [55.2, 12515.0], [55.3, 12515.0], [55.4, 12515.0], [55.5, 12515.0], [55.6, 12515.0], [55.7, 12515.0], [55.8, 12515.0], [55.9, 12515.0], [56.0, 12540.0], [56.1, 12540.0], [56.2, 12540.0], [56.3, 12540.0], [56.4, 12540.0], [56.5, 12540.0], [56.6, 12540.0], [56.7, 12540.0], [56.8, 12540.0], [56.9, 12540.0], [57.0, 12560.0], [57.1, 12560.0], [57.2, 12560.0], [57.3, 12560.0], [57.4, 12560.0], [57.5, 12560.0], [57.6, 12560.0], [57.7, 12560.0], [57.8, 12560.0], [57.9, 12560.0], [58.0, 12693.0], [58.1, 12693.0], [58.2, 12693.0], [58.3, 12693.0], [58.4, 12693.0], [58.5, 12693.0], [58.6, 12693.0], [58.7, 12693.0], [58.8, 12693.0], [58.9, 12693.0], [59.0, 12739.0], [59.1, 12739.0], [59.2, 12739.0], [59.3, 12739.0], [59.4, 12739.0], [59.5, 12739.0], [59.6, 12739.0], [59.7, 12739.0], [59.8, 12739.0], [59.9, 12739.0], [60.0, 12831.0], [60.1, 12831.0], [60.2, 12831.0], [60.3, 12831.0], [60.4, 12831.0], [60.5, 12831.0], [60.6, 12831.0], [60.7, 12831.0], [60.8, 12831.0], [60.9, 12831.0], [61.0, 12836.0], [61.1, 12836.0], [61.2, 12836.0], [61.3, 12836.0], [61.4, 12836.0], [61.5, 12836.0], [61.6, 12836.0], [61.7, 12836.0], [61.8, 12836.0], [61.9, 12836.0], [62.0, 12906.0], [62.1, 12906.0], [62.2, 12906.0], [62.3, 12906.0], [62.4, 12906.0], [62.5, 12906.0], [62.6, 12906.0], [62.7, 12906.0], [62.8, 12906.0], [62.9, 12906.0], [63.0, 12975.0], [63.1, 12975.0], [63.2, 12975.0], [63.3, 12975.0], [63.4, 12975.0], [63.5, 12975.0], [63.6, 12975.0], [63.7, 12975.0], [63.8, 12975.0], [63.9, 12975.0], [64.0, 13024.0], [64.1, 13024.0], [64.2, 13024.0], [64.3, 13024.0], [64.4, 13024.0], [64.5, 13024.0], [64.6, 13024.0], [64.7, 13024.0], [64.8, 13024.0], [64.9, 13024.0], [65.0, 13039.0], [65.1, 13039.0], [65.2, 13039.0], [65.3, 13039.0], [65.4, 13039.0], [65.5, 13039.0], [65.6, 13039.0], [65.7, 13039.0], [65.8, 13039.0], [65.9, 13039.0], [66.0, 13084.0], [66.1, 13084.0], [66.2, 13084.0], [66.3, 13084.0], [66.4, 13084.0], [66.5, 13084.0], [66.6, 13084.0], [66.7, 13084.0], [66.8, 13084.0], [66.9, 13084.0], [67.0, 13112.0], [67.1, 13112.0], [67.2, 13112.0], [67.3, 13112.0], [67.4, 13112.0], [67.5, 13112.0], [67.6, 13112.0], [67.7, 13112.0], [67.8, 13112.0], [67.9, 13112.0], [68.0, 13165.0], [68.1, 13165.0], [68.2, 13165.0], [68.3, 13165.0], [68.4, 13165.0], [68.5, 13165.0], [68.6, 13165.0], [68.7, 13165.0], [68.8, 13165.0], [68.9, 13165.0], [69.0, 13251.0], [69.1, 13251.0], [69.2, 13251.0], [69.3, 13251.0], [69.4, 13251.0], [69.5, 13251.0], [69.6, 13251.0], [69.7, 13251.0], [69.8, 13251.0], [69.9, 13251.0], [70.0, 13260.0], [70.1, 13260.0], [70.2, 13260.0], [70.3, 13260.0], [70.4, 13260.0], [70.5, 13260.0], [70.6, 13260.0], [70.7, 13260.0], [70.8, 13260.0], [70.9, 13260.0], [71.0, 13473.0], [71.1, 13473.0], [71.2, 13473.0], [71.3, 13473.0], [71.4, 13473.0], [71.5, 13473.0], [71.6, 13473.0], [71.7, 13473.0], [71.8, 13473.0], [71.9, 13473.0], [72.0, 13496.0], [72.1, 13496.0], [72.2, 13496.0], [72.3, 13496.0], [72.4, 13496.0], [72.5, 13496.0], [72.6, 13496.0], [72.7, 13496.0], [72.8, 13496.0], [72.9, 13496.0], [73.0, 13576.0], [73.1, 13576.0], [73.2, 13576.0], [73.3, 13576.0], [73.4, 13576.0], [73.5, 13576.0], [73.6, 13576.0], [73.7, 13576.0], [73.8, 13576.0], [73.9, 13576.0], [74.0, 13658.0], [74.1, 13658.0], [74.2, 13658.0], [74.3, 13658.0], [74.4, 13658.0], [74.5, 13658.0], [74.6, 13658.0], [74.7, 13658.0], [74.8, 13658.0], [74.9, 13658.0], [75.0, 13699.0], [75.1, 13699.0], [75.2, 13699.0], [75.3, 13699.0], [75.4, 13699.0], [75.5, 13699.0], [75.6, 13699.0], [75.7, 13699.0], [75.8, 13699.0], [75.9, 13699.0], [76.0, 13708.0], [76.1, 13708.0], [76.2, 13708.0], [76.3, 13708.0], [76.4, 13708.0], [76.5, 13708.0], [76.6, 13708.0], [76.7, 13708.0], [76.8, 13708.0], [76.9, 13708.0], [77.0, 13730.0], [77.1, 13730.0], [77.2, 13730.0], [77.3, 13730.0], [77.4, 13730.0], [77.5, 13730.0], [77.6, 13730.0], [77.7, 13730.0], [77.8, 13730.0], [77.9, 13730.0], [78.0, 13827.0], [78.1, 13827.0], [78.2, 13827.0], [78.3, 13827.0], [78.4, 13827.0], [78.5, 13827.0], [78.6, 13827.0], [78.7, 13827.0], [78.8, 13827.0], [78.9, 13827.0], [79.0, 13903.0], [79.1, 13903.0], [79.2, 13903.0], [79.3, 13903.0], [79.4, 13903.0], [79.5, 13903.0], [79.6, 13903.0], [79.7, 13903.0], [79.8, 13903.0], [79.9, 13903.0], [80.0, 13979.0], [80.1, 13979.0], [80.2, 13979.0], [80.3, 13979.0], [80.4, 13979.0], [80.5, 13979.0], [80.6, 13979.0], [80.7, 13979.0], [80.8, 13979.0], [80.9, 13979.0], [81.0, 14135.0], [81.1, 14135.0], [81.2, 14135.0], [81.3, 14135.0], [81.4, 14135.0], [81.5, 14135.0], [81.6, 14135.0], [81.7, 14135.0], [81.8, 14135.0], [81.9, 14135.0], [82.0, 14401.0], [82.1, 14401.0], [82.2, 14401.0], [82.3, 14401.0], [82.4, 14401.0], [82.5, 14401.0], [82.6, 14401.0], [82.7, 14401.0], [82.8, 14401.0], [82.9, 14401.0], [83.0, 14427.0], [83.1, 14427.0], [83.2, 14427.0], [83.3, 14427.0], [83.4, 14427.0], [83.5, 14427.0], [83.6, 14427.0], [83.7, 14427.0], [83.8, 14427.0], [83.9, 14427.0], [84.0, 14559.0], [84.1, 14559.0], [84.2, 14559.0], [84.3, 14559.0], [84.4, 14559.0], [84.5, 14559.0], [84.6, 14559.0], [84.7, 14559.0], [84.8, 14559.0], [84.9, 14559.0], [85.0, 14623.0], [85.1, 14623.0], [85.2, 14623.0], [85.3, 14623.0], [85.4, 14623.0], [85.5, 14623.0], [85.6, 14623.0], [85.7, 14623.0], [85.8, 14623.0], [85.9, 14623.0], [86.0, 14649.0], [86.1, 14649.0], [86.2, 14649.0], [86.3, 14649.0], [86.4, 14649.0], [86.5, 14649.0], [86.6, 14649.0], [86.7, 14649.0], [86.8, 14649.0], [86.9, 14649.0], [87.0, 14718.0], [87.1, 14718.0], [87.2, 14718.0], [87.3, 14718.0], [87.4, 14718.0], [87.5, 14718.0], [87.6, 14718.0], [87.7, 14718.0], [87.8, 14718.0], [87.9, 14718.0], [88.0, 14815.0], [88.1, 14815.0], [88.2, 14815.0], [88.3, 14815.0], [88.4, 14815.0], [88.5, 14815.0], [88.6, 14815.0], [88.7, 14815.0], [88.8, 14815.0], [88.9, 14815.0], [89.0, 14876.0], [89.1, 14876.0], [89.2, 14876.0], [89.3, 14876.0], [89.4, 14876.0], [89.5, 14876.0], [89.6, 14876.0], [89.7, 14876.0], [89.8, 14876.0], [89.9, 14876.0], [90.0, 15031.0], [90.1, 15031.0], [90.2, 15031.0], [90.3, 15031.0], [90.4, 15031.0], [90.5, 15031.0], [90.6, 15031.0], [90.7, 15031.0], [90.8, 15031.0], [90.9, 15031.0], [91.0, 15085.0], [91.1, 15085.0], [91.2, 15085.0], [91.3, 15085.0], [91.4, 15085.0], [91.5, 15085.0], [91.6, 15085.0], [91.7, 15085.0], [91.8, 15085.0], [91.9, 15085.0], [92.0, 15117.0], [92.1, 15117.0], [92.2, 15117.0], [92.3, 15117.0], [92.4, 15117.0], [92.5, 15117.0], [92.6, 15117.0], [92.7, 15117.0], [92.8, 15117.0], [92.9, 15117.0], [93.0, 15141.0], [93.1, 15141.0], [93.2, 15141.0], [93.3, 15141.0], [93.4, 15141.0], [93.5, 15141.0], [93.6, 15141.0], [93.7, 15141.0], [93.8, 15141.0], [93.9, 15141.0], [94.0, 15203.0], [94.1, 15203.0], [94.2, 15203.0], [94.3, 15203.0], [94.4, 15203.0], [94.5, 15203.0], [94.6, 15203.0], [94.7, 15203.0], [94.8, 15203.0], [94.9, 15203.0], [95.0, 15331.0], [95.1, 15331.0], [95.2, 15331.0], [95.3, 15331.0], [95.4, 15331.0], [95.5, 15331.0], [95.6, 15331.0], [95.7, 15331.0], [95.8, 15331.0], [95.9, 15331.0], [96.0, 15394.0], [96.1, 15394.0], [96.2, 15394.0], [96.3, 15394.0], [96.4, 15394.0], [96.5, 15394.0], [96.6, 15394.0], [96.7, 15394.0], [96.8, 15394.0], [96.9, 15394.0], [97.0, 15401.0], [97.1, 15401.0], [97.2, 15401.0], [97.3, 15401.0], [97.4, 15401.0], [97.5, 15401.0], [97.6, 15401.0], [97.7, 15401.0], [97.8, 15401.0], [97.9, 15401.0], [98.0, 15782.0], [98.1, 15782.0], [98.2, 15782.0], [98.3, 15782.0], [98.4, 15782.0], [98.5, 15782.0], [98.6, 15782.0], [98.7, 15782.0], [98.8, 15782.0], [98.9, 15782.0], [99.0, 26762.0], [99.1, 26762.0], [99.2, 26762.0], [99.3, 26762.0], [99.4, 26762.0], [99.5, 26762.0], [99.6, 26762.0], [99.7, 26762.0], [99.8, 26762.0], [99.9, 26762.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 85.0], [0.1, 85.0], [0.2, 85.0], [0.3, 85.0], [0.4, 85.0], [0.5, 85.0], [0.6, 85.0], [0.7, 85.0], [0.8, 85.0], [0.9, 85.0], [1.0, 148.0], [1.1, 148.0], [1.2, 148.0], [1.3, 148.0], [1.4, 148.0], [1.5, 148.0], [1.6, 148.0], [1.7, 148.0], [1.8, 148.0], [1.9, 148.0], [2.0, 152.0], [2.1, 152.0], [2.2, 152.0], [2.3, 152.0], [2.4, 152.0], [2.5, 152.0], [2.6, 152.0], [2.7, 152.0], [2.8, 152.0], [2.9, 152.0], [3.0, 182.0], [3.1, 182.0], [3.2, 182.0], [3.3, 182.0], [3.4, 182.0], [3.5, 182.0], [3.6, 182.0], [3.7, 182.0], [3.8, 182.0], [3.9, 182.0], [4.0, 443.0], [4.1, 443.0], [4.2, 443.0], [4.3, 443.0], [4.4, 443.0], [4.5, 443.0], [4.6, 443.0], [4.7, 443.0], [4.8, 443.0], [4.9, 443.0], [5.0, 492.0], [5.1, 492.0], [5.2, 492.0], [5.3, 492.0], [5.4, 492.0], [5.5, 492.0], [5.6, 492.0], [5.7, 492.0], [5.8, 492.0], [5.9, 492.0], [6.0, 519.0], [6.1, 519.0], [6.2, 519.0], [6.3, 519.0], [6.4, 519.0], [6.5, 519.0], [6.6, 519.0], [6.7, 519.0], [6.8, 519.0], [6.9, 519.0], [7.0, 530.0], [7.1, 530.0], [7.2, 530.0], [7.3, 530.0], [7.4, 530.0], [7.5, 530.0], [7.6, 530.0], [7.7, 530.0], [7.8, 530.0], [7.9, 530.0], [8.0, 537.0], [8.1, 537.0], [8.2, 537.0], [8.3, 537.0], [8.4, 537.0], [8.5, 537.0], [8.6, 537.0], [8.7, 537.0], [8.8, 537.0], [8.9, 537.0], [9.0, 544.0], [9.1, 544.0], [9.2, 544.0], [9.3, 544.0], [9.4, 544.0], [9.5, 544.0], [9.6, 544.0], [9.7, 544.0], [9.8, 544.0], [9.9, 544.0], [10.0, 548.0], [10.1, 548.0], [10.2, 548.0], [10.3, 548.0], [10.4, 548.0], [10.5, 548.0], [10.6, 548.0], [10.7, 548.0], [10.8, 548.0], [10.9, 548.0], [11.0, 558.0], [11.1, 558.0], [11.2, 558.0], [11.3, 558.0], [11.4, 558.0], [11.5, 558.0], [11.6, 558.0], [11.7, 558.0], [11.8, 558.0], [11.9, 558.0], [12.0, 594.0], [12.1, 594.0], [12.2, 594.0], [12.3, 594.0], [12.4, 594.0], [12.5, 594.0], [12.6, 594.0], [12.7, 594.0], [12.8, 594.0], [12.9, 594.0], [13.0, 603.0], [13.1, 603.0], [13.2, 603.0], [13.3, 603.0], [13.4, 603.0], [13.5, 603.0], [13.6, 603.0], [13.7, 603.0], [13.8, 603.0], [13.9, 603.0], [14.0, 605.0], [14.1, 605.0], [14.2, 605.0], [14.3, 605.0], [14.4, 605.0], [14.5, 605.0], [14.6, 605.0], [14.7, 605.0], [14.8, 605.0], [14.9, 605.0], [15.0, 610.0], [15.1, 610.0], [15.2, 610.0], [15.3, 610.0], [15.4, 610.0], [15.5, 610.0], [15.6, 610.0], [15.7, 610.0], [15.8, 610.0], [15.9, 610.0], [16.0, 616.0], [16.1, 616.0], [16.2, 616.0], [16.3, 616.0], [16.4, 616.0], [16.5, 616.0], [16.6, 616.0], [16.7, 616.0], [16.8, 616.0], [16.9, 616.0], [17.0, 619.0], [17.1, 619.0], [17.2, 619.0], [17.3, 619.0], [17.4, 619.0], [17.5, 619.0], [17.6, 619.0], [17.7, 619.0], [17.8, 619.0], [17.9, 619.0], [18.0, 641.0], [18.1, 641.0], [18.2, 641.0], [18.3, 641.0], [18.4, 641.0], [18.5, 641.0], [18.6, 641.0], [18.7, 641.0], [18.8, 641.0], [18.9, 641.0], [19.0, 653.0], [19.1, 653.0], [19.2, 653.0], [19.3, 653.0], [19.4, 653.0], [19.5, 653.0], [19.6, 653.0], [19.7, 653.0], [19.8, 653.0], [19.9, 653.0], [20.0, 656.0], [20.1, 656.0], [20.2, 656.0], [20.3, 656.0], [20.4, 656.0], [20.5, 656.0], [20.6, 656.0], [20.7, 656.0], [20.8, 656.0], [20.9, 656.0], [21.0, 663.0], [21.1, 663.0], [21.2, 663.0], [21.3, 663.0], [21.4, 663.0], [21.5, 663.0], [21.6, 663.0], [21.7, 663.0], [21.8, 663.0], [21.9, 663.0], [22.0, 705.0], [22.1, 705.0], [22.2, 705.0], [22.3, 705.0], [22.4, 705.0], [22.5, 705.0], [22.6, 705.0], [22.7, 705.0], [22.8, 705.0], [22.9, 705.0], [23.0, 1948.0], [23.1, 1948.0], [23.2, 1948.0], [23.3, 1948.0], [23.4, 1948.0], [23.5, 1948.0], [23.6, 1948.0], [23.7, 1948.0], [23.8, 1948.0], [23.9, 1948.0], [24.0, 2106.0], [24.1, 2106.0], [24.2, 2106.0], [24.3, 2106.0], [24.4, 2106.0], [24.5, 2106.0], [24.6, 2106.0], [24.7, 2106.0], [24.8, 2106.0], [24.9, 2106.0], [25.0, 2116.0], [25.1, 2116.0], [25.2, 2116.0], [25.3, 2116.0], [25.4, 2116.0], [25.5, 2116.0], [25.6, 2116.0], [25.7, 2116.0], [25.8, 2116.0], [25.9, 2116.0], [26.0, 2118.0], [26.1, 2118.0], [26.2, 2118.0], [26.3, 2118.0], [26.4, 2118.0], [26.5, 2118.0], [26.6, 2118.0], [26.7, 2118.0], [26.8, 2118.0], [26.9, 2118.0], [27.0, 2156.0], [27.1, 2156.0], [27.2, 2156.0], [27.3, 2156.0], [27.4, 2156.0], [27.5, 2156.0], [27.6, 2156.0], [27.7, 2156.0], [27.8, 2156.0], [27.9, 2156.0], [28.0, 2237.0], [28.1, 2237.0], [28.2, 2237.0], [28.3, 2237.0], [28.4, 2237.0], [28.5, 2237.0], [28.6, 2237.0], [28.7, 2237.0], [28.8, 2237.0], [28.9, 2237.0], [29.0, 2269.0], [29.1, 2269.0], [29.2, 2269.0], [29.3, 2269.0], [29.4, 2269.0], [29.5, 2269.0], [29.6, 2269.0], [29.7, 2269.0], [29.8, 2269.0], [29.9, 2269.0], [30.0, 2277.0], [30.1, 2277.0], [30.2, 2277.0], [30.3, 2277.0], [30.4, 2277.0], [30.5, 2277.0], [30.6, 2277.0], [30.7, 2277.0], [30.8, 2277.0], [30.9, 2277.0], [31.0, 2455.0], [31.1, 2455.0], [31.2, 2455.0], [31.3, 2455.0], [31.4, 2455.0], [31.5, 2455.0], [31.6, 2455.0], [31.7, 2455.0], [31.8, 2455.0], [31.9, 2455.0], [32.0, 2473.0], [32.1, 2473.0], [32.2, 2473.0], [32.3, 2473.0], [32.4, 2473.0], [32.5, 2473.0], [32.6, 2473.0], [32.7, 2473.0], [32.8, 2473.0], [32.9, 2473.0], [33.0, 2505.0], [33.1, 2505.0], [33.2, 2505.0], [33.3, 2505.0], [33.4, 2505.0], [33.5, 2505.0], [33.6, 2505.0], [33.7, 2505.0], [33.8, 2505.0], [33.9, 2505.0], [34.0, 2644.0], [34.1, 2644.0], [34.2, 2644.0], [34.3, 2644.0], [34.4, 2644.0], [34.5, 2644.0], [34.6, 2644.0], [34.7, 2644.0], [34.8, 2644.0], [34.9, 2644.0], [35.0, 2678.0], [35.1, 2678.0], [35.2, 2678.0], [35.3, 2678.0], [35.4, 2678.0], [35.5, 2678.0], [35.6, 2678.0], [35.7, 2678.0], [35.8, 2678.0], [35.9, 2678.0], [36.0, 2688.0], [36.1, 2688.0], [36.2, 2688.0], [36.3, 2688.0], [36.4, 2688.0], [36.5, 2688.0], [36.6, 2688.0], [36.7, 2688.0], [36.8, 2688.0], [36.9, 2688.0], [37.0, 2726.0], [37.1, 2726.0], [37.2, 2726.0], [37.3, 2726.0], [37.4, 2726.0], [37.5, 2726.0], [37.6, 2726.0], [37.7, 2726.0], [37.8, 2726.0], [37.9, 2726.0], [38.0, 2760.0], [38.1, 2760.0], [38.2, 2760.0], [38.3, 2760.0], [38.4, 2760.0], [38.5, 2760.0], [38.6, 2760.0], [38.7, 2760.0], [38.8, 2760.0], [38.9, 2760.0], [39.0, 2764.0], [39.1, 2764.0], [39.2, 2764.0], [39.3, 2764.0], [39.4, 2764.0], [39.5, 2764.0], [39.6, 2764.0], [39.7, 2764.0], [39.8, 2764.0], [39.9, 2764.0], [40.0, 2875.0], [40.1, 2875.0], [40.2, 2875.0], [40.3, 2875.0], [40.4, 2875.0], [40.5, 2875.0], [40.6, 2875.0], [40.7, 2875.0], [40.8, 2875.0], [40.9, 2875.0], [41.0, 2990.0], [41.1, 2990.0], [41.2, 2990.0], [41.3, 2990.0], [41.4, 2990.0], [41.5, 2990.0], [41.6, 2990.0], [41.7, 2990.0], [41.8, 2990.0], [41.9, 2990.0], [42.0, 3084.0], [42.1, 3084.0], [42.2, 3084.0], [42.3, 3084.0], [42.4, 3084.0], [42.5, 3084.0], [42.6, 3084.0], [42.7, 3084.0], [42.8, 3084.0], [42.9, 3084.0], [43.0, 3121.0], [43.1, 3121.0], [43.2, 3121.0], [43.3, 3121.0], [43.4, 3121.0], [43.5, 3121.0], [43.6, 3121.0], [43.7, 3121.0], [43.8, 3121.0], [43.9, 3121.0], [44.0, 3162.0], [44.1, 3162.0], [44.2, 3162.0], [44.3, 3162.0], [44.4, 3162.0], [44.5, 3162.0], [44.6, 3162.0], [44.7, 3162.0], [44.8, 3162.0], [44.9, 3162.0], [45.0, 3168.0], [45.1, 3168.0], [45.2, 3168.0], [45.3, 3168.0], [45.4, 3168.0], [45.5, 3168.0], [45.6, 3168.0], [45.7, 3168.0], [45.8, 3168.0], [45.9, 3168.0], [46.0, 3168.0], [46.1, 3168.0], [46.2, 3168.0], [46.3, 3168.0], [46.4, 3168.0], [46.5, 3168.0], [46.6, 3168.0], [46.7, 3168.0], [46.8, 3168.0], [46.9, 3168.0], [47.0, 3304.0], [47.1, 3304.0], [47.2, 3304.0], [47.3, 3304.0], [47.4, 3304.0], [47.5, 3304.0], [47.6, 3304.0], [47.7, 3304.0], [47.8, 3304.0], [47.9, 3304.0], [48.0, 3317.0], [48.1, 3317.0], [48.2, 3317.0], [48.3, 3317.0], [48.4, 3317.0], [48.5, 3317.0], [48.6, 3317.0], [48.7, 3317.0], [48.8, 3317.0], [48.9, 3317.0], [49.0, 3319.0], [49.1, 3319.0], [49.2, 3319.0], [49.3, 3319.0], [49.4, 3319.0], [49.5, 3319.0], [49.6, 3319.0], [49.7, 3319.0], [49.8, 3319.0], [49.9, 3319.0], [50.0, 3373.0], [50.1, 3373.0], [50.2, 3373.0], [50.3, 3373.0], [50.4, 3373.0], [50.5, 3373.0], [50.6, 3373.0], [50.7, 3373.0], [50.8, 3373.0], [50.9, 3373.0], [51.0, 3396.0], [51.1, 3396.0], [51.2, 3396.0], [51.3, 3396.0], [51.4, 3396.0], [51.5, 3396.0], [51.6, 3396.0], [51.7, 3396.0], [51.8, 3396.0], [51.9, 3396.0], [52.0, 3465.0], [52.1, 3465.0], [52.2, 3465.0], [52.3, 3465.0], [52.4, 3465.0], [52.5, 3465.0], [52.6, 3465.0], [52.7, 3465.0], [52.8, 3465.0], [52.9, 3465.0], [53.0, 3544.0], [53.1, 3544.0], [53.2, 3544.0], [53.3, 3544.0], [53.4, 3544.0], [53.5, 3544.0], [53.6, 3544.0], [53.7, 3544.0], [53.8, 3544.0], [53.9, 3544.0], [54.0, 3719.0], [54.1, 3719.0], [54.2, 3719.0], [54.3, 3719.0], [54.4, 3719.0], [54.5, 3719.0], [54.6, 3719.0], [54.7, 3719.0], [54.8, 3719.0], [54.9, 3719.0], [55.0, 3727.0], [55.1, 3727.0], [55.2, 3727.0], [55.3, 3727.0], [55.4, 3727.0], [55.5, 3727.0], [55.6, 3727.0], [55.7, 3727.0], [55.8, 3727.0], [55.9, 3727.0], [56.0, 3758.0], [56.1, 3758.0], [56.2, 3758.0], [56.3, 3758.0], [56.4, 3758.0], [56.5, 3758.0], [56.6, 3758.0], [56.7, 3758.0], [56.8, 3758.0], [56.9, 3758.0], [57.0, 3760.0], [57.1, 3760.0], [57.2, 3760.0], [57.3, 3760.0], [57.4, 3760.0], [57.5, 3760.0], [57.6, 3760.0], [57.7, 3760.0], [57.8, 3760.0], [57.9, 3760.0], [58.0, 3813.0], [58.1, 3813.0], [58.2, 3813.0], [58.3, 3813.0], [58.4, 3813.0], [58.5, 3813.0], [58.6, 3813.0], [58.7, 3813.0], [58.8, 3813.0], [58.9, 3813.0], [59.0, 3867.0], [59.1, 3867.0], [59.2, 3867.0], [59.3, 3867.0], [59.4, 3867.0], [59.5, 3867.0], [59.6, 3867.0], [59.7, 3867.0], [59.8, 3867.0], [59.9, 3867.0], [60.0, 3886.0], [60.1, 3886.0], [60.2, 3886.0], [60.3, 3886.0], [60.4, 3886.0], [60.5, 3886.0], [60.6, 3886.0], [60.7, 3886.0], [60.8, 3886.0], [60.9, 3886.0], [61.0, 3887.0], [61.1, 3887.0], [61.2, 3887.0], [61.3, 3887.0], [61.4, 3887.0], [61.5, 3887.0], [61.6, 3887.0], [61.7, 3887.0], [61.8, 3887.0], [61.9, 3887.0], [62.0, 3903.0], [62.1, 3903.0], [62.2, 3903.0], [62.3, 3903.0], [62.4, 3903.0], [62.5, 3903.0], [62.6, 3903.0], [62.7, 3903.0], [62.8, 3903.0], [62.9, 3903.0], [63.0, 3909.0], [63.1, 3909.0], [63.2, 3909.0], [63.3, 3909.0], [63.4, 3909.0], [63.5, 3909.0], [63.6, 3909.0], [63.7, 3909.0], [63.8, 3909.0], [63.9, 3909.0], [64.0, 3912.0], [64.1, 3912.0], [64.2, 3912.0], [64.3, 3912.0], [64.4, 3912.0], [64.5, 3912.0], [64.6, 3912.0], [64.7, 3912.0], [64.8, 3912.0], [64.9, 3912.0], [65.0, 3914.0], [65.1, 3914.0], [65.2, 3914.0], [65.3, 3914.0], [65.4, 3914.0], [65.5, 3914.0], [65.6, 3914.0], [65.7, 3914.0], [65.8, 3914.0], [65.9, 3914.0], [66.0, 3918.0], [66.1, 3918.0], [66.2, 3918.0], [66.3, 3918.0], [66.4, 3918.0], [66.5, 3918.0], [66.6, 3918.0], [66.7, 3918.0], [66.8, 3918.0], [66.9, 3918.0], [67.0, 3926.0], [67.1, 3926.0], [67.2, 3926.0], [67.3, 3926.0], [67.4, 3926.0], [67.5, 3926.0], [67.6, 3926.0], [67.7, 3926.0], [67.8, 3926.0], [67.9, 3926.0], [68.0, 3937.0], [68.1, 3937.0], [68.2, 3937.0], [68.3, 3937.0], [68.4, 3937.0], [68.5, 3937.0], [68.6, 3937.0], [68.7, 3937.0], [68.8, 3937.0], [68.9, 3937.0], [69.0, 3947.0], [69.1, 3947.0], [69.2, 3947.0], [69.3, 3947.0], [69.4, 3947.0], [69.5, 3947.0], [69.6, 3947.0], [69.7, 3947.0], [69.8, 3947.0], [69.9, 3947.0], [70.0, 3947.0], [70.1, 3947.0], [70.2, 3947.0], [70.3, 3947.0], [70.4, 3947.0], [70.5, 3947.0], [70.6, 3947.0], [70.7, 3947.0], [70.8, 3947.0], [70.9, 3947.0], [71.0, 3953.0], [71.1, 3953.0], [71.2, 3953.0], [71.3, 3953.0], [71.4, 3953.0], [71.5, 3953.0], [71.6, 3953.0], [71.7, 3953.0], [71.8, 3953.0], [71.9, 3953.0], [72.0, 3964.0], [72.1, 3964.0], [72.2, 3964.0], [72.3, 3964.0], [72.4, 3964.0], [72.5, 3964.0], [72.6, 3964.0], [72.7, 3964.0], [72.8, 3964.0], [72.9, 3964.0], [73.0, 3966.0], [73.1, 3966.0], [73.2, 3966.0], [73.3, 3966.0], [73.4, 3966.0], [73.5, 3966.0], [73.6, 3966.0], [73.7, 3966.0], [73.8, 3966.0], [73.9, 3966.0], [74.0, 3977.0], [74.1, 3977.0], [74.2, 3977.0], [74.3, 3977.0], [74.4, 3977.0], [74.5, 3977.0], [74.6, 3977.0], [74.7, 3977.0], [74.8, 3977.0], [74.9, 3977.0], [75.0, 3983.0], [75.1, 3983.0], [75.2, 3983.0], [75.3, 3983.0], [75.4, 3983.0], [75.5, 3983.0], [75.6, 3983.0], [75.7, 3983.0], [75.8, 3983.0], [75.9, 3983.0], [76.0, 3985.0], [76.1, 3985.0], [76.2, 3985.0], [76.3, 3985.0], [76.4, 3985.0], [76.5, 3985.0], [76.6, 3985.0], [76.7, 3985.0], [76.8, 3985.0], [76.9, 3985.0], [77.0, 3987.0], [77.1, 3987.0], [77.2, 3987.0], [77.3, 3987.0], [77.4, 3987.0], [77.5, 3987.0], [77.6, 3987.0], [77.7, 3987.0], [77.8, 3987.0], [77.9, 3987.0], [78.0, 3988.0], [78.1, 3988.0], [78.2, 3988.0], [78.3, 3988.0], [78.4, 3988.0], [78.5, 3988.0], [78.6, 3988.0], [78.7, 3988.0], [78.8, 3988.0], [78.9, 3988.0], [79.0, 3992.0], [79.1, 3992.0], [79.2, 3992.0], [79.3, 3992.0], [79.4, 3992.0], [79.5, 3992.0], [79.6, 3992.0], [79.7, 3992.0], [79.8, 3992.0], [79.9, 3992.0], [80.0, 4001.0], [80.1, 4001.0], [80.2, 4001.0], [80.3, 4001.0], [80.4, 4001.0], [80.5, 4001.0], [80.6, 4001.0], [80.7, 4001.0], [80.8, 4001.0], [80.9, 4001.0], [81.0, 4008.0], [81.1, 4008.0], [81.2, 4008.0], [81.3, 4008.0], [81.4, 4008.0], [81.5, 4008.0], [81.6, 4008.0], [81.7, 4008.0], [81.8, 4008.0], [81.9, 4008.0], [82.0, 4022.0], [82.1, 4022.0], [82.2, 4022.0], [82.3, 4022.0], [82.4, 4022.0], [82.5, 4022.0], [82.6, 4022.0], [82.7, 4022.0], [82.8, 4022.0], [82.9, 4022.0], [83.0, 4026.0], [83.1, 4026.0], [83.2, 4026.0], [83.3, 4026.0], [83.4, 4026.0], [83.5, 4026.0], [83.6, 4026.0], [83.7, 4026.0], [83.8, 4026.0], [83.9, 4026.0], [84.0, 4036.0], [84.1, 4036.0], [84.2, 4036.0], [84.3, 4036.0], [84.4, 4036.0], [84.5, 4036.0], [84.6, 4036.0], [84.7, 4036.0], [84.8, 4036.0], [84.9, 4036.0], [85.0, 4043.0], [85.1, 4043.0], [85.2, 4043.0], [85.3, 4043.0], [85.4, 4043.0], [85.5, 4043.0], [85.6, 4043.0], [85.7, 4043.0], [85.8, 4043.0], [85.9, 4043.0], [86.0, 4043.0], [86.1, 4043.0], [86.2, 4043.0], [86.3, 4043.0], [86.4, 4043.0], [86.5, 4043.0], [86.6, 4043.0], [86.7, 4043.0], [86.8, 4043.0], [86.9, 4043.0], [87.0, 4047.0], [87.1, 4047.0], [87.2, 4047.0], [87.3, 4047.0], [87.4, 4047.0], [87.5, 4047.0], [87.6, 4047.0], [87.7, 4047.0], [87.8, 4047.0], [87.9, 4047.0], [88.0, 4052.0], [88.1, 4052.0], [88.2, 4052.0], [88.3, 4052.0], [88.4, 4052.0], [88.5, 4052.0], [88.6, 4052.0], [88.7, 4052.0], [88.8, 4052.0], [88.9, 4052.0], [89.0, 4053.0], [89.1, 4053.0], [89.2, 4053.0], [89.3, 4053.0], [89.4, 4053.0], [89.5, 4053.0], [89.6, 4053.0], [89.7, 4053.0], [89.8, 4053.0], [89.9, 4053.0], [90.0, 4053.0], [90.1, 4053.0], [90.2, 4053.0], [90.3, 4053.0], [90.4, 4053.0], [90.5, 4053.0], [90.6, 4053.0], [90.7, 4053.0], [90.8, 4053.0], [90.9, 4053.0], [91.0, 4062.0], [91.1, 4062.0], [91.2, 4062.0], [91.3, 4062.0], [91.4, 4062.0], [91.5, 4062.0], [91.6, 4062.0], [91.7, 4062.0], [91.8, 4062.0], [91.9, 4062.0], [92.0, 4062.0], [92.1, 4062.0], [92.2, 4062.0], [92.3, 4062.0], [92.4, 4062.0], [92.5, 4062.0], [92.6, 4062.0], [92.7, 4062.0], [92.8, 4062.0], [92.9, 4062.0], [93.0, 4064.0], [93.1, 4064.0], [93.2, 4064.0], [93.3, 4064.0], [93.4, 4064.0], [93.5, 4064.0], [93.6, 4064.0], [93.7, 4064.0], [93.8, 4064.0], [93.9, 4064.0], [94.0, 4068.0], [94.1, 4068.0], [94.2, 4068.0], [94.3, 4068.0], [94.4, 4068.0], [94.5, 4068.0], [94.6, 4068.0], [94.7, 4068.0], [94.8, 4068.0], [94.9, 4068.0], [95.0, 4071.0], [95.1, 4071.0], [95.2, 4071.0], [95.3, 4071.0], [95.4, 4071.0], [95.5, 4071.0], [95.6, 4071.0], [95.7, 4071.0], [95.8, 4071.0], [95.9, 4071.0], [96.0, 4074.0], [96.1, 4074.0], [96.2, 4074.0], [96.3, 4074.0], [96.4, 4074.0], [96.5, 4074.0], [96.6, 4074.0], [96.7, 4074.0], [96.8, 4074.0], [96.9, 4074.0], [97.0, 9203.0], [97.1, 9203.0], [97.2, 9203.0], [97.3, 9203.0], [97.4, 9203.0], [97.5, 9203.0], [97.6, 9203.0], [97.7, 9203.0], [97.8, 9203.0], [97.9, 9203.0], [98.0, 10516.0], [98.1, 10516.0], [98.2, 10516.0], [98.3, 10516.0], [98.4, 10516.0], [98.5, 10516.0], [98.6, 10516.0], [98.7, 10516.0], [98.8, 10516.0], [98.9, 10516.0], [99.0, 11629.0], [99.1, 11629.0], [99.2, 11629.0], [99.3, 11629.0], [99.4, 11629.0], [99.5, 11629.0], [99.6, 11629.0], [99.7, 11629.0], [99.8, 11629.0], [99.9, 11629.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[0.0, 404.0], [0.1, 404.0], [0.2, 404.0], [0.3, 404.0], [0.4, 404.0], [0.5, 404.0], [0.6, 404.0], [0.7, 404.0], [0.8, 404.0], [0.9, 404.0], [1.0, 452.0], [1.1, 452.0], [1.2, 452.0], [1.3, 452.0], [1.4, 452.0], [1.5, 452.0], [1.6, 452.0], [1.7, 452.0], [1.8, 452.0], [1.9, 452.0], [2.0, 593.0], [2.1, 593.0], [2.2, 593.0], [2.3, 593.0], [2.4, 593.0], [2.5, 593.0], [2.6, 593.0], [2.7, 593.0], [2.8, 593.0], [2.9, 593.0], [3.0, 666.0], [3.1, 666.0], [3.2, 666.0], [3.3, 666.0], [3.4, 666.0], [3.5, 666.0], [3.6, 666.0], [3.7, 666.0], [3.8, 666.0], [3.9, 666.0], [4.0, 744.0], [4.1, 744.0], [4.2, 744.0], [4.3, 744.0], [4.4, 744.0], [4.5, 744.0], [4.6, 744.0], [4.7, 744.0], [4.8, 744.0], [4.9, 744.0], [5.0, 764.0], [5.1, 764.0], [5.2, 764.0], [5.3, 764.0], [5.4, 764.0], [5.5, 764.0], [5.6, 764.0], [5.7, 764.0], [5.8, 764.0], [5.9, 764.0], [6.0, 802.0], [6.1, 802.0], [6.2, 802.0], [6.3, 802.0], [6.4, 802.0], [6.5, 802.0], [6.6, 802.0], [6.7, 802.0], [6.8, 802.0], [6.9, 802.0], [7.0, 897.0], [7.1, 897.0], [7.2, 897.0], [7.3, 897.0], [7.4, 897.0], [7.5, 897.0], [7.6, 897.0], [7.7, 897.0], [7.8, 897.0], [7.9, 897.0], [8.0, 941.0], [8.1, 941.0], [8.2, 941.0], [8.3, 941.0], [8.4, 941.0], [8.5, 941.0], [8.6, 941.0], [8.7, 941.0], [8.8, 941.0], [8.9, 941.0], [9.0, 972.0], [9.1, 972.0], [9.2, 972.0], [9.3, 972.0], [9.4, 972.0], [9.5, 972.0], [9.6, 972.0], [9.7, 972.0], [9.8, 972.0], [9.9, 972.0], [10.0, 993.0], [10.1, 993.0], [10.2, 993.0], [10.3, 993.0], [10.4, 993.0], [10.5, 993.0], [10.6, 993.0], [10.7, 993.0], [10.8, 993.0], [10.9, 993.0], [11.0, 1008.0], [11.1, 1008.0], [11.2, 1008.0], [11.3, 1008.0], [11.4, 1008.0], [11.5, 1008.0], [11.6, 1008.0], [11.7, 1008.0], [11.8, 1008.0], [11.9, 1008.0], [12.0, 1012.0], [12.1, 1012.0], [12.2, 1012.0], [12.3, 1012.0], [12.4, 1012.0], [12.5, 1012.0], [12.6, 1012.0], [12.7, 1012.0], [12.8, 1012.0], [12.9, 1012.0], [13.0, 1049.0], [13.1, 1049.0], [13.2, 1049.0], [13.3, 1049.0], [13.4, 1049.0], [13.5, 1049.0], [13.6, 1049.0], [13.7, 1049.0], [13.8, 1049.0], [13.9, 1049.0], [14.0, 1129.0], [14.1, 1129.0], [14.2, 1129.0], [14.3, 1129.0], [14.4, 1129.0], [14.5, 1129.0], [14.6, 1129.0], [14.7, 1129.0], [14.8, 1129.0], [14.9, 1129.0], [15.0, 1137.0], [15.1, 1137.0], [15.2, 1137.0], [15.3, 1137.0], [15.4, 1137.0], [15.5, 1137.0], [15.6, 1137.0], [15.7, 1137.0], [15.8, 1137.0], [15.9, 1137.0], [16.0, 1176.0], [16.1, 1176.0], [16.2, 1176.0], [16.3, 1176.0], [16.4, 1176.0], [16.5, 1176.0], [16.6, 1176.0], [16.7, 1176.0], [16.8, 1176.0], [16.9, 1176.0], [17.0, 1272.0], [17.1, 1272.0], [17.2, 1272.0], [17.3, 1272.0], [17.4, 1272.0], [17.5, 1272.0], [17.6, 1272.0], [17.7, 1272.0], [17.8, 1272.0], [17.9, 1272.0], [18.0, 1398.0], [18.1, 1398.0], [18.2, 1398.0], [18.3, 1398.0], [18.4, 1398.0], [18.5, 1398.0], [18.6, 1398.0], [18.7, 1398.0], [18.8, 1398.0], [18.9, 1398.0], [19.0, 1432.0], [19.1, 1432.0], [19.2, 1432.0], [19.3, 1432.0], [19.4, 1432.0], [19.5, 1432.0], [19.6, 1432.0], [19.7, 1432.0], [19.8, 1432.0], [19.9, 1432.0], [20.0, 1459.0], [20.1, 1459.0], [20.2, 1459.0], [20.3, 1459.0], [20.4, 1459.0], [20.5, 1459.0], [20.6, 1459.0], [20.7, 1459.0], [20.8, 1459.0], [20.9, 1459.0], [21.0, 1474.0], [21.1, 1474.0], [21.2, 1474.0], [21.3, 1474.0], [21.4, 1474.0], [21.5, 1474.0], [21.6, 1474.0], [21.7, 1474.0], [21.8, 1474.0], [21.9, 1474.0], [22.0, 1494.0], [22.1, 1494.0], [22.2, 1494.0], [22.3, 1494.0], [22.4, 1494.0], [22.5, 1494.0], [22.6, 1494.0], [22.7, 1494.0], [22.8, 1494.0], [22.9, 1494.0], [23.0, 1546.0], [23.1, 1546.0], [23.2, 1546.0], [23.3, 1546.0], [23.4, 1546.0], [23.5, 1546.0], [23.6, 1546.0], [23.7, 1546.0], [23.8, 1546.0], [23.9, 1546.0], [24.0, 1550.0], [24.1, 1550.0], [24.2, 1550.0], [24.3, 1550.0], [24.4, 1550.0], [24.5, 1550.0], [24.6, 1550.0], [24.7, 1550.0], [24.8, 1550.0], [24.9, 1550.0], [25.0, 1663.0], [25.1, 1663.0], [25.2, 1663.0], [25.3, 1663.0], [25.4, 1663.0], [25.5, 1663.0], [25.6, 1663.0], [25.7, 1663.0], [25.8, 1663.0], [25.9, 1663.0], [26.0, 1688.0], [26.1, 1688.0], [26.2, 1688.0], [26.3, 1688.0], [26.4, 1688.0], [26.5, 1688.0], [26.6, 1688.0], [26.7, 1688.0], [26.8, 1688.0], [26.9, 1688.0], [27.0, 1731.0], [27.1, 1731.0], [27.2, 1731.0], [27.3, 1731.0], [27.4, 1731.0], [27.5, 1731.0], [27.6, 1731.0], [27.7, 1731.0], [27.8, 1731.0], [27.9, 1731.0], [28.0, 1920.0], [28.1, 1920.0], [28.2, 1920.0], [28.3, 1920.0], [28.4, 1920.0], [28.5, 1920.0], [28.6, 1920.0], [28.7, 1920.0], [28.8, 1920.0], [28.9, 1920.0], [29.0, 2056.0], [29.1, 2056.0], [29.2, 2056.0], [29.3, 2056.0], [29.4, 2056.0], [29.5, 2056.0], [29.6, 2056.0], [29.7, 2056.0], [29.8, 2056.0], [29.9, 2056.0], [30.0, 2464.0], [30.1, 2464.0], [30.2, 2464.0], [30.3, 2464.0], [30.4, 2464.0], [30.5, 2464.0], [30.6, 2464.0], [30.7, 2464.0], [30.8, 2464.0], [30.9, 2464.0], [31.0, 2551.0], [31.1, 2551.0], [31.2, 2551.0], [31.3, 2551.0], [31.4, 2551.0], [31.5, 2551.0], [31.6, 2551.0], [31.7, 2551.0], [31.8, 2551.0], [31.9, 2551.0], [32.0, 2571.0], [32.1, 2571.0], [32.2, 2571.0], [32.3, 2571.0], [32.4, 2571.0], [32.5, 2571.0], [32.6, 2571.0], [32.7, 2571.0], [32.8, 2571.0], [32.9, 2571.0], [33.0, 2704.0], [33.1, 2704.0], [33.2, 2704.0], [33.3, 2704.0], [33.4, 2704.0], [33.5, 2704.0], [33.6, 2704.0], [33.7, 2704.0], [33.8, 2704.0], [33.9, 2704.0], [34.0, 2727.0], [34.1, 2727.0], [34.2, 2727.0], [34.3, 2727.0], [34.4, 2727.0], [34.5, 2727.0], [34.6, 2727.0], [34.7, 2727.0], [34.8, 2727.0], [34.9, 2727.0], [35.0, 2769.0], [35.1, 2769.0], [35.2, 2769.0], [35.3, 2769.0], [35.4, 2769.0], [35.5, 2769.0], [35.6, 2769.0], [35.7, 2769.0], [35.8, 2769.0], [35.9, 2769.0], [36.0, 2773.0], [36.1, 2773.0], [36.2, 2773.0], [36.3, 2773.0], [36.4, 2773.0], [36.5, 2773.0], [36.6, 2773.0], [36.7, 2773.0], [36.8, 2773.0], [36.9, 2773.0], [37.0, 2841.0], [37.1, 2841.0], [37.2, 2841.0], [37.3, 2841.0], [37.4, 2841.0], [37.5, 2841.0], [37.6, 2841.0], [37.7, 2841.0], [37.8, 2841.0], [37.9, 2841.0], [38.0, 2855.0], [38.1, 2855.0], [38.2, 2855.0], [38.3, 2855.0], [38.4, 2855.0], [38.5, 2855.0], [38.6, 2855.0], [38.7, 2855.0], [38.8, 2855.0], [38.9, 2855.0], [39.0, 2879.0], [39.1, 2879.0], [39.2, 2879.0], [39.3, 2879.0], [39.4, 2879.0], [39.5, 2879.0], [39.6, 2879.0], [39.7, 2879.0], [39.8, 2879.0], [39.9, 2879.0], [40.0, 2912.0], [40.1, 2912.0], [40.2, 2912.0], [40.3, 2912.0], [40.4, 2912.0], [40.5, 2912.0], [40.6, 2912.0], [40.7, 2912.0], [40.8, 2912.0], [40.9, 2912.0], [41.0, 2946.0], [41.1, 2946.0], [41.2, 2946.0], [41.3, 2946.0], [41.4, 2946.0], [41.5, 2946.0], [41.6, 2946.0], [41.7, 2946.0], [41.8, 2946.0], [41.9, 2946.0], [42.0, 2949.0], [42.1, 2949.0], [42.2, 2949.0], [42.3, 2949.0], [42.4, 2949.0], [42.5, 2949.0], [42.6, 2949.0], [42.7, 2949.0], [42.8, 2949.0], [42.9, 2949.0], [43.0, 2982.0], [43.1, 2982.0], [43.2, 2982.0], [43.3, 2982.0], [43.4, 2982.0], [43.5, 2982.0], [43.6, 2982.0], [43.7, 2982.0], [43.8, 2982.0], [43.9, 2982.0], [44.0, 3023.0], [44.1, 3023.0], [44.2, 3023.0], [44.3, 3023.0], [44.4, 3023.0], [44.5, 3023.0], [44.6, 3023.0], [44.7, 3023.0], [44.8, 3023.0], [44.9, 3023.0], [45.0, 3061.0], [45.1, 3061.0], [45.2, 3061.0], [45.3, 3061.0], [45.4, 3061.0], [45.5, 3061.0], [45.6, 3061.0], [45.7, 3061.0], [45.8, 3061.0], [45.9, 3061.0], [46.0, 3113.0], [46.1, 3113.0], [46.2, 3113.0], [46.3, 3113.0], [46.4, 3113.0], [46.5, 3113.0], [46.6, 3113.0], [46.7, 3113.0], [46.8, 3113.0], [46.9, 3113.0], [47.0, 3134.0], [47.1, 3134.0], [47.2, 3134.0], [47.3, 3134.0], [47.4, 3134.0], [47.5, 3134.0], [47.6, 3134.0], [47.7, 3134.0], [47.8, 3134.0], [47.9, 3134.0], [48.0, 3214.0], [48.1, 3214.0], [48.2, 3214.0], [48.3, 3214.0], [48.4, 3214.0], [48.5, 3214.0], [48.6, 3214.0], [48.7, 3214.0], [48.8, 3214.0], [48.9, 3214.0], [49.0, 3218.0], [49.1, 3218.0], [49.2, 3218.0], [49.3, 3218.0], [49.4, 3218.0], [49.5, 3218.0], [49.6, 3218.0], [49.7, 3218.0], [49.8, 3218.0], [49.9, 3218.0], [50.0, 3229.0], [50.1, 3229.0], [50.2, 3229.0], [50.3, 3229.0], [50.4, 3229.0], [50.5, 3229.0], [50.6, 3229.0], [50.7, 3229.0], [50.8, 3229.0], [50.9, 3229.0], [51.0, 3242.0], [51.1, 3242.0], [51.2, 3242.0], [51.3, 3242.0], [51.4, 3242.0], [51.5, 3242.0], [51.6, 3242.0], [51.7, 3242.0], [51.8, 3242.0], [51.9, 3242.0], [52.0, 3275.0], [52.1, 3275.0], [52.2, 3275.0], [52.3, 3275.0], [52.4, 3275.0], [52.5, 3275.0], [52.6, 3275.0], [52.7, 3275.0], [52.8, 3275.0], [52.9, 3275.0], [53.0, 3300.0], [53.1, 3300.0], [53.2, 3300.0], [53.3, 3300.0], [53.4, 3300.0], [53.5, 3300.0], [53.6, 3300.0], [53.7, 3300.0], [53.8, 3300.0], [53.9, 3300.0], [54.0, 3399.0], [54.1, 3399.0], [54.2, 3399.0], [54.3, 3399.0], [54.4, 3399.0], [54.5, 3399.0], [54.6, 3399.0], [54.7, 3399.0], [54.8, 3399.0], [54.9, 3399.0], [55.0, 3405.0], [55.1, 3405.0], [55.2, 3405.0], [55.3, 3405.0], [55.4, 3405.0], [55.5, 3405.0], [55.6, 3405.0], [55.7, 3405.0], [55.8, 3405.0], [55.9, 3405.0], [56.0, 3688.0], [56.1, 3688.0], [56.2, 3688.0], [56.3, 3688.0], [56.4, 3688.0], [56.5, 3688.0], [56.6, 3688.0], [56.7, 3688.0], [56.8, 3688.0], [56.9, 3688.0], [57.0, 3691.0], [57.1, 3691.0], [57.2, 3691.0], [57.3, 3691.0], [57.4, 3691.0], [57.5, 3691.0], [57.6, 3691.0], [57.7, 3691.0], [57.8, 3691.0], [57.9, 3691.0], [58.0, 3884.0], [58.1, 3884.0], [58.2, 3884.0], [58.3, 3884.0], [58.4, 3884.0], [58.5, 3884.0], [58.6, 3884.0], [58.7, 3884.0], [58.8, 3884.0], [58.9, 3884.0], [59.0, 4070.0], [59.1, 4070.0], [59.2, 4070.0], [59.3, 4070.0], [59.4, 4070.0], [59.5, 4070.0], [59.6, 4070.0], [59.7, 4070.0], [59.8, 4070.0], [59.9, 4070.0], [60.0, 4097.0], [60.1, 4097.0], [60.2, 4097.0], [60.3, 4097.0], [60.4, 4097.0], [60.5, 4097.0], [60.6, 4097.0], [60.7, 4097.0], [60.8, 4097.0], [60.9, 4097.0], [61.0, 4220.0], [61.1, 4220.0], [61.2, 4220.0], [61.3, 4220.0], [61.4, 4220.0], [61.5, 4220.0], [61.6, 4220.0], [61.7, 4220.0], [61.8, 4220.0], [61.9, 4220.0], [62.0, 4277.0], [62.1, 4277.0], [62.2, 4277.0], [62.3, 4277.0], [62.4, 4277.0], [62.5, 4277.0], [62.6, 4277.0], [62.7, 4277.0], [62.8, 4277.0], [62.9, 4277.0], [63.0, 4721.0], [63.1, 4721.0], [63.2, 4721.0], [63.3, 4721.0], [63.4, 4721.0], [63.5, 4721.0], [63.6, 4721.0], [63.7, 4721.0], [63.8, 4721.0], [63.9, 4721.0], [64.0, 4735.0], [64.1, 4735.0], [64.2, 4735.0], [64.3, 4735.0], [64.4, 4735.0], [64.5, 4735.0], [64.6, 4735.0], [64.7, 4735.0], [64.8, 4735.0], [64.9, 4735.0], [65.0, 4801.0], [65.1, 4801.0], [65.2, 4801.0], [65.3, 4801.0], [65.4, 4801.0], [65.5, 4801.0], [65.6, 4801.0], [65.7, 4801.0], [65.8, 4801.0], [65.9, 4801.0], [66.0, 4948.0], [66.1, 4948.0], [66.2, 4948.0], [66.3, 4948.0], [66.4, 4948.0], [66.5, 4948.0], [66.6, 4948.0], [66.7, 4948.0], [66.8, 4948.0], [66.9, 4948.0], [67.0, 4967.0], [67.1, 4967.0], [67.2, 4967.0], [67.3, 4967.0], [67.4, 4967.0], [67.5, 4967.0], [67.6, 4967.0], [67.7, 4967.0], [67.8, 4967.0], [67.9, 4967.0], [68.0, 5176.0], [68.1, 5176.0], [68.2, 5176.0], [68.3, 5176.0], [68.4, 5176.0], [68.5, 5176.0], [68.6, 5176.0], [68.7, 5176.0], [68.8, 5176.0], [68.9, 5176.0], [69.0, 5257.0], [69.1, 5257.0], [69.2, 5257.0], [69.3, 5257.0], [69.4, 5257.0], [69.5, 5257.0], [69.6, 5257.0], [69.7, 5257.0], [69.8, 5257.0], [69.9, 5257.0], [70.0, 5678.0], [70.1, 5678.0], [70.2, 5678.0], [70.3, 5678.0], [70.4, 5678.0], [70.5, 5678.0], [70.6, 5678.0], [70.7, 5678.0], [70.8, 5678.0], [70.9, 5678.0], [71.0, 5809.0], [71.1, 5809.0], [71.2, 5809.0], [71.3, 5809.0], [71.4, 5809.0], [71.5, 5809.0], [71.6, 5809.0], [71.7, 5809.0], [71.8, 5809.0], [71.9, 5809.0], [72.0, 5833.0], [72.1, 5833.0], [72.2, 5833.0], [72.3, 5833.0], [72.4, 5833.0], [72.5, 5833.0], [72.6, 5833.0], [72.7, 5833.0], [72.8, 5833.0], [72.9, 5833.0], [73.0, 5838.0], [73.1, 5838.0], [73.2, 5838.0], [73.3, 5838.0], [73.4, 5838.0], [73.5, 5838.0], [73.6, 5838.0], [73.7, 5838.0], [73.8, 5838.0], [73.9, 5838.0], [74.0, 6051.0], [74.1, 6051.0], [74.2, 6051.0], [74.3, 6051.0], [74.4, 6051.0], [74.5, 6051.0], [74.6, 6051.0], [74.7, 6051.0], [74.8, 6051.0], [74.9, 6051.0], [75.0, 6055.0], [75.1, 6055.0], [75.2, 6055.0], [75.3, 6055.0], [75.4, 6055.0], [75.5, 6055.0], [75.6, 6055.0], [75.7, 6055.0], [75.8, 6055.0], [75.9, 6055.0], [76.0, 6074.0], [76.1, 6074.0], [76.2, 6074.0], [76.3, 6074.0], [76.4, 6074.0], [76.5, 6074.0], [76.6, 6074.0], [76.7, 6074.0], [76.8, 6074.0], [76.9, 6074.0], [77.0, 6096.0], [77.1, 6096.0], [77.2, 6096.0], [77.3, 6096.0], [77.4, 6096.0], [77.5, 6096.0], [77.6, 6096.0], [77.7, 6096.0], [77.8, 6096.0], [77.9, 6096.0], [78.0, 6471.0], [78.1, 6471.0], [78.2, 6471.0], [78.3, 6471.0], [78.4, 6471.0], [78.5, 6471.0], [78.6, 6471.0], [78.7, 6471.0], [78.8, 6471.0], [78.9, 6471.0], [79.0, 6563.0], [79.1, 6563.0], [79.2, 6563.0], [79.3, 6563.0], [79.4, 6563.0], [79.5, 6563.0], [79.6, 6563.0], [79.7, 6563.0], [79.8, 6563.0], [79.9, 6563.0], [80.0, 6634.0], [80.1, 6634.0], [80.2, 6634.0], [80.3, 6634.0], [80.4, 6634.0], [80.5, 6634.0], [80.6, 6634.0], [80.7, 6634.0], [80.8, 6634.0], [80.9, 6634.0], [81.0, 6650.0], [81.1, 6650.0], [81.2, 6650.0], [81.3, 6650.0], [81.4, 6650.0], [81.5, 6650.0], [81.6, 6650.0], [81.7, 6650.0], [81.8, 6650.0], [81.9, 6650.0], [82.0, 6700.0], [82.1, 6700.0], [82.2, 6700.0], [82.3, 6700.0], [82.4, 6700.0], [82.5, 6700.0], [82.6, 6700.0], [82.7, 6700.0], [82.8, 6700.0], [82.9, 6700.0], [83.0, 6778.0], [83.1, 6778.0], [83.2, 6778.0], [83.3, 6778.0], [83.4, 6778.0], [83.5, 6778.0], [83.6, 6778.0], [83.7, 6778.0], [83.8, 6778.0], [83.9, 6778.0], [84.0, 6828.0], [84.1, 6828.0], [84.2, 6828.0], [84.3, 6828.0], [84.4, 6828.0], [84.5, 6828.0], [84.6, 6828.0], [84.7, 6828.0], [84.8, 6828.0], [84.9, 6828.0], [85.0, 6884.0], [85.1, 6884.0], [85.2, 6884.0], [85.3, 6884.0], [85.4, 6884.0], [85.5, 6884.0], [85.6, 6884.0], [85.7, 6884.0], [85.8, 6884.0], [85.9, 6884.0], [86.0, 7066.0], [86.1, 7066.0], [86.2, 7066.0], [86.3, 7066.0], [86.4, 7066.0], [86.5, 7066.0], [86.6, 7066.0], [86.7, 7066.0], [86.8, 7066.0], [86.9, 7066.0], [87.0, 7079.0], [87.1, 7079.0], [87.2, 7079.0], [87.3, 7079.0], [87.4, 7079.0], [87.5, 7079.0], [87.6, 7079.0], [87.7, 7079.0], [87.8, 7079.0], [87.9, 7079.0], [88.0, 7118.0], [88.1, 7118.0], [88.2, 7118.0], [88.3, 7118.0], [88.4, 7118.0], [88.5, 7118.0], [88.6, 7118.0], [88.7, 7118.0], [88.8, 7118.0], [88.9, 7118.0], [89.0, 10803.0], [89.1, 10803.0], [89.2, 10803.0], [89.3, 10803.0], [89.4, 10803.0], [89.5, 10803.0], [89.6, 10803.0], [89.7, 10803.0], [89.8, 10803.0], [89.9, 10803.0], [90.0, 11123.0], [90.1, 11123.0], [90.2, 11123.0], [90.3, 11123.0], [90.4, 11123.0], [90.5, 11123.0], [90.6, 11123.0], [90.7, 11123.0], [90.8, 11123.0], [90.9, 11123.0], [91.0, 11486.0], [91.1, 11486.0], [91.2, 11486.0], [91.3, 11486.0], [91.4, 11486.0], [91.5, 11486.0], [91.6, 11486.0], [91.7, 11486.0], [91.8, 11486.0], [91.9, 11486.0], [92.0, 13533.0], [92.1, 13533.0], [92.2, 13533.0], [92.3, 13533.0], [92.4, 13533.0], [92.5, 13533.0], [92.6, 13533.0], [92.7, 13533.0], [92.8, 13533.0], [92.9, 13533.0], [93.0, 13565.0], [93.1, 13565.0], [93.2, 13565.0], [93.3, 13565.0], [93.4, 13565.0], [93.5, 13565.0], [93.6, 13565.0], [93.7, 13565.0], [93.8, 13565.0], [93.9, 13565.0], [94.0, 13777.0], [94.1, 13777.0], [94.2, 13777.0], [94.3, 13777.0], [94.4, 13777.0], [94.5, 13777.0], [94.6, 13777.0], [94.7, 13777.0], [94.8, 13777.0], [94.9, 13777.0], [95.0, 13898.0], [95.1, 13898.0], [95.2, 13898.0], [95.3, 13898.0], [95.4, 13898.0], [95.5, 13898.0], [95.6, 13898.0], [95.7, 13898.0], [95.8, 13898.0], [95.9, 13898.0], [96.0, 13938.0], [96.1, 13938.0], [96.2, 13938.0], [96.3, 13938.0], [96.4, 13938.0], [96.5, 13938.0], [96.6, 13938.0], [96.7, 13938.0], [96.8, 13938.0], [96.9, 13938.0], [97.0, 14188.0], [97.1, 14188.0], [97.2, 14188.0], [97.3, 14188.0], [97.4, 14188.0], [97.5, 14188.0], [97.6, 14188.0], [97.7, 14188.0], [97.8, 14188.0], [97.9, 14188.0], [98.0, 14360.0], [98.1, 14360.0], [98.2, 14360.0], [98.3, 14360.0], [98.4, 14360.0], [98.5, 14360.0], [98.6, 14360.0], [98.7, 14360.0], [98.8, 14360.0], [98.9, 14360.0], [99.0, 15143.0], [99.1, 15143.0], [99.2, 15143.0], [99.3, 15143.0], [99.4, 15143.0], [99.5, 15143.0], [99.6, 15143.0], [99.7, 15143.0], [99.8, 15143.0], [99.9, 15143.0]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 26.0, "series": [{"data": [[8900.0, 1.0], [9000.0, 1.0], [9600.0, 1.0], [9400.0, 1.0], [600.0, 3.0], [10100.0, 1.0], [10500.0, 1.0], [10300.0, 1.0], [10400.0, 2.0], [700.0, 5.0], [11100.0, 1.0], [11000.0, 1.0], [800.0, 3.0], [1100.0, 1.0], [1400.0, 1.0], [22300.0, 1.0], [100.0, 1.0], [1900.0, 2.0], [2300.0, 2.0], [2500.0, 1.0], [2700.0, 2.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 2.0], [3300.0, 2.0], [3400.0, 4.0], [3500.0, 1.0], [3600.0, 3.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 15.0], [4000.0, 26.0], [8000.0, 2.0], [500.0, 2.0]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[4500.0, 1.0], [4700.0, 1.0], [4900.0, 2.0], [5000.0, 1.0], [5200.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [7000.0, 1.0], [7200.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [7900.0, 2.0], [8200.0, 1.0], [8300.0, 1.0], [8400.0, 1.0], [8600.0, 1.0], [8700.0, 1.0], [8800.0, 3.0], [9000.0, 1.0], [9100.0, 1.0], [9300.0, 1.0], [9600.0, 1.0], [10000.0, 1.0], [10200.0, 1.0], [9900.0, 1.0], [10400.0, 1.0], [10500.0, 1.0], [10800.0, 3.0], [11200.0, 5.0], [11000.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [11300.0, 2.0], [11700.0, 3.0], [11600.0, 1.0], [11900.0, 2.0], [12000.0, 1.0], [12200.0, 1.0], [12300.0, 1.0], [12500.0, 3.0], [12600.0, 1.0], [12700.0, 1.0], [12400.0, 2.0], [12900.0, 2.0], [13000.0, 3.0], [13100.0, 2.0], [12800.0, 2.0], [13200.0, 2.0], [13400.0, 2.0], [13600.0, 2.0], [13700.0, 2.0], [13500.0, 1.0], [13800.0, 1.0], [13900.0, 2.0], [14100.0, 1.0], [14400.0, 2.0], [14500.0, 1.0], [14800.0, 2.0], [14600.0, 2.0], [14700.0, 1.0], [15000.0, 2.0], [15100.0, 2.0], [15200.0, 1.0], [15300.0, 2.0], [15400.0, 1.0], [15700.0, 1.0], [26700.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 1.0], [9200.0, 1.0], [600.0, 9.0], [10500.0, 1.0], [700.0, 1.0], [11600.0, 1.0], [100.0, 3.0], [1900.0, 1.0], [2100.0, 4.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 3.0], [2700.0, 3.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 4.0], [3300.0, 5.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 4.0], [3800.0, 4.0], [3900.0, 18.0], [4000.0, 17.0], [400.0, 2.0], [500.0, 7.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[600.0, 1.0], [700.0, 2.0], [800.0, 2.0], [900.0, 3.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 4.0], [1500.0, 2.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2700.0, 4.0], [2800.0, 3.0], [2900.0, 4.0], [3000.0, 2.0], [3100.0, 2.0], [3200.0, 5.0], [3300.0, 2.0], [3400.0, 1.0], [3600.0, 2.0], [3800.0, 1.0], [4000.0, 2.0], [4200.0, 2.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 2.0], [5100.0, 1.0], [5200.0, 1.0], [5600.0, 1.0], [5800.0, 3.0], [6000.0, 4.0], [6400.0, 1.0], [6500.0, 1.0], [6600.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [7000.0, 2.0], [7100.0, 1.0], [10800.0, 1.0], [11100.0, 1.0], [11400.0, 1.0], [13500.0, 2.0], [13800.0, 1.0], [13700.0, 1.0], [13900.0, 1.0], [14100.0, 1.0], [14300.0, 1.0], [15100.0, 1.0], [400.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 26700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 238.0, "series": [{"data": [[0.0, 9.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 53.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 238.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 66.05250000000001, "minX": 1.73943198E12, "maxY": 66.05250000000001, "series": [{"data": [[1.73943198E12, 66.05250000000001]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943198E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 85.0, "minX": 1.0, "maxY": 26762.0, "series": [{"data": [[35.0, 9681.0], [63.0, 8060.0], [67.0, 4046.0], [66.0, 5055.0], [64.0, 4070.0], [4.0, 173.0], [71.0, 3968.0], [70.0, 4051.5], [69.0, 4051.0], [75.0, 3983.0], [73.0, 3981.0], [72.0, 3934.5], [77.0, 3944.5], [76.0, 3970.5], [83.0, 3920.0], [82.0, 3900.0], [80.0, 3892.0], [87.0, 4010.6666666666665], [84.0, 4065.0], [91.0, 4037.75], [90.0, 4041.0], [88.0, 4015.0], [94.0, 3400.75], [93.0, 3598.142857142857], [92.0, 3980.7999999999997], [100.0, 2086.8500000000004], [7.0, 10289.0], [13.0, 591.0], [16.0, 523.0], [1.0, 22337.0], [18.0, 667.5], [20.0, 7994.75], [24.0, 9705.0], [25.0, 10338.0], [26.0, 10508.0], [30.0, 2368.0], [31.0, 4475.666666666666]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[72.11000000000001, 4172.89]], "isOverall": false, "label": "cancellation-Aggregated", "isController": false}, {"data": [[2.0, 15782.0], [3.0, 15401.0], [4.0, 15331.0], [5.0, 15117.0], [6.0, 14623.0], [7.0, 15394.0], [8.0, 15203.0], [9.0, 15031.0], [10.0, 15141.0], [11.0, 15085.0], [12.0, 14718.0], [13.0, 14401.0], [14.0, 14876.0], [15.0, 14649.0], [16.0, 14815.0], [17.0, 14135.0], [18.0, 14559.0], [19.0, 13903.0], [20.0, 14427.0], [21.0, 13827.0], [22.0, 13496.0], [23.0, 13730.0], [24.0, 13576.0], [25.0, 13979.0], [26.0, 13658.0], [27.0, 13165.0], [28.0, 13708.0], [29.0, 13699.0], [30.0, 13473.0], [31.0, 12831.0], [33.0, 13251.0], [32.0, 13084.0], [35.0, 13039.0], [34.0, 13260.0], [37.0, 13112.0], [36.0, 12836.0], [39.0, 12975.0], [38.0, 13024.0], [41.0, 12467.0], [40.0, 12906.0], [43.0, 12739.0], [42.0, 12465.0], [45.0, 12540.0], [44.0, 12693.0], [47.0, 12560.0], [46.0, 12515.0], [49.0, 12030.0], [48.0, 12241.0], [51.0, 11915.0], [50.0, 12330.0], [53.0, 11775.0], [52.0, 11974.0], [55.0, 11644.0], [54.0, 11712.0], [57.0, 11241.0], [56.0, 11374.0], [59.0, 11239.0], [58.0, 11100.0], [61.0, 10950.0], [60.0, 11203.0], [63.0, 11044.0], [62.0, 11705.0], [67.0, 10868.0], [66.0, 11265.0], [65.0, 11325.0], [64.0, 11295.0], [71.0, 9925.0], [70.0, 10550.0], [69.0, 10879.0], [68.0, 10826.0], [75.0, 10094.0], [74.0, 10235.0], [73.0, 9627.0], [72.0, 10493.0], [79.0, 8896.0], [78.0, 9015.0], [77.0, 9190.0], [76.0, 9363.0], [83.0, 8627.0], [82.0, 8764.0], [81.0, 8807.0], [80.0, 8899.0], [87.0, 7819.0], [86.0, 7992.0], [85.0, 7999.0], [84.0, 8440.0], [91.0, 7282.0], [90.0, 7522.0], [89.0, 8266.0], [88.0, 8327.0], [95.0, 4712.0], [94.0, 5763.0], [93.0, 6154.0], [92.0, 7007.0], [99.0, 4911.0], [98.0, 5220.0], [97.0, 4534.0], [96.0, 5055.0], [100.0, 4981.0], [1.0, 26762.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[50.5, 11603.649999999998]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[2.0, 11629.0], [3.0, 85.0], [4.0, 182.0], [5.0, 152.0], [6.0, 10516.0], [7.0, 443.0], [8.0, 492.0], [9.0, 544.0], [10.0, 548.0], [11.0, 537.0], [12.0, 530.0], [13.0, 616.0], [14.0, 603.0], [15.0, 594.0], [16.0, 558.0], [17.0, 705.0], [18.0, 663.0], [19.0, 653.0], [20.0, 619.0], [21.0, 656.0], [22.0, 641.0], [23.0, 610.0], [24.0, 2455.0], [25.0, 519.0], [26.0, 2726.0], [27.0, 605.0], [28.0, 2875.0], [29.0, 3168.0], [30.0, 3396.0], [31.0, 9203.0], [33.0, 2106.0], [32.0, 1948.0], [35.0, 2116.0], [34.0, 2118.0], [37.0, 2237.0], [36.0, 2156.0], [39.0, 2269.0], [38.0, 2277.0], [41.0, 2473.0], [40.0, 2505.0], [43.0, 2688.0], [42.0, 2644.0], [45.0, 2764.0], [44.0, 2678.0], [47.0, 2990.0], [46.0, 2760.0], [49.0, 3162.0], [48.0, 3084.0], [51.0, 3760.0], [50.0, 3544.0], [53.0, 3727.0], [52.0, 3758.0], [55.0, 3912.0], [54.0, 3813.0], [57.0, 3918.0], [56.0, 3937.0], [59.0, 3966.0], [58.0, 3926.0], [61.0, 3953.0], [60.0, 3964.0], [63.0, 3985.0], [62.0, 3947.0], [67.0, 4062.0], [66.0, 4062.0], [65.0, 4043.0], [64.0, 4001.0], [71.0, 4026.0], [70.0, 4074.0], [69.0, 4052.0], [68.0, 4053.0], [75.0, 3983.0], [74.0, 3988.0], [73.0, 3992.0], [72.0, 3977.0], [79.0, 3867.0], [78.0, 3886.0], [77.0, 3947.0], [76.0, 3987.0], [83.0, 3887.0], [82.0, 3909.0], [81.0, 3914.0], [80.0, 3903.0], [87.0, 4064.0], [86.0, 4047.0], [85.0, 4053.0], [84.0, 4068.0], [91.0, 4022.0], [90.0, 4043.0], [89.0, 4008.0], [88.0, 4036.0], [95.0, 3373.0], [94.0, 3465.0], [93.0, 3719.0], [92.0, 4071.0], [99.0, 3168.0], [98.0, 3304.0], [97.0, 3319.0], [96.0, 3317.0], [100.0, 3121.0], [1.0, 148.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[50.5, 2995.6700000000005]], "isOverall": false, "label": "flight-schedule-Aggregated", "isController": false}, {"data": [[66.0, 10803.0], [64.0, 11304.5], [20.0, 14274.0], [95.0, 4948.0], [94.0, 5467.5], [93.0, 5950.166666666667], [92.0, 6735.5], [98.0, 4981.333333333333], [100.0, 2312.9384615384615], [25.0, 13786.5], [7.0, 15143.0], [30.0, 13565.0]], "isOverall": false, "label": "book-a-flight", "isController": false}, {"data": [[91.1, 4435.089999999999]], "isOverall": false, "label": "book-a-flight-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2555.0, "minX": 1.73943198E12, "maxY": 267864.45, "series": [{"data": [[1.73943198E12, 267864.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73943198E12, 2555.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943198E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2995.6700000000005, "minX": 1.73943198E12, "maxY": 11603.649999999998, "series": [{"data": [[1.73943198E12, 4172.89]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[1.73943198E12, 11603.649999999998]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73943198E12, 2995.6700000000005]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[1.73943198E12, 4435.089999999999]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943198E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2795.1100000000006, "minX": 1.73943198E12, "maxY": 10041.839999999997, "series": [{"data": [[1.73943198E12, 3412.51]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[1.73943198E12, 10041.839999999997]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73943198E12, 2795.1100000000006]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[1.73943198E12, 3834.2200000000007]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943198E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73943198E12, "maxY": 1413.52, "series": [{"data": [[1.73943198E12, 0.0]], "isOverall": false, "label": "cancellation", "isController": false}, {"data": [[1.73943198E12, 1413.52]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.73943198E12, 0.0]], "isOverall": false, "label": "flight-schedule", "isController": false}, {"data": [[1.73943198E12, 1413.52]], "isOverall": false, "label": "book-a-flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943198E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 85.0, "minX": 1.73943198E12, "maxY": 22337.0, "series": [{"data": [[1.73943198E12, 22337.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73943198E12, 85.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73943198E12, 7077.700000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73943198E12, 14358.280000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73943198E12, 3661.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73943198E12, 10788.649999999996]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943198E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 540.5, "minX": 1.0, "maxY": 11629.0, "series": [{"data": [[16.0, 540.5], [1.0, 11629.0], [2.0, 11242.5], [17.0, 4043.0], [18.0, 3123.0], [20.0, 3349.5], [21.0, 3465.0], [11.0, 3903.0], [23.0, 2524.5], [24.0, 2547.0], [27.0, 663.0], [15.0, 4071.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 502.0, "minX": 1.0, "maxY": 4025.0, "series": [{"data": [[16.0, 502.0], [1.0, 4025.0], [2.0, 2091.5], [17.0, 4004.0], [18.0, 3077.0], [20.0, 3284.0], [21.0, 3419.0], [11.0, 3863.0], [23.0, 2420.5], [24.0, 2233.5], [27.0, 624.0], [15.0, 4008.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.73943198E12, "maxY": 5.0, "series": [{"data": [[1.73943198E12, 5.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943198E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.73943198E12, "maxY": 5.0, "series": [{"data": [[1.73943198E12, 5.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73943198E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.73943198E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.73943198E12, 1.6666666666666667]], "isOverall": false, "label": "cancellation-success", "isController": false}, {"data": [[1.73943198E12, 1.6666666666666667]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.73943198E12, 1.6666666666666667]], "isOverall": false, "label": "book-a-flight-success", "isController": false}, {"data": [[1.73943198E12, 1.6666666666666667]], "isOverall": false, "label": "flight-schedule-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943198E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.73943198E12, "maxY": 6.666666666666667, "series": [{"data": [[1.73943198E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73943198E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

